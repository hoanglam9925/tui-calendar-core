{"version":3,"file":"main.0ad0248eccfd8bf6bc47.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAIA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;;AAMA;;AAEA;AACA;AAAA;;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;;AAEA;AAAA;AACA;AAAA;AAAA;AADA;;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA","sources":["webpack://@toast-ui/calendar/./stories/main.stories.tsx"],"sourcesContent":["import { h } from 'preact';\n\nimport type { Story } from '@storybook/preact';\n\nimport { Main } from '@src/components/view/main';\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport { cls } from '@src/helpers/css';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\nimport { createRandomEventModelsForMonth } from '@stories/util/randomEvents';\n\nimport type { PropsWithChildren } from '@t/components/common';\n\nexport default { title: 'Views/Main', component: Main };\n\nconst style = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  bottom: 5,\n  top: 5,\n};\n\nconst Wrapper = ({ children }: PropsWithChildren) => (\n  <div className={cls('layout')} style={style}>\n    {children}\n  </div>\n);\n\nconst events = createRandomEventModelsForMonth();\n\nconst Toolbar = () => {\n  const { changeView } = useDispatch('view');\n\n  return (\n    <div>\n      <button onClick={() => changeView('month')}>Month</button>\n      <button onClick={() => changeView('week')}>Week</button>\n      <button onClick={() => changeView('day')}>Day</button>\n    </div>\n  );\n};\n\nconst Template: Story = (args) => (\n  <ProviderWrapper options={args.options} events={args.events}>\n    <Wrapper>\n      <Toolbar />\n      <Main />\n    </Wrapper>\n  </ProviderWrapper>\n);\n\nexport const Default = Template.bind({});\nDefault.args = {\n  events,\n  options: { useFormPopup: true, useDetailPopup: false },\n};\n"],"names":[],"sourceRoot":""}