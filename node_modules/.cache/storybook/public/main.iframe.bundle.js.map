{"version":3,"file":"main.iframe.bundle.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AApEA;AAsEA;;;;;;;;;;;;;;;;;;;;AClFA;AAEA;AACA;AACA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AAGA;AACA;AACA;AACA;AACA;AAGA;;AAYA;AAIA;AACA;;AAEA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AAAA;;AACA;AACA;;AAEA;AACA;;AAEA;AAMA;AAAA;AACA;;AAEA;AACA;AACA;;A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;AACA;AAOA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;;AACA;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAIA;;;;;;;;;;;;;;;;;ACrCA;AAEA;AAIA;AACA;AADA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAGA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;;AAIA;AAAA;AACA;AAAA;AAAA;AADA;;AAGA;AACA;AAMA;AACA;AAEA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAGA;AACA;AAFA;AAIA;AAlBA;AAoBA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;AAeA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAIA;;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;;AACA;AAAA;;AACA;AACA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAFA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpMA;AAGA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AA2DA;;;;;;;;;;;;;;;;;;ACvJA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAKA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;;AACA;AAAA;;AACA;AAAA;;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAIA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AAKA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;AACA;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AASA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;AC7OA;AAEA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AAAA;AACA;AAAA;AAAA;AADA;;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;ACjDA;AAGA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAFA;;AAKA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;;AACA;AAAA;;AAEA;;AAEA;AAAA;;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAEA;AACA;AASA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAHA;AAMA;AACA;AADA;AAQA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AAcA;;;;;;;;;;;;;;;;;;;;;ACpGA;AAEA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAXA;AAkBA;;;;;;;;;;;;;;;;;;;;AC/CA;AAGA;AACA;AAEA;AACA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;;AAKA;AAAA;AACA;AAAA;AAAA;AADA;;AAGA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AAEA;AACA;AACA;AAEA;AACA;AAUA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA;AAEA;AACA;AACA;AADA;AAFA;AAOA;AADA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAKA;AAEA;AACA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AADA;AASA;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;AAEA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAaA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACtLA;AACA;AAEA;AACA;;AAKA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AAIA;;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AARA;AAWA;AAGA;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAKA;AAAA;AAAA;AAAA;;AACA;AACA;AAAA;AADA;AAAA;;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AAMA;;AAOA;AAAA;AAAA;AACA;AAEA;AAAA;AAUA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAKA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1FA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AACA;AACA;AAIA;AAMA;AAAA;;AACA;AACA;AACA;AAFA;AAAA;AAAA;;AAKA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;;AAeA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AAEA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AAAA;;AACA;;AAEA;AACA;AAAA;AACA;AACA;;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AACA;AAFA;AAFA;AASA;;;;;;;;;;;;;;;;;;;;;;;AC7GA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAFA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAMA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;ACpDA;AAEA;AACA;AAEA;AAIA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;AA0BA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AAUA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AAGA;AACA;AACA;AACA;AAJA;AASA;;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AAKA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;;AAIA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;AACA;AACA;AACA;AALA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtNA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAQA;AACA;AACA;AAIA;AACA;AACA;AAFA;AAUA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA;AACA;AACA;AAAA;;AAEA;AAAA;AAAA;;AAEA;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AAA;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAMA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAAA;;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrMA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AACA;AAAA;;AAMA;AACA;AACA;;AAEA;AACA;AAAA;;AAMA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AACA;;AACA;AACA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAGA;;AACA;AAOA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;AAAA;AAAA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;AASA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;;AAEA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;;AAEA;AAQA;AACA;AACA;AACA;;AAEA;AAKA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAOA;;AAKA;AACA;AACA;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrUA;AACA;AACA;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AAAA;AAAA;;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAMA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAKA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7PA;AAWA;AACA;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAKA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;AC9MA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GA;AACA;AAUA;AACA;AACA;AAEA;AACA;;AAYA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;;AACA;AAEA;AAAA;AAAA;AAAA;;AACA;;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAKA;AACA;AACA;;AAEA;;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AASA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AACA;AAAA;;AAEA;AACA;AACA;;AAEA;AAMA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChRA;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;;;;;AACA;AAAA;;AAAA;;AAAA;;AACA;AAEA;AAAA;;AAEA;AACA;AACA;;AAEA;;AATA;AAUA;;;;AAEA;AACA;AACA;;;;AAfA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AAEA;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXA;AAAA;AAAA;AAAA;;AAcA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;;AAEA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;AA2CA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACzNA;AAIA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBA;AACA;AACA;AACA;AACA;AACA;AALA;;AASA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;;AACA;AACA;;AAEA;AACA;AAnBA;AAqBA;;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AAEA;AAEA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAIA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAMA;AAAA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAKA;AAAA;AAAA;AAAA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAIA;AAEA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvLA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAMA;AAKA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;;AAMA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAEA;AACA;AACA;;AACA;AACA;AAEA;AAAA;AAFA;;AAMA;AACA;AACA;AACA;AAKA;AACA;AARA;;AAUA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AACA;;AAKA;AAEA;AAAA;AAEA;AAGA;AAAA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AAGA;AACA;AAAA;;AAKA;AACA;AACA;AAAA;AAAA;;AAEA;AAIA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;;AAWA;AACA;AACA;AAAA;AAAA;;AAEA;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;AACA;AACA;AACA;AACA;AAUA;AACA;;AAOA;AACA;AAAA;AAEA;AAOA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAMA;;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACtNA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AAMA;AAAA;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AAEA;AACA;;AAIA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;;AACA;AAIA;AAAA;AAJA;AAAA;AAAA;AAAA;;AAOA;AACA;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5DA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;;AAUA;AAuDA;AACA;AACA;AAGA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;;;;AAOA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AAEA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATA;AAWA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;AAGA;AACA;AACA;;;AA3UA;AAoEA;AACA;AAFA;AAnEA;AA6UA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChWA;AAEA;AACA;AAwBA;AAsBA;AACA;AACA;AACA;AACA;;AACA;AAKA;AAGA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAGA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AAEA;;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAGA;AACA;;AAEA;AACA;AACA;;;AAGA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxHA;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;AAAA;;AAEA;AAKA;;AAEA;AACA;;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AAEA;AACA;AACA;AACA;AACA;AACA;AAaA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AADA;AADA;AASA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;;AAEA;AACA;AAKA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AApPA;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;ACEA;AACA;AAIA;AAEA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;;ACbA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AA9BA;AAgCA;;;;;;;;;;;;;;;;;ACtCA;AACA;AAIA;AAEA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;;ACXA;AACA;AAIA;AAEA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAKA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAKA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AAAA;;AACA;AACA;;AAGA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;AACA;;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvWA;AAEA;AACA;AACA;AACA;AAKA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA;AAMA;AAEA;AAIA;AACA;AAFA;AAKA;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAtCA;AAyCA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;;AAOA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;;AAEA;AASA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9eA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;AACA;AACA;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAAA;;AACA;AACA;AAIA;AACA;;AAEA;AAEA;AACA;AAEA;AACA;AAGA;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAMA;;AAEA;AAIA;AAEA;AACA;;AAEA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;AAUA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxJA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAMA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAFA;AAYA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AAAA;;AACA;;AADA;AAAA;AAAA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AAEA;AACA;;;AAEA;AAAA;;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AAEA;;AACA;AAEA;AAAA;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AApQA;AAAA;AAAA;AAAA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AACA;AAAA;AAAA;AAAA;;AACA;;AAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AAIA;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAGA;;AACA;AACA;;AACA;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;;AAAA;;AACA;AAAA;;AAAA;;AACA;AACA;AAFA;AAGA;;AAJA;AAAA;AAOA;AAAA;;AAAA;;AACA;AAAA;;AAAA;;AACA;AACA;AAFA;AAGA;;AAJA;AAAA;AAOA;AAAA;;AAAA;;AACA;AAAA;;AAAA;;AACA;AACA;AAFA;AAGA;;AAJA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AA2BA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AASA;;AAEA;AACA;AAZA;AAAA;AAAA;AAeA;;AAEA;AACA;AAlBA;AAAA;AAAA;AAuBA;;AAAA;AADA;AACA;;AACA;;AAEA;AACA;AA3BA;AAAA;AAAA;AA8BA;;AAEA;AACA;AAjCA;;AAAA;AAAA;;;;;;;;;;;;;;;;AC1BA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACLA;AAEA;;AACA;AACA;AAAA;;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AAAA;;AAAA;AAAA;AAAA;;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACjBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAGA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAMA;AAIA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACRA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AACA;;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;ACzBA;;AAGA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChDA;;AAOA;AACA;AAEA;AACA;AACA;AAEA;AACA;AALA;AAOA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAGA;AAIA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;;AAMA;AACA;AACA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;;AAEA;AAAA;;AAEA;AAGA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;;AAEA;AAAA;AAAA;;AAOA;AAAA;AAEA;AAFA;AAAA;AAKA;AAGA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;AADA;;AAMA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAEA;AAEA;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AAQA;AATA;AAYA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AASA;AACA;AAEA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AADA;AAUA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AANA;AAfA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAEA;AAKA;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AACA;AADA;AAIA;AACA;AAEA;AACA;AADA;AAFA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAhBA;AAmBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AAEA;AAEA;AAEA;AACA;AAEA;AAIA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAPA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAhBA;AAmBA;AACA;AAIA;AACA;AAEA;AAEA;AAFA;AAFA;AAQA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAFA;AAFA;AAWA;AACA;AAEA;AAEA;AACA;AAEA;AADA;AAFA;AAFA;AAFA;AAcA;AACA;AAEA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AADA;AAUA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AANA;AAfA;AA4BA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AA1CA;AA6CA;AACA;AAEA;AAEA;AACA;AAEA;AADA;AAFA;AAFA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AA9BA;AAiCA;AACA;AAEA;AAEA;AACA;AAEA;AADA;AAFA;AAFA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AA9BA;;AAkCA;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AADA;AAFA;AAHA;AAWA;AACA;AAAA;AAAA;;AAeA;AAEA;AAEA;AACA;AACA;AAAA;AACA;;AAJA;AAOA;AACA;AACA;AAAA;AACA;;AAJA;AAQA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAzEA;AA4EA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAFA;AAgBA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAHA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AALA;AAFA;AAWA;AAbA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;AChSA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAFA;;AAKA;AAAA;AAAA;AAAA;;AACA;AAAA;;AACA;AAEA;AACA;AAFA;AAOA;AACA;;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAFA;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AA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AQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;AAEA;AACA;AAEA;;AAGA;AACA;;;;;;;;;;;;;;;;;ACnEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;AClLA;AAIA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;;AAEA;AAAA;AACA;AAAA;AAAA;AADA;;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;;AAQA;AACA;AACA;AACA;AAFA;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;AClHA;AACA;AAIA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AACA;;;;;;;;;;;;;;;ACvBA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAUA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;ACpDA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAaA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AACA;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AAEA;AACA;AAGA;AAKA;AACA;;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AADA;AADA;AAMA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAOA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;AADA;;AAMA;AAEA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjDA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;;AAEA;AACA;;AAEA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAAA;;AAAA;AAAA;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAjCA;AAoCA;AAaA;AAWA;AACA;AAAA;;AACA;AACA;AACA;AAEA;AACA;AAAA;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACjHA;;AAEA;AAOA;AAAA;;AACA;AACA;AAGA;;AAEA;AACA;;;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AAEA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AAEA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAtIA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;;AAEA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AAPA;;AAAA;AAUA;AAWA;AAUA;AACA;;AAEA;AAAA;;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACbnnFA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@toast-ui/calendar/././ sync ^\\.(","webpack://@toast-ui/calendar/./.storybook/preview.js","webpack://@toast-ui/calendar/./.storybook/preview.js-generated-config-entry.js","webpack://@toast-ui/calendar/./src/calendarContainer.tsx","webpack://@toast-ui/calendar/./src/components/dayGridCommon/dayName.tsx","webpack://@toast-ui/calendar/./src/components/dayGridCommon/gridHeader.tsx","webpack://@toast-ui/calendar/./src/components/dayGridCommon/gridSelection.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/accumulatedGridSelection.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/cellHeader.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/dayGridMonth.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/gridCell.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/gridRow.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/gridSelectionByRow.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/monthEvents.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/moreEventsButton.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/movingEventShadow.tsx","webpack://@toast-ui/calendar/./src/components/dayGridMonth/resizingGuideByRow.tsx","webpack://@toast-ui/calendar/./src/components/dayGridWeek/alldayGridRow.tsx","webpack://@toast-ui/calendar/./src/components/dayGridWeek/alldayGridSelection.tsx","webpack://@toast-ui/calendar/./src/components/dayGridWeek/gridCell.tsx","webpack://@toast-ui/calendar/./src/components/dayGridWeek/gridCells.tsx","webpack://@toast-ui/calendar/./src/components/dayGridWeek/movingEventShadow.tsx","webpack://@toast-ui/calendar/./src/components/dayGridWeek/otherGridRow.tsx","webpack://@toast-ui/calendar/./src/components/dayGridWeek/resizingEventShadow.tsx","webpack://@toast-ui/calendar/./src/components/events/backgroundEvent.tsx","webpack://@toast-ui/calendar/./src/components/events/horizontalEvent.tsx","webpack://@toast-ui/calendar/./src/components/events/horizontalEventResizeIcon.tsx","webpack://@toast-ui/calendar/./src/components/events/timeEvent.tsx","webpack://@toast-ui/calendar/./src/components/layout.tsx","webpack://@toast-ui/calendar/./src/components/panel.tsx","webpack://@toast-ui/calendar/./src/components/panelResizer.tsx","webpack://@toast-ui/calendar/./src/components/popup/calendarDropdownMenu.tsx","webpack://@toast-ui/calendar/./src/components/popup/calendarSelector.tsx","webpack://@toast-ui/calendar/./src/components/popup/closePopupButton.tsx","webpack://@toast-ui/calendar/./src/components/popup/confirmPopupButton.tsx","webpack://@toast-ui/calendar/./src/components/popup/dateSelector.tsx","webpack://@toast-ui/calendar/./src/components/popup/eventDetailPopup.tsx","webpack://@toast-ui/calendar/./src/components/popup/eventDetailSectionDetail.tsx","webpack://@toast-ui/calendar/./src/components/popup/eventDetailSectionHeader.tsx","webpack://@toast-ui/calendar/./src/components/popup/eventFormPopup.tsx","webpack://@toast-ui/calendar/./src/components/popup/eventStateSelector.tsx","webpack://@toast-ui/calendar/./src/components/popup/locationInputBox.tsx","webpack://@toast-ui/calendar/./src/components/popup/popupOverlay.tsx","webpack://@toast-ui/calendar/./src/components/popup/popupSection.tsx","webpack://@toast-ui/calendar/./src/components/popup/seeMoreEventsPopup.tsx","webpack://@toast-ui/calendar/./src/components/popup/stateDropdownMenu.tsx","webpack://@toast-ui/calendar/./src/components/popup/titleInputBox.tsx","webpack://@toast-ui/calendar/./src/components/template.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/column.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/gridLines.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/gridSelectionByColumn.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/index.ts","webpack://@toast-ui/calendar/./src/components/timeGrid/movingEventShadow.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/nowIndicator.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/nowIndicatorLabel.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/resizingGuideByColumn.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/timeColumn.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/timeGrid.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/timezoneCollapseButton.tsx","webpack://@toast-ui/calendar/./src/components/timeGrid/timezoneLabels.tsx","webpack://@toast-ui/calendar/./src/components/view/day.tsx","webpack://@toast-ui/calendar/./src/components/view/main.tsx","webpack://@toast-ui/calendar/./src/components/view/month.tsx","webpack://@toast-ui/calendar/./src/components/view/week.tsx","webpack://@toast-ui/calendar/./src/constants/error.ts","webpack://@toast-ui/calendar/./src/constants/grid.ts","webpack://@toast-ui/calendar/./src/constants/keyboard.ts","webpack://@toast-ui/calendar/./src/constants/layout.ts","webpack://@toast-ui/calendar/./src/constants/message.ts","webpack://@toast-ui/calendar/./src/constants/mouse.ts","webpack://@toast-ui/calendar/./src/constants/popup.ts","webpack://@toast-ui/calendar/./src/constants/statistics.ts","webpack://@toast-ui/calendar/./src/constants/style.ts","webpack://@toast-ui/calendar/./src/constants/theme.ts","webpack://@toast-ui/calendar/./src/constants/view.ts","webpack://@toast-ui/calendar/./src/contexts/calendarStore.ts","webpack://@toast-ui/calendar/./src/contexts/eventBus.tsx","webpack://@toast-ui/calendar/./src/contexts/floatingLayer.tsx","webpack://@toast-ui/calendar/./src/contexts/layoutContainer.tsx","webpack://@toast-ui/calendar/./src/contexts/themeStore.tsx","webpack://@toast-ui/calendar/./src/controller/base.ts","webpack://@toast-ui/calendar/./src/controller/column.ts","webpack://@toast-ui/calendar/./src/controller/core.ts","webpack://@toast-ui/calendar/./src/controller/month.ts","webpack://@toast-ui/calendar/./src/controller/times.ts","webpack://@toast-ui/calendar/./src/controller/week.ts","webpack://@toast-ui/calendar/./src/factory/calendar.tsx","webpack://@toast-ui/calendar/./src/factory/calendarCore.tsx","webpack://@toast-ui/calendar/./src/helpers/css.ts","webpack://@toast-ui/calendar/./src/helpers/dayName.ts","webpack://@toast-ui/calendar/./src/helpers/drag.ts","webpack://@toast-ui/calendar/./src/helpers/events.ts","webpack://@toast-ui/calendar/./src/helpers/grid.ts","webpack://@toast-ui/calendar/./src/helpers/gridSelection.ts","webpack://@toast-ui/calendar/./src/helpers/popup.ts","webpack://@toast-ui/calendar/./src/helpers/view.ts","webpack://@toast-ui/calendar/./src/hooks/calendar/useCalendarById.ts","webpack://@toast-ui/calendar/./src/hooks/calendar/useCalendarColor.ts","webpack://@toast-ui/calendar/./src/hooks/calendar/useCalendarData.ts","webpack://@toast-ui/calendar/./src/hooks/common/useClickPrevention.ts","webpack://@toast-ui/calendar/./src/hooks/common/useDOMNode.ts","webpack://@toast-ui/calendar/./src/hooks/common/useDrag.ts","webpack://@toast-ui/calendar/./src/hooks/common/useDropdownState.ts","webpack://@toast-ui/calendar/./src/hooks/common/useInterval.ts","webpack://@toast-ui/calendar/./src/hooks/common/useIsMounted.ts","webpack://@toast-ui/calendar/./src/hooks/common/useTransientUpdate.ts","webpack://@toast-ui/calendar/./src/hooks/common/useWhen.ts","webpack://@toast-ui/calendar/./src/hooks/dayGridMonth/useDayGridMonthEventMove.ts","webpack://@toast-ui/calendar/./src/hooks/dayGridMonth/useDayGridMonthEventResize.ts","webpack://@toast-ui/calendar/./src/hooks/dayGridWeek/useAlldayGridRowEventMove.ts","webpack://@toast-ui/calendar/./src/hooks/dayGridWeek/useAlldayGridRowEventResize.ts","webpack://@toast-ui/calendar/./src/hooks/dayGridWeek/useGridRowHeightController.ts","webpack://@toast-ui/calendar/./src/hooks/event/useCurrentPointerPositionInGrid.ts","webpack://@toast-ui/calendar/./src/hooks/event/useDraggingEvent.ts","webpack://@toast-ui/calendar/./src/hooks/gridSelection/useGridSelection.ts","webpack://@toast-ui/calendar/./src/hooks/popup/useFormState.ts","webpack://@toast-ui/calendar/./src/hooks/template/useStringOnlyTemplate.ts","webpack://@toast-ui/calendar/./src/hooks/timeGrid/useTimeGridEventMove.ts","webpack://@toast-ui/calendar/./src/hooks/timeGrid/useTimeGridEventResize.ts","webpack://@toast-ui/calendar/./src/hooks/timeGrid/useTimeGridScrollSync.ts","webpack://@toast-ui/calendar/./src/hooks/timeGrid/useTimezoneLabelsTop.ts","webpack://@toast-ui/calendar/./src/hooks/timezone/useEventsWithTimezone.ts","webpack://@toast-ui/calendar/./src/hooks/timezone/usePrimaryTimezone.ts","webpack://@toast-ui/calendar/./src/hooks/timezone/useTZConverter.ts","webpack://@toast-ui/calendar/./src/model/eventModel.ts","webpack://@toast-ui/calendar/./src/model/eventUIModel.ts","webpack://@toast-ui/calendar/./src/selectors/index.ts","webpack://@toast-ui/calendar/./src/selectors/options.ts","webpack://@toast-ui/calendar/./src/selectors/popup.ts","webpack://@toast-ui/calendar/./src/selectors/theme.ts","webpack://@toast-ui/calendar/./src/selectors/timezone.ts","webpack://@toast-ui/calendar/./src/slices/calendar.ts","webpack://@toast-ui/calendar/./src/slices/dnd.ts","webpack://@toast-ui/calendar/./src/slices/gridSelection.ts","webpack://@toast-ui/calendar/./src/slices/layout.ts","webpack://@toast-ui/calendar/./src/slices/options.ts","webpack://@toast-ui/calendar/./src/slices/popup.ts","webpack://@toast-ui/calendar/./src/slices/template.ts","webpack://@toast-ui/calendar/./src/slices/view.ts","webpack://@toast-ui/calendar/./src/store/index.ts","webpack://@toast-ui/calendar/./src/store/internal.ts","webpack://@toast-ui/calendar/./src/template/default.tsx","webpack://@toast-ui/calendar/./src/test/testIds.ts","webpack://@toast-ui/calendar/./src/theme/common.ts","webpack://@toast-ui/calendar/./src/theme/dispatch.ts","webpack://@toast-ui/calendar/./src/theme/month.ts","webpack://@toast-ui/calendar/./src/theme/week.ts","webpack://@toast-ui/calendar/./src/time/date.ts","webpack://@toast-ui/calendar/./src/time/datetime.ts","webpack://@toast-ui/calendar/./src/time/timezone.ts","webpack://@toast-ui/calendar/./src/utils/array.ts","webpack://@toast-ui/calendar/./src/utils/collection.ts","webpack://@toast-ui/calendar/./src/utils/dom.ts","webpack://@toast-ui/calendar/./src/utils/error.ts","webpack://@toast-ui/calendar/./src/utils/eventBus.ts","webpack://@toast-ui/calendar/./src/utils/keyboard.ts","webpack://@toast-ui/calendar/./src/utils/logger.ts","webpack://@toast-ui/calendar/./src/utils/math.ts","webpack://@toast-ui/calendar/./src/utils/noop.ts","webpack://@toast-ui/calendar/./src/utils/object.ts","webpack://@toast-ui/calendar/./src/utils/preact.ts","webpack://@toast-ui/calendar/./src/utils/requestTimeout.ts","webpack://@toast-ui/calendar/./src/utils/sanitizer.ts","webpack://@toast-ui/calendar/./src/utils/stamp.ts","webpack://@toast-ui/calendar/./src/utils/string.ts","webpack://@toast-ui/calendar/./src/utils/type.ts","webpack://@toast-ui/calendar/./stories/column.stories.tsx","webpack://@toast-ui/calendar/./stories/dayGridMonth.stories.tsx","webpack://@toast-ui/calendar/./stories/dayView.stories.tsx","webpack://@toast-ui/calendar/./stories/e2e/day.stories.tsx","webpack://@toast-ui/calendar/./stories/e2e/month.stories.tsx","webpack://@toast-ui/calendar/./stories/e2e/week.stories.tsx","webpack://@toast-ui/calendar/./stories/eventDetailPopup.stories.tsx","webpack://@toast-ui/calendar/./stories/eventFormPopup.stories.tsx","webpack://@toast-ui/calendar/./stories/events.stories.tsx","webpack://@toast-ui/calendar/./stories/gridHeader.stories.tsx","webpack://@toast-ui/calendar/./stories/gridRow.stories.tsx","webpack://@toast-ui/calendar/./stories/helper/event.ts","webpack://@toast-ui/calendar/./stories/layout.stories.tsx","webpack://@toast-ui/calendar/./stories/main.stories.tsx","webpack://@toast-ui/calendar/./stories/mocks/mockCalendars.ts","webpack://@toast-ui/calendar/./stories/mocks/mockDayViewEvents.ts","webpack://@toast-ui/calendar/./stories/mocks/mockMonthViewEvents.ts","webpack://@toast-ui/calendar/./stories/mocks/mockWeekViewEvents.ts","webpack://@toast-ui/calendar/./stories/monthView.stories.tsx","webpack://@toast-ui/calendar/./stories/timegrid.stories.tsx","webpack://@toast-ui/calendar/./stories/util/calendarExample.tsx","webpack://@toast-ui/calendar/./stories/util/mockCalendarDates.ts","webpack://@toast-ui/calendar/./stories/util/mockCalendars.ts","webpack://@toast-ui/calendar/./stories/util/providerWrapper.tsx","webpack://@toast-ui/calendar/./stories/util/randomEvents.ts","webpack://@toast-ui/calendar/./stories/weekView.stories.tsx","webpack://@toast-ui/calendar/./storybook-init-framework-entry.js","webpack://@toast-ui/calendar/../../libs/date/src/index.js","webpack://@toast-ui/calendar/../../libs/date/src/localDate.js","webpack://@toast-ui/calendar/../../libs/date/src/momentDate.js","webpack://@toast-ui/calendar/../../libs/date/src/utcDate.js","webpack://@toast-ui/calendar/./src/css/common.css","webpack://@toast-ui/calendar/./src/css/daygrid/dayGrid.css","webpack://@toast-ui/calendar/./src/css/daygrid/dayNames.css","webpack://@toast-ui/calendar/./src/css/daygrid/index.css","webpack://@toast-ui/calendar/./src/css/events/background.css","webpack://@toast-ui/calendar/./src/css/events/grid.css","webpack://@toast-ui/calendar/./src/css/events/index.css","webpack://@toast-ui/calendar/./src/css/events/time.css","webpack://@toast-ui/calendar/./src/css/icons.css","webpack://@toast-ui/calendar/./src/css/index.css","webpack://@toast-ui/calendar/./src/css/layout.css","webpack://@toast-ui/calendar/./src/css/panel/allday.css","webpack://@toast-ui/calendar/./src/css/panel/index.css","webpack://@toast-ui/calendar/./src/css/popup/common.css","webpack://@toast-ui/calendar/./src/css/popup/detail.css","webpack://@toast-ui/calendar/./src/css/popup/form.css","webpack://@toast-ui/calendar/./src/css/popup/index.css","webpack://@toast-ui/calendar/./src/css/popup/seeMore.css","webpack://@toast-ui/calendar/./src/css/timegrid/column.css","webpack://@toast-ui/calendar/./src/css/timegrid/index.css","webpack://@toast-ui/calendar/./src/css/timegrid/timeColumn.css","webpack://@toast-ui/calendar/./src/css/timegrid/timegrid.css","webpack://@toast-ui/calendar/../../node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://@toast-ui/calendar/./src/css/index.css?fec2","webpack://@toast-ui/calendar/ignored|/Users/hlam/Desktop/www/tui.calendar/node_modules/object-inspect|./util.inspect","webpack://@toast-ui/calendar/./generated-stories-entry.cjs"],"sourcesContent":["var map = {\n\t\"./stories/column.stories.tsx\": \"./stories/column.stories.tsx\",\n\t\"./stories/dayGridMonth.stories.tsx\": \"./stories/dayGridMonth.stories.tsx\",\n\t\"./stories/dayView.stories.tsx\": \"./stories/dayView.stories.tsx\",\n\t\"./stories/e2e/day.stories.tsx\": \"./stories/e2e/day.stories.tsx\",\n\t\"./stories/e2e/month.stories.tsx\": \"./stories/e2e/month.stories.tsx\",\n\t\"./stories/e2e/week.stories.tsx\": \"./stories/e2e/week.stories.tsx\",\n\t\"./stories/eventDetailPopup.stories.tsx\": \"./stories/eventDetailPopup.stories.tsx\",\n\t\"./stories/eventFormPopup.stories.tsx\": \"./stories/eventFormPopup.stories.tsx\",\n\t\"./stories/events.stories.tsx\": \"./stories/events.stories.tsx\",\n\t\"./stories/gridHeader.stories.tsx\": \"./stories/gridHeader.stories.tsx\",\n\t\"./stories/gridRow.stories.tsx\": \"./stories/gridRow.stories.tsx\",\n\t\"./stories/layout.stories.tsx\": \"./stories/layout.stories.tsx\",\n\t\"./stories/main.stories.tsx\": \"./stories/main.stories.tsx\",\n\t\"./stories/monthView.stories.tsx\": \"./stories/monthView.stories.tsx\",\n\t\"./stories/timegrid.stories.tsx\": \"./stories/timegrid.stories.tsx\",\n\t\"./stories/weekView.stories.tsx\": \"./stories/weekView.stories.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./. sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(ts%7Ctsx))$\";","import 'preact/debug';\nimport '@src/css/index.css';\nimport 'tui-date-picker/dist/tui-date-picker.css';\nimport 'tui-time-picker/dist/tui-time-picker.css';\n\nexport const parameters = {\n  layout: 'fullscreen',\n};\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/Users/hlam/Desktop/www/tui.calendar/node_modules/@storybook/client-api';\nimport * as config from '/Users/hlam/Desktop/www/tui.calendar/apps/calendar/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","import { h } from 'preact';\n\nimport { StoreProvider } from '@src/contexts/calendarStore';\nimport { EventBusProvider } from '@src/contexts/eventBus';\nimport { FloatingLayerProvider } from '@src/contexts/floatingLayer';\nimport { ThemeProvider } from '@src/contexts/themeStore';\nimport type { EventBus } from '@src/utils/eventBus';\n\nimport type { PropsWithChildren } from '@t/components/common';\nimport type { ExternalEventTypes } from '@t/eventBus';\nimport type { CalendarStore, InternalStoreAPI } from '@t/store';\nimport type { ThemeStore } from '@t/theme';\n\ninterface Props {\n  theme: InternalStoreAPI<ThemeStore>;\n  store: InternalStoreAPI<CalendarStore>;\n  eventBus: EventBus<ExternalEventTypes>;\n}\n\nexport function CalendarContainer({ theme, store, eventBus, children }: PropsWithChildren<Props>) {\n  return (\n    <EventBusProvider value={eventBus}>\n      <ThemeProvider store={theme}>\n        <StoreProvider store={store}>\n          <FloatingLayerProvider>{children}</FloatingLayerProvider>\n        </StoreProvider>\n      </ThemeProvider>\n    </EventBusProvider>\n  );\n}\n","import { h } from 'preact';\n\nimport type { DayNameThemes } from '@src/components/dayGridCommon/gridHeader';\nimport { Template } from '@src/components/template';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { cls } from '@src/helpers/css';\nimport { getDayName } from '@src/helpers/dayName';\nimport { usePrimaryTimezone } from '@src/hooks/timezone/usePrimaryTimezone';\nimport type { TemplateName } from '@src/template/default';\nimport type TZDate from '@src/time/date';\nimport { isSameDate, isSaturday, isSunday, isWeekend, toFormat } from '@src/time/datetime';\n\nimport type { CalendarViewType, StyleProp } from '@t/components/common';\nimport type { TemplateMonthDayName, TemplateWeekDayName } from '@t/template';\n\ninterface Props {\n  type: CalendarViewType;\n  dayName: TemplateWeekDayName | TemplateMonthDayName;\n  style: StyleProp;\n  theme: DayNameThemes;\n}\n\nfunction isWeekDayName(\n  type: 'week' | 'month',\n  dayName: Props['dayName']\n): dayName is TemplateWeekDayName {\n  return type === 'week';\n}\n\nfunction getWeekDayNameColor({\n  dayName,\n  theme,\n  today,\n}: {\n  dayName: TemplateWeekDayName;\n  theme: Props['theme'];\n  today: TZDate;\n}) {\n  const { day, dateInstance } = dayName;\n  const isToday = isSameDate(today, dateInstance);\n  const isPastDay = !isToday && dateInstance < today;\n\n  if (isSunday(day)) {\n    return theme.common.holiday.color;\n  }\n  if (isPastDay) {\n    return theme.week?.pastDay.color;\n  }\n  if (isSaturday(day)) {\n    return theme.common.saturday.color;\n  }\n  if (isToday) {\n    return theme.week?.today.color;\n  }\n\n  return theme.common.dayName.color;\n}\n\nfunction getMonthDayNameColor({\n  dayName,\n  theme,\n}: {\n  dayName: TemplateMonthDayName;\n  theme: Props['theme'];\n}) {\n  const { day } = dayName;\n\n  if (isSunday(day)) {\n    return theme.common.holiday.color;\n  }\n  if (isSaturday(day)) {\n    return theme.common.saturday.color;\n  }\n\n  return theme.common.dayName.color;\n}\n\nexport function DayName({ dayName, style, type, theme }: Props) {\n  const eventBus = useEventBus();\n  const [, getNow] = usePrimaryTimezone();\n  const today = getNow();\n  const { day } = dayName;\n  const color =\n    type === 'week'\n      ? getWeekDayNameColor({ dayName: dayName as TemplateWeekDayName, theme, today })\n      : getMonthDayNameColor({ dayName: dayName as TemplateMonthDayName, theme });\n\n  const templateType = `${type}DayName` as TemplateName;\n\n  const handleClick = () => {\n    if (isWeekDayName(type, dayName)) {\n      eventBus.fire('clickDayName', { date: toFormat(dayName.dateInstance, 'YYYY-MM-DD') });\n    }\n  };\n\n  return (\n    <div className={cls('day-name-item', type)} style={style}>\n      <span\n        className={cls({ [`holiday-${getDayName(day)}`]: isWeekend(day) })}\n        style={{ color }}\n        onClick={handleClick}\n        data-testid={`dayName-${type}-${getDayName(day)}`}\n      >\n        <Template template={templateType} param={dayName} />\n      </span>\n    </div>\n  );\n}\n","import { h } from 'preact';\n\nimport { DayName } from '@src/components/dayGridCommon/dayName';\nimport { DEFAULT_DAY_NAME_MARGIN_LEFT } from '@src/constants/style';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\n\nimport type { CalendarViewType } from '@t/components/common';\nimport type { CalendarMonthOptions, CalendarWeekOptions } from '@t/store';\nimport type { TemplateMonthDayName, TemplateWeekDayName } from '@t/template';\nimport type { CommonTheme, MonthTheme, ThemeState, WeekTheme } from '@t/theme';\nimport type { CellStyle } from '@t/time/datetime';\n\ntype TemplateDayNames = (TemplateWeekDayName | TemplateMonthDayName)[];\n\nexport type DayNameThemes = {\n  common: {\n    saturday: CommonTheme['saturday'];\n    holiday: CommonTheme['holiday'];\n    today: CommonTheme['today'];\n    dayName: CommonTheme['dayName'];\n  };\n  week?: {\n    pastDay: WeekTheme['pastDay'];\n    today: WeekTheme['today'];\n    dayName: WeekTheme['dayName'];\n  };\n  month?: {\n    dayName: MonthTheme['dayName'];\n  };\n};\n\ninterface Props {\n  type: CalendarViewType;\n  dayNames: TemplateDayNames;\n  options?: CalendarMonthOptions | CalendarWeekOptions;\n  marginLeft?: string;\n  rowStyleInfo: CellStyle[];\n}\n\nfunction weekDayNameSelector(theme: ThemeState): DayNameThemes {\n  return {\n    common: {\n      saturday: theme.common.saturday,\n      holiday: theme.common.holiday,\n      today: theme.common.today,\n      dayName: theme.common.dayName,\n    },\n    week: {\n      pastDay: theme.week.pastDay,\n      today: theme.week.today,\n      dayName: theme.week.dayName,\n    },\n  };\n}\n\nfunction monthDayNameSelector(theme: ThemeState): DayNameThemes {\n  return {\n    common: {\n      saturday: theme.common.saturday,\n      holiday: theme.common.holiday,\n      today: theme.common.today,\n      dayName: theme.common.dayName,\n    },\n    month: {\n      dayName: theme.month.dayName,\n    },\n  };\n}\n\nexport function GridHeader({\n  dayNames,\n  marginLeft = DEFAULT_DAY_NAME_MARGIN_LEFT,\n  rowStyleInfo,\n  type = 'month',\n}: Props) {\n  const theme = useTheme(type === 'month' ? monthDayNameSelector : weekDayNameSelector);\n  const { backgroundColor = 'white', borderLeft = null, ...rest } = theme[type]?.dayName ?? {};\n  const { borderTop = null, borderBottom = null } = rest as WeekTheme['dayName'];\n\n  return (\n    <div\n      data-testid={`grid-header-${type}`}\n      className={cls('day-names', type)}\n      style={{\n        backgroundColor,\n        borderTop,\n        borderBottom,\n      }}\n    >\n      <div className={cls('day-name-container')} style={{ marginLeft }}>\n        {(dayNames as TemplateDayNames).map((dayName, index) => (\n          <DayName\n            type={type}\n            key={`dayNames-${dayName.day}`}\n            dayName={dayName}\n            style={{\n              width: toPercent(rowStyleInfo[index].width),\n              left: toPercent(rowStyleInfo[index].left),\n              borderLeft,\n            }}\n            theme={theme}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { h } from 'preact';\n\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { getLeftAndWidth } from '@src/helpers/grid';\nimport type TZDate from '@src/time/date';\n\nimport type { GridSelectionDataByRow } from '@t/components/gridSelection';\nimport type { ThemeState } from '@t/theme';\n\ninterface Props {\n  type: 'allday' | 'month' | 'accumulated';\n  gridSelectionData: GridSelectionDataByRow;\n  weekDates: TZDate[];\n  narrowWeekend: boolean;\n}\n\nfunction commonGridSelectionSelector(theme: ThemeState) {\n  return theme.common.gridSelection;\n}\n\nexport function GridSelection({ type, gridSelectionData, weekDates, narrowWeekend }: Props) {\n  const { backgroundColor, border } = useTheme(commonGridSelectionSelector);\n  const { startCellIndex, endCellIndex } = gridSelectionData;\n\n  const { left, width } = getLeftAndWidth(\n    Math.min(startCellIndex, endCellIndex),\n    Math.max(startCellIndex, endCellIndex),\n    weekDates,\n    narrowWeekend\n  );\n\n  const style = {\n    left: toPercent(left),\n    width: toPercent(width),\n    height: toPercent(100),\n    backgroundColor,\n    border,\n  };\n\n  return width > 0 ? <div className={cls(type, 'grid-selection')} style={style} /> : null;\n}\n","import { h } from 'preact';\nimport { useCallback } from 'preact/hooks';\n\nimport { GridSelection } from '@src/components/dayGridCommon/gridSelection';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { cls } from '@src/helpers/css';\nimport { dayGridMonthSelectionHelper } from '@src/helpers/gridSelection';\nimport type TZDate from '@src/time/date';\n\ninterface Props {\n  rowIndex: number;\n  weekDates: TZDate[];\n  narrowWeekend: boolean;\n}\n\nexport function AccumulatedGridSelection({ rowIndex, weekDates, narrowWeekend }: Props) {\n  const gridSelectionDataByRow = useStore(\n    useCallback(\n      (state) =>\n        state.gridSelection.accumulated.dayGridMonth.map((gridSelection) =>\n          dayGridMonthSelectionHelper.calculateSelection(gridSelection, rowIndex, weekDates.length)\n        ),\n      [rowIndex, weekDates]\n    )\n  );\n\n  return (\n    <div className={cls('accumulated-grid-selection')}>\n      {gridSelectionDataByRow.map((gridSelectionData) =>\n        gridSelectionData ? (\n          <GridSelection\n            type=\"accumulated\"\n            gridSelectionData={gridSelectionData}\n            weekDates={weekDates}\n            narrowWeekend={narrowWeekend}\n          />\n        ) : null\n      )}\n    </div>\n  );\n}\n","import { h } from 'preact';\nimport { useMemo } from 'preact/hooks';\n\nimport { MoreEventsButton } from '@src/components/dayGridMonth/moreEventsButton';\nimport { Template } from '@src/components/template';\nimport { CellBarType } from '@src/constants/grid';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useCommonTheme, useMonthTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\nimport { usePrimaryTimezone } from '@src/hooks/timezone/usePrimaryTimezone';\nimport { viewSelector } from '@src/selectors';\nimport type { TemplateName } from '@src/template/default';\nimport type TZDate from '@src/time/date';\nimport { isSaturday, isSunday, toFormat } from '@src/time/datetime';\nimport { capitalize } from '@src/utils/string';\nimport { isNil } from '@src/utils/type';\n\nimport type { CommonTheme, MonthTheme } from '@t/theme';\n\ninterface Props {\n  type?: CellBarType;\n  exceedCount?: number;\n  date: TZDate;\n  onClickExceedCount: () => void;\n}\n\nfunction getDateColor({\n  date,\n  theme,\n  renderDate,\n  isToday,\n}: {\n  date: TZDate;\n  theme: { common: CommonTheme; month: MonthTheme };\n  renderDate: TZDate;\n  isToday: boolean;\n}) {\n  const dayIndex = date.getDay();\n  const thisMonth = renderDate.getMonth();\n  const isSameMonth = thisMonth === date.getMonth();\n\n  const {\n    common: { holiday, saturday, today, dayName },\n    month: { dayExceptThisMonth, holidayExceptThisMonth },\n  } = theme;\n\n  if (isToday) {\n    return today.color;\n  }\n\n  if (isSunday(dayIndex)) {\n    return isSameMonth ? holiday.color : holidayExceptThisMonth.color;\n  }\n\n  if (isSaturday(dayIndex)) {\n    return isSameMonth ? saturday.color : dayExceptThisMonth.color;\n  }\n\n  if (!isSameMonth) {\n    return dayExceptThisMonth.color;\n  }\n\n  return dayName.color;\n}\n\nfunction useCellHeaderTheme() {\n  const common = useCommonTheme();\n  const month = useMonthTheme();\n\n  return useMemo(() => ({ common, month }), [common, month]);\n}\n\nexport function CellHeader({\n  type = CellBarType.header,\n  exceedCount = 0,\n  date,\n  onClickExceedCount,\n}: Props) {\n  const { renderDate } = useStore(viewSelector);\n\n  const [, getNow] = usePrimaryTimezone();\n  const theme = useCellHeaderTheme();\n  const height = theme.month.gridCell[`${type}Height`];\n\n  const ymd = toFormat(date, 'YYYYMMDD');\n  const todayYmd = toFormat(getNow(), 'YYYYMMDD');\n  const isToday = ymd === todayYmd;\n  const templateParam = {\n    date: toFormat(date, 'YYYY-MM-DD'),\n    day: date.getDay(),\n    hiddenEventCount: exceedCount,\n    isOtherMonth: date.getMonth() !== renderDate.getMonth(),\n    isToday: ymd === todayYmd,\n    month: date.getMonth(),\n    ymd,\n  };\n  const gridCellDateStyle = { color: getDateColor({ date, theme, isToday, renderDate }) };\n  const monthGridTemplate = `monthGrid${capitalize(type)}` as TemplateName;\n\n  if (isNil(height)) {\n    return null;\n  }\n\n  return (\n    <div className={cls(`grid-cell-${type}`)} style={{ height }}>\n      <span className={cls('grid-cell-date')} style={gridCellDateStyle}>\n        <Template template={monthGridTemplate} param={templateParam} />\n      </span>\n      {exceedCount ? (\n        <MoreEventsButton\n          type={type}\n          number={exceedCount}\n          onClickButton={onClickExceedCount}\n          className={cls('grid-cell-more-events')}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import { h } from 'preact';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\n\nimport { AccumulatedGridSelection } from '@src/components/dayGridMonth/accumulatedGridSelection';\nimport { GridRow } from '@src/components/dayGridMonth/gridRow';\nimport { GridSelectionByRow } from '@src/components/dayGridMonth/gridSelectionByRow';\nimport { MonthEvents } from '@src/components/dayGridMonth/monthEvents';\nimport { MovingEventShadow } from '@src/components/dayGridMonth/movingEventShadow';\nimport { ResizingGuideByRow } from '@src/components/dayGridMonth/resizingGuideByRow';\nimport {\n  MONTH_CELL_BAR_HEIGHT,\n  MONTH_CELL_PADDING_TOP,\n  MONTH_EVENT_HEIGHT,\n  MONTH_EVENT_MARGIN_TOP,\n} from '@src/constants/style';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { createGridPositionFinder, getRenderedEventUIModels } from '@src/helpers/grid';\nimport { dayGridMonthSelectionHelper } from '@src/helpers/gridSelection';\nimport { useCalendarData } from '@src/hooks/calendar/useCalendarData';\nimport { useDOMNode } from '@src/hooks/common/useDOMNode';\nimport { useGridSelection } from '@src/hooks/gridSelection/useGridSelection';\nimport { calendarSelector, optionsSelector } from '@src/selectors';\nimport { monthVisibleEventCountSelector } from '@src/selectors/options';\nimport { monthGridCellSelector } from '@src/selectors/theme';\nimport type TZDate from '@src/time/date';\nimport { getSize } from '@src/utils/dom';\nimport { passConditionalProp } from '@src/utils/preact';\n\nimport type { CalendarMonthOptions } from '@t/store';\nimport type { CellInfo } from '@t/time/datetime';\n\nconst TOTAL_PERCENT_HEIGHT = 100;\n\ninterface Props {\n  dateMatrix: TZDate[][];\n  rowInfo: CellInfo[];\n  cellWidthMap: string[][];\n}\n\nfunction useCellContentAreaHeight(eventHeight: number) {\n  const visibleEventCount = useStore(monthVisibleEventCountSelector);\n  const { headerHeight: themeHeaderHeight, footerHeight: themeFooterHeight } =\n    useTheme(monthGridCellSelector);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [cellContentAreaHeight, setCellContentAreaHeight] = useState(0);\n\n  useEffect(() => {\n    if (ref.current) {\n      const rowHeight = getSize(ref.current).height;\n      const headerHeight = MONTH_CELL_PADDING_TOP + (themeHeaderHeight ?? MONTH_CELL_BAR_HEIGHT);\n      const footerHeight = themeFooterHeight ?? 0;\n\n      const baseContentAreaHeight = rowHeight - headerHeight - footerHeight;\n      const visibleEventCountHeight = visibleEventCount * (eventHeight + MONTH_EVENT_MARGIN_TOP);\n\n      setCellContentAreaHeight(Math.min(baseContentAreaHeight, visibleEventCountHeight));\n    }\n  }, [themeFooterHeight, themeHeaderHeight, eventHeight, visibleEventCount]);\n\n  return { ref, cellContentAreaHeight };\n}\n\nexport function DayGridMonth({ dateMatrix = [], rowInfo = [], cellWidthMap = [] }: Props) {\n  const [gridContainer, setGridContainerRef] = useDOMNode<HTMLDivElement>();\n  const calendar = useStore(calendarSelector);\n  // TODO: event height need to be dynamic\n  const { ref, cellContentAreaHeight } = useCellContentAreaHeight(MONTH_EVENT_HEIGHT);\n\n  const { eventFilter, month: monthOptions, isReadOnly } = useStore(optionsSelector);\n  const { narrowWeekend, startDayOfWeek } = monthOptions as CalendarMonthOptions;\n  const rowHeight = TOTAL_PERCENT_HEIGHT / dateMatrix.length;\n\n  const gridPositionFinder = useMemo(\n    () =>\n      createGridPositionFinder({\n        container: gridContainer,\n        rowsCount: dateMatrix.length,\n        columnsCount: dateMatrix[0].length,\n        narrowWeekend,\n        startDayOfWeek,\n      }),\n    [dateMatrix, gridContainer, narrowWeekend, startDayOfWeek]\n  );\n\n  const calendarData = useCalendarData(calendar, eventFilter);\n  const renderedEventUIModels = useMemo(\n    () => dateMatrix.map((week) => getRenderedEventUIModels(week, calendarData, narrowWeekend)),\n    [calendarData, dateMatrix, narrowWeekend]\n  );\n\n  const onMouseDown = useGridSelection({\n    type: 'dayGridMonth',\n    gridPositionFinder,\n    dateCollection: dateMatrix,\n    dateGetter: dayGridMonthSelectionHelper.getDateFromCollection,\n    selectionSorter: dayGridMonthSelectionHelper.sortSelection,\n  });\n\n  return (\n    <div\n      ref={setGridContainerRef}\n      onMouseDown={passConditionalProp(!isReadOnly, onMouseDown)}\n      className={cls('month-daygrid')}\n    >\n      {dateMatrix.map((week, rowIndex) => {\n        const { uiModels, gridDateEventModelMap } = renderedEventUIModels[rowIndex];\n\n        return (\n          <div\n            key={`dayGrid-events-${rowIndex}`}\n            className={cls('month-week-item')}\n            style={{ height: toPercent(rowHeight) }}\n            ref={ref}\n          >\n            <div className={cls('weekday')}>\n              <GridRow\n                gridDateEventModelMap={gridDateEventModelMap}\n                week={week}\n                rowInfo={rowInfo}\n                contentAreaHeight={cellContentAreaHeight}\n              />\n              <MonthEvents\n                name=\"month\"\n                events={uiModels}\n                contentAreaHeight={cellContentAreaHeight}\n                eventHeight={MONTH_EVENT_HEIGHT}\n                className={cls('weekday-events')}\n              />\n              <GridSelectionByRow\n                weekDates={week}\n                narrowWeekend={narrowWeekend}\n                rowIndex={rowIndex}\n              />\n              <AccumulatedGridSelection\n                rowIndex={rowIndex}\n                weekDates={week}\n                narrowWeekend={narrowWeekend}\n              />\n            </div>\n            <ResizingGuideByRow\n              dateMatrix={dateMatrix}\n              gridPositionFinder={gridPositionFinder}\n              rowIndex={rowIndex}\n              cellWidthMap={cellWidthMap}\n              renderedUIModels={renderedEventUIModels}\n            />\n            <MovingEventShadow\n              dateMatrix={dateMatrix}\n              gridPositionFinder={gridPositionFinder}\n              rowIndex={rowIndex}\n              rowInfo={rowInfo}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { h } from 'preact';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\n\nimport { CellHeader } from '@src/components/dayGridMonth/cellHeader';\nimport { CellBarType } from '@src/constants/grid';\nimport {\n  MONTH_EVENT_HEIGHT,\n  MONTH_EVENT_MARGIN_TOP,\n  MONTH_MORE_VIEW_HEADER_HEIGHT,\n  MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM,\n  MONTH_MORE_VIEW_MIN_WIDTH,\n  MONTH_MORE_VIEW_PADDING,\n} from '@src/constants/style';\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport { useLayoutContainer } from '@src/contexts/layoutContainer';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\nimport { getExceedCount } from '@src/helpers/grid';\nimport { useDOMNode } from '@src/hooks/common/useDOMNode';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { monthMoreViewSelector } from '@src/selectors/theme';\nimport type TZDate from '@src/time/date';\nimport { isWeekend } from '@src/time/datetime';\nimport { getSize } from '@src/utils/dom';\n\nimport type { StyleProp } from '@t/components/common';\nimport type { PopupPosition, Rect } from '@t/store';\nimport type { ThemeState } from '@t/theme';\n\ninterface RectSize {\n  width: number;\n  height: number;\n}\n\ntype SeeMoreRectParam = {\n  cell: HTMLDivElement;\n  layoutContainer: HTMLDivElement;\n  popupSize: { width: number; height: number };\n};\n\nfunction getSeeMorePopupSize({\n  grid,\n  offsetWidth,\n  eventLength,\n  layerSize,\n}: {\n  grid: HTMLDivElement;\n  offsetWidth: number;\n  eventLength: number;\n  layerSize: {\n    width: number | null;\n    height: number | null;\n  };\n}): RectSize {\n  const minHeight = getSize(grid).height + MONTH_MORE_VIEW_PADDING * 2;\n  let width = offsetWidth + MONTH_MORE_VIEW_PADDING * 2;\n\n  const { width: moreViewWidth, height: moreViewHeight } = layerSize;\n\n  const MAX_DISPLAY_EVENT_COUNT = 10;\n\n  width = Math.max(width, MONTH_MORE_VIEW_MIN_WIDTH);\n  let height =\n    MONTH_MORE_VIEW_HEADER_HEIGHT + MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM + MONTH_MORE_VIEW_PADDING;\n  const eventHeight = MONTH_EVENT_HEIGHT + MONTH_EVENT_MARGIN_TOP;\n\n  if (eventLength <= MAX_DISPLAY_EVENT_COUNT) {\n    height += eventHeight * eventLength;\n  } else {\n    height += eventHeight * MAX_DISPLAY_EVENT_COUNT;\n  }\n\n  if (moreViewWidth) {\n    width = moreViewWidth;\n  }\n\n  if (moreViewHeight) {\n    height = moreViewHeight;\n  }\n\n  if (isNaN(height) || height < minHeight) {\n    height = minHeight;\n  }\n\n  return { width, height };\n}\n\nfunction getSeeMorePopupPosition(popupSize: RectSize, appContainerSize: Rect, cellRect: Rect) {\n  const {\n    width: containerWidth,\n    height: containerHeight,\n    left: containerLeft,\n    top: containerTop,\n  } = appContainerSize;\n  const { width: popupWidth, height: popupHeight } = popupSize;\n\n  const containerRight = containerLeft + containerWidth;\n  const containerBottom = containerTop + containerHeight;\n\n  let left = cellRect.left + cellRect.width / 2 - popupWidth / 2;\n  let { top } = cellRect;\n\n  const isLeftOutOfContainer = left < containerLeft;\n  const isRightOutOfContainer = left + popupWidth > containerRight;\n  const isUpperOutOfContainer = top < containerTop;\n  const isLowerOutOfContainer = top + popupHeight > containerBottom;\n\n  if (isLeftOutOfContainer) {\n    left = containerLeft;\n  }\n\n  if (isRightOutOfContainer) {\n    left = containerRight - popupWidth;\n  }\n\n  if (isUpperOutOfContainer) {\n    top = containerTop;\n  }\n\n  if (isLowerOutOfContainer) {\n    top = containerBottom - popupHeight;\n  }\n\n  return { top: top + window.scrollY, left: left + window.scrollX };\n}\n\nfunction getSeeMorePopupRect({\n  layoutContainer,\n  cell,\n  popupSize,\n}: SeeMoreRectParam): PopupPosition {\n  const containerRect = layoutContainer.getBoundingClientRect();\n  const cellRect = cell.getBoundingClientRect();\n\n  const popupPosition = getSeeMorePopupPosition(popupSize, containerRect, cellRect);\n\n  return { ...popupSize, ...popupPosition };\n}\n\nfunction usePopupPosition(\n  eventLength: number,\n  parentContainer?: HTMLDivElement | null,\n  layoutContainer?: HTMLDivElement | null\n) {\n  const { width: moreViewWidth, height: moreViewHeight } = useTheme(monthMoreViewSelector);\n\n  const [container, containerRefCallback] = useDOMNode<HTMLDivElement>();\n  const [popupPosition, setPopupPosition] = useState<PopupPosition | null>(null);\n\n  useEffect(() => {\n    if (layoutContainer && parentContainer && container) {\n      const popupSize = getSeeMorePopupSize({\n        grid: parentContainer,\n        offsetWidth: container.offsetWidth,\n        eventLength,\n        layerSize: {\n          width: moreViewWidth,\n          height: moreViewHeight,\n        },\n      });\n\n      const rect = getSeeMorePopupRect({\n        cell: container,\n        layoutContainer,\n        popupSize,\n      });\n\n      setPopupPosition(rect);\n    }\n  }, [layoutContainer, container, eventLength, parentContainer, moreViewWidth, moreViewHeight]);\n\n  return { popupPosition, containerRefCallback };\n}\n\nfunction weekendBackgroundColorSelector(theme: ThemeState) {\n  return theme.month.weekend.backgroundColor;\n}\n\ninterface Props {\n  date: TZDate;\n  style?: StyleProp;\n  parentContainer?: HTMLDivElement | null;\n  events?: EventUIModel[];\n  contentAreaHeight: number;\n}\n\nexport function GridCell({ date, events = [], style, parentContainer, contentAreaHeight }: Props) {\n  const layoutContainer = useLayoutContainer();\n  const { showSeeMorePopup } = useDispatch('popup');\n  const backgroundColor = useTheme(weekendBackgroundColorSelector);\n\n  const { popupPosition, containerRefCallback } = usePopupPosition(\n    events.length,\n    parentContainer,\n    layoutContainer\n  );\n\n  const onOpenSeeMorePopup = useCallback(() => {\n    if (popupPosition) {\n      showSeeMorePopup({\n        date,\n        popupPosition,\n        events,\n      });\n    }\n  }, [date, events, popupPosition, showSeeMorePopup]);\n\n  const exceedCount = getExceedCount(\n    events,\n    contentAreaHeight,\n    MONTH_EVENT_HEIGHT + MONTH_EVENT_MARGIN_TOP\n  );\n\n  return (\n    <div\n      className={cls('daygrid-cell')}\n      style={{ ...style, backgroundColor: isWeekend(date.getDay()) ? backgroundColor : 'inherit' }}\n      ref={containerRefCallback}\n    >\n      <CellHeader\n        type={CellBarType.header}\n        exceedCount={exceedCount}\n        date={date}\n        onClickExceedCount={onOpenSeeMorePopup}\n      />\n      <CellHeader\n        type={CellBarType.footer}\n        exceedCount={exceedCount}\n        date={date}\n        onClickExceedCount={onOpenSeeMorePopup}\n      />\n    </div>\n  );\n}\n","import { h } from 'preact';\nimport { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\n\nimport { GridCell } from '@src/components/dayGridMonth/gridCell';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { useDOMNode } from '@src/hooks/common/useDOMNode';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\nimport { toFormat, toStartOfDay } from '@src/time/datetime';\n\nimport type { CellStyle } from '@t/time/datetime';\n\ninterface Props {\n  gridDateEventModelMap?: Record<string, EventUIModel[]>;\n  week: TZDate[];\n  rowInfo: CellStyle[];\n  contentAreaHeight: number;\n}\n\nexport const GridRow = memo(function GridRow({\n  week,\n  rowInfo,\n  gridDateEventModelMap = {},\n  contentAreaHeight,\n}: Props) {\n  const [container, containerRefCallback] = useDOMNode<HTMLDivElement>();\n  const border = useTheme(useCallback((theme) => theme.common.border, []));\n\n  return (\n    <div className={cls('weekday-grid')} style={{ borderTop: border }} ref={containerRefCallback}>\n      {week.map((date, columnIndex) => {\n        const dayIndex = date.getDay();\n        const { width, left } = rowInfo[columnIndex];\n        const ymd = toFormat(toStartOfDay(date), 'YYYYMMDD');\n\n        return (\n          <GridCell\n            key={`daygrid-cell-${dayIndex}`}\n            date={date}\n            style={{\n              width: toPercent(width),\n              left: toPercent(left),\n            }}\n            parentContainer={container}\n            events={gridDateEventModelMap[ymd]}\n            contentAreaHeight={contentAreaHeight}\n          />\n        );\n      })}\n    </div>\n  );\n});\n","import { h } from 'preact';\nimport { useCallback } from 'preact/hooks';\n\nimport { GridSelection } from '@src/components/dayGridCommon/gridSelection';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { dayGridMonthSelectionHelper } from '@src/helpers/gridSelection';\nimport type TZDate from '@src/time/date';\nimport { isNil } from '@src/utils/type';\n\nimport type { CalendarState } from '@t/store';\n\ninterface Props {\n  weekDates: TZDate[];\n  narrowWeekend: boolean;\n  rowIndex: number;\n}\n\nexport function GridSelectionByRow({ weekDates, narrowWeekend, rowIndex }: Props) {\n  const gridSelectionDataByRow = useStore(\n    useCallback(\n      (state: CalendarState) =>\n        dayGridMonthSelectionHelper.calculateSelection(\n          state.gridSelection.dayGridMonth,\n          rowIndex,\n          weekDates.length\n        ),\n      [rowIndex, weekDates.length]\n    )\n  );\n\n  if (isNil(gridSelectionDataByRow)) {\n    return null;\n  }\n\n  return (\n    <GridSelection\n      type=\"month\"\n      gridSelectionData={gridSelectionDataByRow}\n      weekDates={weekDates}\n      narrowWeekend={narrowWeekend}\n    />\n  );\n}\n","import { h } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport { HorizontalEvent } from '@src/components/events/horizontalEvent';\nimport { MONTH_CELL_BAR_HEIGHT, MONTH_EVENT_MARGIN_TOP } from '@src/constants/style';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { EVENT_HEIGHT, isWithinHeight } from '@src/helpers/grid';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { monthGridCellSelector } from '@src/selectors/theme';\n\ninterface Props {\n  name: string;\n  contentAreaHeight: number;\n  eventHeight?: number;\n  events: EventUIModel[];\n  className: string;\n}\n\nexport const MonthEvents = memo(function MonthEvents({\n  contentAreaHeight,\n  eventHeight = EVENT_HEIGHT,\n  events,\n  name,\n  className,\n}: Props) {\n  const { headerHeight } = useTheme(monthGridCellSelector);\n\n  const dayEvents = events\n    .filter(isWithinHeight(contentAreaHeight, eventHeight + MONTH_EVENT_MARGIN_TOP))\n    .map((uiModel) => (\n      <HorizontalEvent\n        key={`${name}-DayEvent-${uiModel.cid()}`}\n        uiModel={uiModel}\n        eventHeight={eventHeight}\n        headerHeight={headerHeight ?? MONTH_CELL_BAR_HEIGHT}\n      />\n    ));\n\n  return <div className={className}>{dayEvents}</div>;\n});\n","import { h } from 'preact';\n\nimport { Template } from '@src/components/template';\nimport { CellBarType } from '@src/constants/grid';\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport type { TemplateName } from '@src/template/default';\n\ninterface Props {\n  type?: CellBarType;\n  number: number;\n  onClickButton: () => void;\n  className: string;\n}\n\nexport function MoreEventsButton({ type, number, onClickButton, className }: Props) {\n  const { reset } = useDispatch('dnd');\n\n  // prevent unexpected grid selection when clicking on the button\n  const handleMouseDown = (e: MouseEvent) => {\n    e.stopPropagation();\n  };\n\n  const handleClick = () => {\n    reset();\n    onClickButton();\n  };\n\n  const exceedButtonTemplate = `monthGrid${\n    type === CellBarType.header ? 'Header' : 'Footer'\n  }Exceed` as TemplateName;\n\n  return (\n    <button type=\"button\" onMouseDown={handleMouseDown} onClick={handleClick} className={className}>\n      <Template template={exceedButtonTemplate} param={number} />\n    </button>\n  );\n}\n","import type { ComponentProps } from 'preact';\nimport { h } from 'preact';\n\nimport type { DayGridMonth } from '@src/components/dayGridMonth/dayGridMonth';\nimport { HorizontalEvent } from '@src/components/events/horizontalEvent';\nimport { MONTH_CELL_BAR_HEIGHT, MONTH_CELL_PADDING_TOP } from '@src/constants/style';\nimport { EVENT_HEIGHT } from '@src/helpers/grid';\nimport { useDayGridMonthEventMove } from '@src/hooks/dayGridMonth/useDayGridMonthEventMove';\nimport { isNil } from '@src/utils/type';\n\nimport type { GridPositionFinder } from '@t/grid';\n\ntype Props = Pick<ComponentProps<typeof DayGridMonth>, 'dateMatrix' | 'rowInfo'> & {\n  rowIndex: number;\n  gridPositionFinder: GridPositionFinder;\n};\n\nexport function MovingEventShadow({ dateMatrix, gridPositionFinder, rowInfo, rowIndex }: Props) {\n  const movingEvent = useDayGridMonthEventMove({\n    dateMatrix,\n    rowInfo,\n    gridPositionFinder,\n    rowIndex,\n  });\n\n  if (isNil(movingEvent)) {\n    return null;\n  }\n\n  return (\n    <HorizontalEvent\n      uiModel={movingEvent}\n      movingLeft={movingEvent.left}\n      eventHeight={EVENT_HEIGHT}\n      headerHeight={MONTH_CELL_PADDING_TOP + MONTH_CELL_BAR_HEIGHT}\n    />\n  );\n}\n","import type { ComponentProps } from 'preact';\nimport { h } from 'preact';\n\nimport type { DayGridMonth } from '@src/components/dayGridMonth/dayGridMonth';\nimport { HorizontalEvent } from '@src/components/events/horizontalEvent';\nimport {\n  MONTH_CELL_BAR_HEIGHT,\n  MONTH_CELL_PADDING_TOP,\n  MONTH_EVENT_HEIGHT,\n} from '@src/constants/style';\nimport { cls } from '@src/helpers/css';\nimport type { getRenderedEventUIModels } from '@src/helpers/grid';\nimport { useDayGridMonthEventResize } from '@src/hooks/dayGridMonth/useDayGridMonthEventResize';\nimport { isNil } from '@src/utils/type';\n\nimport type { GridPositionFinder } from '@t/grid';\n\ntype Props = Pick<ComponentProps<typeof DayGridMonth>, 'dateMatrix' | 'cellWidthMap'> & {\n  gridPositionFinder: GridPositionFinder;\n  renderedUIModels: ReturnType<typeof getRenderedEventUIModels>[];\n  rowIndex: number;\n};\n\nexport function ResizingGuideByRow({\n  dateMatrix,\n  cellWidthMap,\n  gridPositionFinder,\n  renderedUIModels,\n  rowIndex,\n}: Props) {\n  const resizingGuideProps = useDayGridMonthEventResize({\n    dateMatrix,\n    gridPositionFinder,\n    cellWidthMap,\n    renderedUIModels,\n    rowIndex,\n  });\n\n  if (isNil(resizingGuideProps)) {\n    return null;\n  }\n\n  const [uiModel, resizingWidth] = resizingGuideProps;\n\n  return (\n    <div className={cls('weekday-events')}>\n      <HorizontalEvent\n        key={`resizing-event-${uiModel.cid()}`}\n        uiModel={uiModel}\n        eventHeight={MONTH_EVENT_HEIGHT}\n        headerHeight={MONTH_CELL_PADDING_TOP + MONTH_CELL_BAR_HEIGHT}\n        resizingWidth={resizingWidth}\n      />\n    </div>\n  );\n}\n","import { Fragment, h } from 'preact';\nimport { useMemo } from 'preact/hooks';\n\nimport { AlldayGridSelection } from '@src/components/dayGridWeek/alldayGridSelection';\nimport { GridCells } from '@src/components/dayGridWeek/gridCells';\nimport { MovingEventShadow } from '@src/components/dayGridWeek/movingEventShadow';\nimport { ResizingEventShadow } from '@src/components/dayGridWeek/resizingEventShadow';\nimport { HorizontalEvent } from '@src/components/events/horizontalEvent';\nimport { Template } from '@src/components/template';\nimport { DEFAULT_PANEL_HEIGHT, WEEK_EVENT_MARGIN_TOP } from '@src/constants/style';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\nimport { createGridPositionFinder, EVENT_HEIGHT, isWithinHeight } from '@src/helpers/grid';\nimport { alldayGridRowSelectionHelper } from '@src/helpers/gridSelection';\nimport { useDOMNode } from '@src/hooks/common/useDOMNode';\nimport { useGridRowHeightController } from '@src/hooks/dayGridWeek/useGridRowHeightController';\nimport { useGridSelection } from '@src/hooks/gridSelection/useGridSelection';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { optionsSelector } from '@src/selectors';\nimport { weekDayGridLeftSelector } from '@src/selectors/theme';\nimport type TZDate from '@src/time/date';\nimport { Day } from '@src/time/datetime';\n\nimport type { WeekOptions } from '@t/options';\nimport type { CellStyle } from '@t/time/datetime';\n\ninterface Props {\n  events: EventUIModel[];\n  weekDates: TZDate[];\n  timesWidth?: number;\n  timezonesCount?: number;\n  height?: number;\n  options?: WeekOptions;\n  shouldRenderDefaultPopup?: boolean;\n  rowStyleInfo: CellStyle[];\n  gridColWidthMap: string[][];\n}\n\nconst rowTitleTemplate = `alldayTitle` as const;\n\nexport function AlldayGridRow({\n  events,\n  weekDates,\n  height = DEFAULT_PANEL_HEIGHT,\n  options = {},\n  rowStyleInfo,\n  gridColWidthMap,\n}: Props) {\n  const { isReadOnly } = useStore(optionsSelector);\n  const dayGridLeftTheme = useTheme(weekDayGridLeftSelector);\n  const [panelContainer, setPanelContainerRef] = useDOMNode<HTMLDivElement>();\n\n  const { narrowWeekend = false, startDayOfWeek = Day.SUN } = options;\n\n  const maxTop = useMemo(() => Math.max(0, ...events.map(({ top }) => top)), [events]);\n  const gridPositionFinder = useMemo(\n    () =>\n      createGridPositionFinder({\n        container: panelContainer,\n        rowsCount: 1,\n        columnsCount: weekDates.length,\n        narrowWeekend,\n        startDayOfWeek,\n      }),\n    [panelContainer, weekDates.length, narrowWeekend, startDayOfWeek]\n  );\n\n  const { clickedIndex, isClickedCount, onClickExceedCount, onClickCollapseButton } =\n    useGridRowHeightController(maxTop, 'allday');\n\n  const horizontalEvents = useMemo(\n    () =>\n      events\n        .filter(isWithinHeight(height, EVENT_HEIGHT + WEEK_EVENT_MARGIN_TOP))\n        .map((uiModel) => (\n          <HorizontalEvent\n            key={`allday-DayEvent-${uiModel.cid()}`}\n            uiModel={uiModel}\n            eventHeight={EVENT_HEIGHT}\n            headerHeight={0}\n          />\n        )),\n    [events, height]\n  );\n\n  const startGridSelection = useGridSelection({\n    type: 'dayGridWeek',\n    gridPositionFinder,\n    dateCollection: weekDates,\n    selectionSorter: alldayGridRowSelectionHelper.sortSelection,\n    dateGetter: alldayGridRowSelectionHelper.getDateFromCollection,\n  });\n\n  const onMouseDown = (e: MouseEvent) => {\n    const target = e.target as HTMLElement;\n\n    if (isReadOnly || !target.classList.contains(cls('panel-grid'))) {\n      return;\n    }\n\n    startGridSelection(e);\n  };\n\n  return (\n    <Fragment>\n      <div className={cls('panel-title')} style={dayGridLeftTheme}>\n        <Template template={rowTitleTemplate} param=\"alldayTitle\" />\n      </div>\n      <div className={cls('allday-panel')} ref={setPanelContainerRef} onMouseDown={onMouseDown}>\n        <div className={cls('panel-grid-wrapper')}>\n          <GridCells\n            uiModels={events}\n            weekDates={weekDates}\n            narrowWeekend={narrowWeekend}\n            height={height}\n            clickedIndex={clickedIndex}\n            isClickedCount={isClickedCount}\n            onClickExceedCount={onClickExceedCount}\n            onClickCollapseButton={onClickCollapseButton}\n          />\n        </div>\n        <div className={cls(`panel-allday-events`)}>{horizontalEvents}</div>\n        <ResizingEventShadow\n          weekDates={weekDates}\n          gridPositionFinder={gridPositionFinder}\n          gridColWidthMap={gridColWidthMap}\n        />\n        <MovingEventShadow rowStyleInfo={rowStyleInfo} gridPositionFinder={gridPositionFinder} />\n        <AlldayGridSelection weekDates={weekDates} narrowWeekend={narrowWeekend} />\n      </div>\n    </Fragment>\n  );\n}\n","import type { ComponentProps } from 'preact';\nimport { h } from 'preact';\n\nimport { GridSelection } from '@src/components/dayGridCommon/gridSelection';\nimport type { AlldayGridRow } from '@src/components/dayGridWeek/alldayGridRow';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { alldayGridRowSelectionHelper } from '@src/helpers/gridSelection';\nimport { isNil } from '@src/utils/type';\n\nimport type { CalendarState } from '@t/store';\n\nfunction dayGridWeekSelectionSelector(state: CalendarState) {\n  return alldayGridRowSelectionHelper.calculateSelection(state.gridSelection.dayGridWeek);\n}\n\ntype Props = Pick<ComponentProps<typeof AlldayGridRow>, 'weekDates'> & {\n  narrowWeekend: boolean;\n};\n\nexport function AlldayGridSelection({ weekDates, narrowWeekend }: Props) {\n  const calculatedGridSelection = useStore(dayGridWeekSelectionSelector);\n\n  if (isNil(calculatedGridSelection)) {\n    return null;\n  }\n\n  return (\n    <GridSelection\n      type=\"allday\"\n      gridSelectionData={calculatedGridSelection}\n      weekDates={weekDates}\n      narrowWeekend={narrowWeekend}\n    />\n  );\n}\n","import { h } from 'preact';\nimport { useCallback } from 'preact/hooks';\n\nimport { Template } from '@src/components/template';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\n\ntype Props = {\n  isLastCell: boolean;\n  width: string;\n  left: string;\n} & ExceedCountProps &\n  CollapseButtonProps;\n\ninterface ExceedCountProps {\n  index: number;\n  exceedCount: number;\n  isClicked: boolean;\n  onClickExceedCount: (exceedCount: number) => void;\n}\n\ninterface CollapseButtonProps {\n  isClicked: boolean;\n  isClickedIndex: boolean;\n  onClickCollapseButton: () => void;\n}\n\nfunction ExceedCount({ index, exceedCount, isClicked, onClickExceedCount }: ExceedCountProps) {\n  const clickExceedCount = () => onClickExceedCount(index);\n  const style = { display: isClicked ? 'none' : '' };\n\n  return exceedCount && !isClicked ? (\n    <span className={cls('weekday-exceed-in-week')} onClick={clickExceedCount} style={style}>\n      <Template template=\"weekGridFooterExceed\" param={exceedCount} />\n    </span>\n  ) : null;\n}\n\nfunction CollapseButton({ isClicked, isClickedIndex, onClickCollapseButton }: CollapseButtonProps) {\n  return isClicked && isClickedIndex ? (\n    <span className={cls('weekday-exceed-in-week')} onClick={onClickCollapseButton}>\n      <Template template=\"collapseBtnTitle\" />\n    </span>\n  ) : null;\n}\n\nexport function GridCell({\n  width,\n  left,\n  index,\n  exceedCount,\n  isClicked,\n  onClickExceedCount,\n  isClickedIndex,\n  onClickCollapseButton,\n  isLastCell,\n}: Props) {\n  const { borderRight, backgroundColor } = useTheme(useCallback((theme) => theme.week.dayGrid, []));\n  const style = {\n    width,\n    left,\n    borderRight: isLastCell ? 'none' : borderRight,\n    backgroundColor,\n  };\n\n  return (\n    <div className={cls('panel-grid')} style={style}>\n      <ExceedCount\n        index={index}\n        exceedCount={exceedCount}\n        isClicked={isClicked}\n        onClickExceedCount={onClickExceedCount}\n      />\n      <CollapseButton\n        isClickedIndex={isClickedIndex}\n        isClicked={isClicked}\n        onClickCollapseButton={onClickCollapseButton}\n      />\n    </div>\n  );\n}\n","import { Fragment, h } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport { GridCell } from '@src/components/dayGridWeek/gridCell';\nimport { toPercent } from '@src/helpers/css';\nimport {\n  EVENT_HEIGHT,\n  getExceedCount,\n  getGridWidthAndLeftPercentValues,\n  isInGrid,\n  TOTAL_WIDTH,\n} from '@src/helpers/grid';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\n\ninterface Props {\n  uiModels: EventUIModel[];\n  weekDates: TZDate[];\n  narrowWeekend: boolean;\n  height: number;\n  clickedIndex: number;\n  isClickedCount: boolean;\n  onClickExceedCount: (index: number) => void;\n  onClickCollapseButton: () => void;\n}\n\nexport const GridCells = memo(function GridCells({\n  uiModels,\n  weekDates,\n  narrowWeekend,\n  height,\n  clickedIndex,\n  isClickedCount,\n  onClickExceedCount,\n  onClickCollapseButton,\n}: Props) {\n  // @TODO: get margin value dynamically\n  const eventTopMargin = 2;\n  const { widthList, leftList } = getGridWidthAndLeftPercentValues(\n    weekDates,\n    narrowWeekend,\n    TOTAL_WIDTH\n  );\n  const lastCellIndex = weekDates.length - 1;\n\n  return (\n    <Fragment>\n      {weekDates.map((cell, index) => {\n        const width = toPercent(widthList[index]);\n        const left = toPercent(leftList[index]);\n\n        const uiModelsInCell = uiModels.filter(isInGrid(cell));\n        const exceedCount = getExceedCount(uiModelsInCell, height, EVENT_HEIGHT + eventTopMargin);\n        const isClickedIndex = index === clickedIndex;\n        const isLastCell = index === lastCellIndex;\n\n        return (\n          <GridCell\n            key={`panel-grid-${cell.getDate()}`}\n            width={width}\n            left={left}\n            index={index}\n            exceedCount={exceedCount}\n            isClicked={isClickedCount}\n            onClickExceedCount={onClickExceedCount}\n            isClickedIndex={isClickedIndex}\n            onClickCollapseButton={onClickCollapseButton}\n            isLastCell={isLastCell}\n          />\n        );\n      })}\n    </Fragment>\n  );\n});\n","import type { ComponentProps } from 'preact';\nimport { h } from 'preact';\n\nimport type { AlldayGridRow } from '@src/components/dayGridWeek/alldayGridRow';\nimport { HorizontalEvent } from '@src/components/events/horizontalEvent';\nimport { EVENT_HEIGHT } from '@src/helpers/grid';\nimport { useAlldayGridRowEventMove } from '@src/hooks/dayGridWeek/useAlldayGridRowEventMove';\nimport { isNil } from '@src/utils/type';\n\nimport type { GridPositionFinder } from '@t/grid';\n\ntype Props = Pick<ComponentProps<typeof AlldayGridRow>, 'rowStyleInfo'> & {\n  gridPositionFinder: GridPositionFinder;\n};\n\nexport function MovingEventShadow({\n  rowStyleInfo,\n  gridPositionFinder,\n}: Pick<Props, 'rowStyleInfo'> & {\n  gridPositionFinder: GridPositionFinder;\n}) {\n  const { movingEvent, movingLeft } = useAlldayGridRowEventMove({\n    rowStyleInfo,\n    gridPositionFinder,\n  });\n\n  if (isNil(movingEvent)) {\n    return null;\n  }\n\n  return (\n    <HorizontalEvent\n      uiModel={movingEvent}\n      eventHeight={EVENT_HEIGHT}\n      headerHeight={0}\n      movingLeft={movingLeft}\n    />\n  );\n}\n","import { Fragment, h } from 'preact';\nimport { useMemo } from 'preact/hooks';\n\nimport { GridCells } from '@src/components/dayGridWeek/gridCells';\nimport { HorizontalEvent } from '@src/components/events/horizontalEvent';\nimport { Template } from '@src/components/template';\nimport { DEFAULT_PANEL_HEIGHT, WEEK_EVENT_MARGIN_TOP } from '@src/constants/style';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\nimport { EVENT_HEIGHT, isWithinHeight } from '@src/helpers/grid';\nimport { useGridRowHeightController } from '@src/hooks/dayGridWeek/useGridRowHeightController';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { weekDayGridLeftSelector } from '@src/selectors/theme';\nimport type TZDate from '@src/time/date';\n\nimport type { WeekOptions } from '@t/options';\nimport type { AlldayEventCategory } from '@t/panel';\n\ntype GridRowTitleTemplate = `${AlldayEventCategory}Title`;\n\ninterface Props {\n  category: Exclude<AlldayEventCategory, 'allday'>;\n  events: EventUIModel[];\n  weekDates: TZDate[];\n  timesWidth?: number;\n  timezonesCount?: number;\n  height?: number;\n  options?: WeekOptions;\n  gridColWidthMap: string[][];\n}\n\nexport function OtherGridRow({\n  events,\n  weekDates,\n  category,\n  height = DEFAULT_PANEL_HEIGHT,\n  options = {},\n}: Props) {\n  const dayGridLeftTheme = useTheme(weekDayGridLeftSelector);\n\n  const maxTop = useMemo(() => Math.max(0, ...events.map(({ top }) => top)), [events]);\n  const { narrowWeekend = false } = options;\n  const rowTitleTemplate: GridRowTitleTemplate = `${category}Title`;\n\n  const { clickedIndex, isClickedCount, onClickExceedCount, onClickCollapseButton } =\n    useGridRowHeightController(maxTop, category);\n\n  const horizontalEvents = useMemo(\n    () =>\n      events\n        .filter(isWithinHeight(height, EVENT_HEIGHT + WEEK_EVENT_MARGIN_TOP))\n        .map((uiModel) => (\n          <HorizontalEvent\n            key={`${category}-DayEvent-${uiModel.cid()}`}\n            uiModel={uiModel}\n            eventHeight={EVENT_HEIGHT}\n            headerHeight={0}\n          />\n        )),\n    [category, events, height]\n  );\n\n  return (\n    <Fragment>\n      <div className={cls('panel-title')} style={dayGridLeftTheme}>\n        <Template template={rowTitleTemplate} param={category} />\n      </div>\n      <div className={cls('allday-panel')}>\n        <div className={cls('panel-grid-wrapper')}>\n          <GridCells\n            uiModels={events}\n            weekDates={weekDates}\n            narrowWeekend={narrowWeekend}\n            height={height}\n            clickedIndex={clickedIndex}\n            isClickedCount={isClickedCount}\n            onClickExceedCount={onClickExceedCount}\n            onClickCollapseButton={onClickCollapseButton}\n          />\n        </div>\n        <div className={cls(`panel-${category}-events`)}>{horizontalEvents}</div>\n      </div>\n    </Fragment>\n  );\n}\n","import type { ComponentProps } from 'preact';\nimport { h } from 'preact';\n\nimport type { AlldayGridRow } from '@src/components/dayGridWeek/alldayGridRow';\nimport { HorizontalEvent } from '@src/components/events/horizontalEvent';\nimport { EVENT_HEIGHT } from '@src/helpers/grid';\nimport { useAlldayGridRowEventResize } from '@src/hooks/dayGridWeek/useAlldayGridRowEventResize';\nimport { isNil } from '@src/utils/type';\n\nimport type { GridPositionFinder } from '@t/grid';\n\ntype Props = Pick<ComponentProps<typeof AlldayGridRow>, 'weekDates' | 'gridColWidthMap'> & {\n  gridPositionFinder: GridPositionFinder;\n};\n\nexport function ResizingEventShadow({ weekDates, gridColWidthMap, gridPositionFinder }: Props) {\n  const { resizingEvent, resizingWidth } = useAlldayGridRowEventResize({\n    weekDates,\n    gridColWidthMap,\n    gridPositionFinder,\n  });\n\n  if (isNil(resizingEvent)) {\n    return null;\n  }\n\n  return (\n    <HorizontalEvent\n      uiModel={resizingEvent}\n      eventHeight={EVENT_HEIGHT}\n      headerHeight={0}\n      resizingWidth={resizingWidth}\n    />\n  );\n}\n","import { h } from 'preact';\n\nimport { cls } from '@src/helpers/css';\nimport type EventUIModel from '@src/model/eventUIModel';\n\nconst classNames = {\n  background: cls('event-background'),\n};\n\ninterface Props {\n  uiModel: EventUIModel;\n  width?: string;\n  height?: string;\n  top?: string;\n  right?: string;\n  bottom?: string;\n  left?: string;\n}\n\nexport function BackgroundEvent({\n  uiModel,\n  width = '100%',\n  height = '100px',\n  top = '',\n  right = '',\n  bottom = '',\n  left = '',\n}: Props) {\n  const style = {\n    backgroundColor: uiModel.model.backgroundColor,\n    width,\n    height,\n    top,\n    right,\n    bottom,\n    left,\n  };\n\n  return <span className={classNames.background} style={style} />;\n}\n","import { h } from 'preact';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { HorizontalEventResizeIcon } from '@src/components/events/horizontalEventResizeIcon';\nimport { Template } from '@src/components/template';\nimport { useDispatch, useStore } from '@src/contexts/calendarStore';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useLayoutContainer } from '@src/contexts/layoutContainer';\nimport { cls, getEventColors, toPercent, toPx } from '@src/helpers/css';\nimport { DRAGGING_TYPE_CREATORS } from '@src/helpers/drag';\nimport { useCalendarColor } from '@src/hooks/calendar/useCalendarColor';\nimport { useDrag } from '@src/hooks/common/useDrag';\nimport { useTransientUpdate } from '@src/hooks/common/useTransientUpdate';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { dndSelector, optionsSelector, viewSelector } from '@src/selectors';\nimport { DraggingState } from '@src/slices/dnd';\nimport { isSameDate } from '@src/time/datetime';\nimport { passConditionalProp } from '@src/utils/preact';\nimport { isPresent } from '@src/utils/type';\n\nimport type { CalendarColor } from '@t/options';\n\ninterface Props {\n  uiModel: EventUIModel;\n  eventHeight: number;\n  headerHeight: number;\n  resizingWidth?: string | null;\n  flat?: boolean;\n  movingLeft?: number | null;\n}\n\nfunction getMargins(flat: boolean) {\n  return {\n    vertical: flat ? 5 : 2,\n    horizontal: 8,\n  };\n}\n\nfunction getBorderRadius(exceedLeft: boolean, exceedRight: boolean): string {\n  const leftBorderRadius = exceedLeft ? 0 : '2px';\n  const rightBorderRadius = exceedRight ? 0 : '2px';\n\n  return `${leftBorderRadius} ${rightBorderRadius} ${rightBorderRadius} ${leftBorderRadius}`;\n}\n\nfunction getEventItemStyle({\n  uiModel,\n  flat,\n  eventHeight,\n  isDraggingTarget,\n  calendarColor,\n}: Required<Pick<Props, 'uiModel' | 'flat' | 'eventHeight'>> & {\n  isDraggingTarget: boolean;\n  calendarColor: CalendarColor;\n}) {\n  const { exceedLeft, exceedRight } = uiModel;\n  const { color, backgroundColor, dragBackgroundColor, borderColor } = getEventColors(\n    uiModel,\n    calendarColor\n  );\n\n  const defaultItemStyle = {\n    color,\n    backgroundColor: isDraggingTarget ? dragBackgroundColor : backgroundColor,\n    borderLeft: exceedLeft ? 'none' : `3px solid ${borderColor}`,\n    borderRadius: getBorderRadius(exceedLeft, exceedRight),\n    overflow: 'hidden',\n    height: eventHeight,\n    lineHeight: toPx(eventHeight),\n    opacity: isDraggingTarget ? 0.5 : 1,\n  };\n  const margins = getMargins(flat);\n\n  return flat\n    ? {\n        marginTop: margins.vertical,\n        ...defaultItemStyle,\n      }\n    : {\n        marginLeft: exceedLeft ? 0 : margins.horizontal,\n        marginRight: exceedRight ? 0 : margins.horizontal,\n        ...defaultItemStyle,\n      };\n}\n\nfunction getContainerStyle({\n  flat,\n  uiModel,\n  resizingWidth,\n  movingLeft,\n  eventHeight,\n  headerHeight,\n}: Required<Props>) {\n  const { top, left, width, model } = uiModel;\n  const margins = getMargins(flat);\n\n  const baseStyle = flat\n    ? {}\n    : {\n        width: resizingWidth || toPercent(width),\n        left: toPercent(movingLeft ?? left),\n        top: (top - 1) * (eventHeight + margins.vertical) + headerHeight,\n        position: 'absolute',\n      };\n\n  return Object.assign(baseStyle, model.customStyle);\n}\n\nfunction getTestId({ model }: EventUIModel) {\n  const calendarId = model.calendarId ? `${model.calendarId}-` : '';\n  const id = model.id ? `${model.id}-` : '';\n\n  return `${calendarId}${id}${model.title}`;\n}\n\nconst classNames = {\n  eventBody: cls('weekday-event'),\n  eventTitle: cls('weekday-event-title'),\n  eventDot: cls('weekday-event-dot'),\n  moveEvent: cls('dragging--move-event'),\n  resizeEvent: cls('dragging--resize-horizontal-event'),\n};\n\n// eslint-disable-next-line complexity\nexport function HorizontalEvent({\n  flat = false,\n  uiModel,\n  eventHeight,\n  headerHeight,\n  resizingWidth = null,\n  movingLeft = null,\n}: Props) {\n  const { currentView } = useStore(viewSelector);\n  const { useDetailPopup, isReadOnly: isReadOnlyCalendar } = useStore(optionsSelector);\n\n  const { setDraggingEventUIModel } = useDispatch('dnd');\n  const { showDetailPopup } = useDispatch('popup');\n\n  const layoutContainer = useLayoutContainer();\n  const eventBus = useEventBus();\n  const calendarColor = useCalendarColor(uiModel.model);\n\n  const [isDraggingTarget, setIsDraggingTarget] = useState<boolean>(false);\n  const eventContainerRef = useRef<HTMLDivElement>(null);\n\n  const { isReadOnly, id, calendarId } = uiModel.model;\n\n  const isDraggingGuideEvent = isPresent(resizingWidth) || isPresent(movingLeft);\n  const isDraggableEvent = !isReadOnlyCalendar && !isReadOnly && !isDraggingGuideEvent;\n\n  const startDragEvent = (className: string) => {\n    setDraggingEventUIModel(uiModel);\n    layoutContainer?.classList.add(className);\n  };\n  const endDragEvent = (className: string) => {\n    setIsDraggingTarget(false);\n    layoutContainer?.classList.remove(className);\n  };\n\n  useTransientUpdate(dndSelector, ({ draggingEventUIModel, draggingState }) => {\n    if (\n      draggingState === DraggingState.DRAGGING &&\n      draggingEventUIModel?.cid() === uiModel.cid() &&\n      !isDraggingGuideEvent\n    ) {\n      setIsDraggingTarget(true);\n    } else {\n      setIsDraggingTarget(false);\n    }\n  });\n\n  useEffect(() => {\n    if (!isDraggingGuideEvent) {\n      eventBus.fire('afterRenderEvent', uiModel.model.toEventObject());\n    }\n    // This effect is only for the first render.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onResizeStart = useDrag(DRAGGING_TYPE_CREATORS.resizeEvent('dayGrid', `${uiModel.cid()}`), {\n    onDragStart: () => startDragEvent(classNames.resizeEvent),\n    onMouseUp: () => endDragEvent(classNames.resizeEvent),\n    onPressESCKey: () => endDragEvent(classNames.resizeEvent),\n  });\n  const onMoveStart = useDrag(DRAGGING_TYPE_CREATORS.moveEvent('dayGrid', `${uiModel.cid()}`), {\n    onDragStart: () => {\n      if (isDraggableEvent) {\n        startDragEvent(classNames.moveEvent);\n      }\n    },\n    onMouseUp: (e, { draggingState }) => {\n      endDragEvent(classNames.moveEvent);\n\n      const isClick = draggingState <= DraggingState.INIT;\n      if (isClick && useDetailPopup && eventContainerRef.current) {\n        // console.log(uiModel);\n        \n        showDetailPopup(\n          {\n            event: uiModel.model,\n            eventRect: eventContainerRef.current.getBoundingClientRect(),\n          },\n          flat\n        );\n      }\n\n      if (isClick) {\n        eventBus.fire('clickEvent', { event: uiModel.model.toEventObject(), nativeEvent: e });\n      }\n    },\n    onPressESCKey: () => endDragEvent(classNames.moveEvent),\n  });\n\n  const handleResizeStart = (e: MouseEvent) => {\n    e.stopPropagation();\n\n    if (isDraggableEvent) {\n      onResizeStart(e);\n    }\n  };\n\n  const handleMoveStart = (e: MouseEvent) => {\n    e.stopPropagation();\n    onMoveStart(e);\n  };\n\n  const isDotEvent =\n    !isDraggingTarget &&\n    currentView === 'month' &&\n    uiModel.model.category === 'time' &&\n    isSameDate(uiModel.model.start, uiModel.model.end);\n  const shouldHideResizeHandler =\n    !isDraggableEvent || flat || isDraggingTarget || uiModel.exceedRight;\n  const containerStyle = getContainerStyle({\n    uiModel,\n    eventHeight,\n    headerHeight,\n    flat,\n    movingLeft,\n    resizingWidth,\n  });\n  const eventItemStyle = getEventItemStyle({\n    uiModel,\n    flat,\n    eventHeight,\n    isDraggingTarget,\n    calendarColor,\n  });\n\n  return (\n    <div\n      className={cls('weekday-event-block', {\n        'weekday-exceed-left': uiModel.exceedLeft,\n        'weekday-exceed-right': uiModel.exceedRight,\n      })}\n      style={containerStyle}\n      data-testid={passConditionalProp(isDraggableEvent, getTestId(uiModel))}\n      data-calendar-id={calendarId}\n      data-event-id={id}\n      ref={eventContainerRef}\n    >\n      <div\n        className={classNames.eventBody}\n        style={{\n          ...eventItemStyle,\n          backgroundColor: isDotEvent ? null : eventItemStyle.backgroundColor,\n          borderLeft: isDotEvent ? null : eventItemStyle.borderLeft,\n        }}\n        onMouseDown={handleMoveStart}\n      >\n        {isDotEvent ? (\n          <span\n            className={classNames.eventDot}\n            style={{ backgroundColor: eventItemStyle.backgroundColor }}\n          />\n        ) : null}\n        <span className={classNames.eventTitle}>\n          <Template template={uiModel.model.category} param={uiModel.model} />\n        </span>\n        {!shouldHideResizeHandler ? (\n          <HorizontalEventResizeIcon onMouseDown={handleResizeStart} />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import { h } from 'preact';\n\nimport { cls } from '@src/helpers/css';\n\nimport type { MouseEventListener } from '@t/util';\n\ninterface Props {\n  onMouseDown?: MouseEventListener;\n}\n\nexport function HorizontalEventResizeIcon({ onMouseDown }: Props) {\n  return (\n    <span\n      className={`${cls('weekday-resize-handle')} ${cls('handle-y')}`}\n      onMouseDown={onMouseDown}\n      data-testid=\"horizontal-event-resize-icon\"\n    >\n      <i className={`${cls('icon')} ${cls('ic-handle-y')}`} />\n    </span>\n  );\n}\n","import { h } from 'preact';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { Template } from '@src/components/template';\nimport { DEFAULT_DUPLICATE_EVENT_CID } from '@src/constants/layout';\nimport { TIME_EVENT_CONTAINER_MARGIN_LEFT } from '@src/constants/style';\nimport { useDispatch, useStore } from '@src/contexts/calendarStore';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useLayoutContainer } from '@src/contexts/layoutContainer';\nimport { cls, extractPercentPx, getEventColors, toPercent } from '@src/helpers/css';\nimport { DRAGGING_TYPE_CREATORS } from '@src/helpers/drag';\nimport { useCalendarColor } from '@src/hooks/calendar/useCalendarColor';\nimport { useDrag } from '@src/hooks/common/useDrag';\nimport { useTransientUpdate } from '@src/hooks/common/useTransientUpdate';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { dndSelector, optionsSelector } from '@src/selectors';\nimport { DraggingState } from '@src/slices/dnd';\nimport type TZDate from '@src/time/date';\nimport { isPresent, isString } from '@src/utils/type';\n\nimport type { StyleProp } from '@t/components/common';\nimport type { CalendarColor } from '@t/options';\n\nconst classNames = {\n  time: cls('event-time'),\n  content: cls('event-time-content'),\n  travelTime: cls('travel-time'),\n  resizeHandleX: cls('resize-handler-x'),\n  moveEvent: cls('dragging--move-event'),\n  resizeEvent: cls('dragging--resize-vertical-event'),\n};\n\ninterface Props {\n  uiModel: EventUIModel;\n  isResizingGuide?: boolean;\n  nextStartTime?: TZDate | null;\n  minHeight?: number;\n}\n\nfunction getMarginLeft(left: number | string) {\n  const { percent, px } = extractPercentPx(`${left}`);\n\n  return left > 0 || percent > 0 || px > 0 ? TIME_EVENT_CONTAINER_MARGIN_LEFT : 0;\n}\n\nfunction getContainerWidth(width: number | string, marginLeft: number) {\n  if (isString(width)) {\n    return width;\n  }\n  if (width >= 0) {\n    return `calc(${toPercent(width)} - ${marginLeft}px)`;\n  }\n\n  return '';\n}\n\nfunction getStyles({\n  uiModel,\n  isDraggingTarget,\n  hasNextStartTime,\n  calendarColor,\n  minHeight,\n}: {\n  uiModel: EventUIModel;\n  isDraggingTarget: boolean;\n  hasNextStartTime: boolean;\n  calendarColor: CalendarColor;\n  minHeight: number;\n}) {\n  const {\n    top,\n    left,\n    height,\n    width,\n    duplicateLeft,\n    duplicateWidth,\n    goingDurationHeight,\n    modelDurationHeight,\n    comingDurationHeight,\n    croppedStart,\n    croppedEnd,\n  } = uiModel;\n  // TODO: check and get theme values\n  const travelBorderColor = 'white';\n  const borderRadius = 2;\n  const defaultMarginBottom = 2;\n  const marginLeft = getMarginLeft(left);\n\n  const { color, backgroundColor, borderColor, dragBackgroundColor } = getEventColors(\n    uiModel,\n    calendarColor\n  );\n  const containerStyle: StyleProp = {\n    width: getContainerWidth(duplicateWidth || width, marginLeft),\n    height: `calc(${toPercent(Math.max(height, minHeight))} - ${defaultMarginBottom}px)`,\n    top: toPercent(top),\n    left: duplicateLeft || toPercent(left),\n    borderRadius,\n    borderLeft: `3px solid ${borderColor}`,\n    marginLeft,\n    color,\n    backgroundColor: isDraggingTarget ? dragBackgroundColor : backgroundColor,\n    opacity: isDraggingTarget ? 0.5 : 1,\n    zIndex: hasNextStartTime ? 1 : 0,\n  };\n\n  const goingDurationStyle = {\n    height: toPercent(goingDurationHeight),\n    borderBottom: `1px dashed ${travelBorderColor}`,\n  };\n  const modelDurationStyle = {\n    height: toPercent(modelDurationHeight),\n  };\n  const comingDurationStyle = {\n    height: toPercent(comingDurationHeight),\n    borderTop: `1px dashed ${travelBorderColor}`,\n  };\n\n  if (croppedStart) {\n    containerStyle.borderTopLeftRadius = 0;\n    containerStyle.borderTopRightRadius = 0;\n  }\n\n  if (croppedEnd) {\n    containerStyle.borderBottomLeftRadius = 0;\n    containerStyle.borderBottomRightRadius = 0;\n  }\n\n  return {\n    containerStyle,\n    goingDurationStyle,\n    modelDurationStyle,\n    comingDurationStyle,\n  };\n}\n\nfunction isDraggableEvent({\n  uiModel,\n  isReadOnlyCalendar,\n  isDraggingTarget,\n  hasNextStartTime,\n}: {\n  uiModel: EventUIModel;\n  isReadOnlyCalendar: boolean;\n  isDraggingTarget: boolean;\n  hasNextStartTime: boolean;\n}) {\n  const { model } = uiModel;\n  return !isReadOnlyCalendar && !model.isReadOnly && !isDraggingTarget && !hasNextStartTime;\n}\n\n// eslint-disable-next-line complexity\nexport function TimeEvent({\n  uiModel,\n  nextStartTime,\n  isResizingGuide = false,\n  minHeight = 0,\n}: Props) {\n  const {\n    useDetailPopup,\n    isReadOnly: isReadOnlyCalendar,\n    week: weekOptions,\n  } = useStore(optionsSelector);\n  const calendarColor = useCalendarColor(uiModel.model);\n  const { collapseDuplicateEvents } = weekOptions;\n\n  const layoutContainer = useLayoutContainer();\n  const { showDetailPopup } = useDispatch('popup');\n  const { setDraggingEventUIModel } = useDispatch('dnd');\n  const { setSelectedDuplicateEventCid } = useDispatch('weekViewLayout');\n\n  const eventBus = useEventBus();\n\n  const eventContainerRef = useRef<HTMLDivElement>(null);\n\n  const [isDraggingTarget, setIsDraggingTarget] = useState<boolean>(false);\n\n  const { model, goingDurationHeight, modelDurationHeight, comingDurationHeight, croppedEnd } =\n    uiModel;\n  const { id, calendarId, customStyle } = model;\n  const hasNextStartTime = isPresent(nextStartTime);\n  const { containerStyle, goingDurationStyle, modelDurationStyle, comingDurationStyle } = getStyles(\n    { uiModel, isDraggingTarget, hasNextStartTime, calendarColor, minHeight }\n  );\n  const isGuide = hasNextStartTime || isResizingGuide;\n\n  useTransientUpdate(dndSelector, ({ draggingEventUIModel, draggingState }) => {\n    if (\n      draggingState === DraggingState.DRAGGING &&\n      draggingEventUIModel?.cid() === uiModel.cid() &&\n      !hasNextStartTime &&\n      !isResizingGuide\n    ) {\n      setIsDraggingTarget(true);\n    } else {\n      setIsDraggingTarget(false);\n    }\n  });\n\n  useEffect(() => {\n    if (!isResizingGuide) {\n      eventBus.fire('afterRenderEvent', uiModel.model.toEventObject());\n    }\n    // This effect is only for the first render.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const startDragEvent = (className: string) => {\n    setDraggingEventUIModel(uiModel);\n    layoutContainer?.classList.add(className);\n  };\n  const endDragEvent = (className: string) => {\n    setIsDraggingTarget(false);\n    layoutContainer?.classList.remove(className);\n  };\n\n  const onMoveStart = useDrag(DRAGGING_TYPE_CREATORS.moveEvent('timeGrid', `${uiModel.cid()}`), {\n    onDragStart: () => {\n      if (isDraggable) {\n        startDragEvent(classNames.moveEvent);\n      }\n    },\n    onMouseUp: (e, { draggingState }) => {\n      endDragEvent(classNames.moveEvent);\n\n      const isClick = draggingState <= DraggingState.INIT;\n      if (isClick && collapseDuplicateEvents) {\n        const selectedDuplicateEventCid =\n          uiModel.duplicateEvents.length > 0 ? uiModel.cid() : DEFAULT_DUPLICATE_EVENT_CID;\n        setSelectedDuplicateEventCid(selectedDuplicateEventCid);\n      }\n\n      if (isClick && useDetailPopup && eventContainerRef.current) {\n        showDetailPopup(\n          {\n            event: uiModel.model,\n            eventRect: eventContainerRef.current.getBoundingClientRect(),\n          },\n          false\n        );\n      }\n\n      if (isClick) {\n        eventBus.fire('clickEvent', { event: uiModel.model.toEventObject(), nativeEvent: e });\n      }\n    },\n    onPressESCKey: () => endDragEvent(classNames.moveEvent),\n  });\n  const handleMoveStart = (e: MouseEvent) => {\n    e.stopPropagation();\n    onMoveStart(e);\n  };\n\n  const onResizeStart = useDrag(\n    DRAGGING_TYPE_CREATORS.resizeEvent('timeGrid', `${uiModel.cid()}`),\n    {\n      onDragStart: () => startDragEvent(classNames.resizeEvent),\n      onMouseUp: () => endDragEvent(classNames.resizeEvent),\n      onPressESCKey: () => endDragEvent(classNames.resizeEvent),\n    }\n  );\n  const handleResizeStart = (e: MouseEvent) => {\n    e.stopPropagation();\n    onResizeStart(e);\n  };\n\n  const isDraggable = isDraggableEvent({\n    uiModel,\n    isReadOnlyCalendar,\n    isDraggingTarget,\n    hasNextStartTime,\n  });\n  const shouldShowResizeHandle = isDraggable && !croppedEnd;\n\n  return (\n    <div\n      data-testid={`${isGuide ? 'guide-' : ''}time-event-${model.title}-${uiModel.cid()}`}\n      data-calendar-id={calendarId}\n      data-event-id={id}\n      className={classNames.time}\n      style={{ ...containerStyle, ...customStyle }}\n      onMouseDown={handleMoveStart}\n      ref={eventContainerRef}\n    >\n      {goingDurationHeight ? (\n        <div className={classNames.travelTime} style={goingDurationStyle}>\n          <Template template=\"goingDuration\" param={model} />\n        </div>\n      ) : null}\n      {modelDurationHeight ? (\n        <div className={classNames.content} style={modelDurationStyle}>\n          <Template\n            template=\"time\"\n            param={{\n              ...model.toEventObject(),\n              start: hasNextStartTime ? nextStartTime : model.start,\n            }}\n          />\n        </div>\n      ) : null}\n      {comingDurationHeight ? (\n        <div className={classNames.travelTime} style={comingDurationStyle}>\n          <Template template=\"comingDuration\" param={model} />\n        </div>\n      ) : null}\n      {shouldShowResizeHandle ? (\n        <div className={classNames.resizeHandleX} onMouseDown={handleResizeStart} />\n      ) : null}\n    </div>\n  );\n}\n","import type { ComponentChildren, ComponentProps } from 'preact';\nimport { h, toChildArray } from 'preact';\nimport { useLayoutEffect, useMemo } from 'preact/hooks';\n\nimport type { Panel } from '@src/components/panel';\nimport { EventDetailPopup } from '@src/components/popup/eventDetailPopup';\nimport { EventFormPopup } from '@src/components/popup/eventFormPopup';\nimport { PopupOverlay } from '@src/components/popup/popupOverlay';\nimport { SeeMoreEventsPopup } from '@src/components/popup/seeMoreEventsPopup';\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport { LayoutContainerProvider } from '@src/contexts/layoutContainer';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { useDOMNode } from '@src/hooks/common/useDOMNode';\nimport { commonThemeSelector } from '@src/selectors/theme';\nimport { noop } from '@src/utils/noop';\nimport { isNil, isNumber, isString } from '@src/utils/type';\n\nimport type { PropsWithChildren, StyleProp } from '@t/components/common';\n\ninterface Props {\n  height?: number;\n  width?: number;\n  className?: string;\n  autoAdjustPanels?: boolean;\n  children: ComponentChildren;\n}\n\nfunction getLayoutStylesFromInfo(width?: number, height?: number) {\n  const styles: StyleProp = { height: toPercent(100) };\n\n  if (width) {\n    styles.width = width;\n  }\n  if (height) {\n    styles.height = height;\n  }\n\n  return styles;\n}\n\n// TODO: consider `direction` and `resizeMode`\nexport function Layout({\n  children,\n  width,\n  height,\n  className = '',\n  autoAdjustPanels = false,\n}: PropsWithChildren<Props>) {\n  const { backgroundColor } = useTheme(commonThemeSelector);\n\n  const [container, containerRefCallback] = useDOMNode<HTMLDivElement>();\n  const { setLastPanelType, updateLayoutHeight } = useDispatch('weekViewLayout');\n\n  const layoutClassName = useMemo(() => `${cls('layout')} ${className}`, [className]);\n\n  useLayoutEffect(() => {\n    if (container) {\n      const onResizeWindow = () => updateLayoutHeight(container.offsetHeight);\n\n      onResizeWindow();\n      window.addEventListener('resize', onResizeWindow);\n\n      return () => window.removeEventListener('resize', onResizeWindow);\n    }\n\n    return noop;\n  }, [container, updateLayoutHeight]);\n\n  useLayoutEffect(() => {\n    if (container && autoAdjustPanels) {\n      const childArray = toChildArray(children);\n      const lastChild = childArray[childArray.length - 1];\n\n      if (!isString(lastChild) && !isNumber(lastChild) && !isNil(lastChild)) {\n        setLastPanelType((lastChild.props as unknown as ComponentProps<typeof Panel>).name);\n      }\n    }\n  }, [children, setLastPanelType, autoAdjustPanels, container]);\n\n  return (\n    <LayoutContainerProvider value={container}>\n      <div\n        ref={containerRefCallback}\n        className={layoutClassName}\n        style={{ ...getLayoutStylesFromInfo(width, height), backgroundColor }}\n      >\n        {container ? children : null}\n      </div>\n      <EventFormPopup />\n      <EventDetailPopup />\n      <SeeMoreEventsPopup />\n      <PopupOverlay />\n    </LayoutContainerProvider>\n  );\n}\n","import { Fragment, h } from 'preact';\nimport { forwardRef } from 'preact/compat';\nimport { useCallback, useLayoutEffect, useMemo } from 'preact/hooks';\n\nimport { PanelResizer } from '@src/components/panelResizer';\nimport { DEFAULT_RESIZER_LENGTH } from '@src/constants/layout';\nimport { DEFAULT_PANEL_HEIGHT } from '@src/constants/style';\nimport { useDispatch, useStore } from '@src/contexts/calendarStore';\nimport { cls } from '@src/helpers/css';\nimport { isBoolean, isNil } from '@src/utils/type';\n\nimport type { PropsWithChildren, StyleProp } from '@t/components/common';\nimport type { AlldayEventCategory } from '@t/panel';\n\ninterface Props {\n  name: string;\n  overflowY?: boolean;\n  overflowX?: boolean;\n  show?: boolean;\n\n  autoSize?: number;\n  initialHeight?: number;\n  initialWidth?: number;\n  minHeight?: number;\n  minWidth?: number;\n  maxHeight?: number;\n  maxWidth?: number;\n\n  expandable?: boolean;\n  maxExpandableHeight?: number;\n  maxExpandableWidth?: number;\n\n  resizable?: boolean | string[];\n  resizerHeight?: number;\n  resizerWidth?: number;\n}\n\nfunction getPanelSide(side: number, maxExpandableSide?: number) {\n  return maxExpandableSide ? Math.min(maxExpandableSide, side) : side;\n}\n\nfunction getPanelStyle({\n  initialHeight,\n  initialWidth,\n  overflowX,\n  overflowY,\n  maxExpandableWidth,\n  maxExpandableHeight,\n  minHeight,\n  maxHeight,\n  minWidth,\n  maxWidth,\n}: Partial<Props>) {\n  const style: StyleProp = {};\n\n  if (initialWidth) {\n    style.width = getPanelSide(initialWidth, maxExpandableWidth);\n    style.height = '100%';\n  }\n  if (initialHeight) {\n    style.width = '100%';\n    style.height = getPanelSide(initialHeight, maxExpandableHeight);\n  }\n\n  if (overflowX) {\n    style.overflowX = 'auto';\n  }\n  if (overflowY) {\n    style.overflowY = 'auto';\n  }\n\n  return { ...style, minHeight, maxHeight, minWidth, maxWidth };\n}\n\nexport const Panel = forwardRef<HTMLDivElement, PropsWithChildren<Props>>(function Panel(\n  {\n    name,\n    initialWidth = DEFAULT_PANEL_HEIGHT,\n    initialHeight = DEFAULT_PANEL_HEIGHT,\n    overflowX,\n    overflowY,\n    maxExpandableWidth,\n    maxExpandableHeight,\n    minHeight,\n    maxHeight,\n    minWidth,\n    maxWidth,\n    resizerWidth = DEFAULT_RESIZER_LENGTH,\n    resizerHeight = DEFAULT_RESIZER_LENGTH,\n    resizable,\n    children,\n  },\n  ref\n) {\n  const { updateDayGridRowHeight } = useDispatch('weekViewLayout');\n  const { height: dayGridRowHeight } = useStore(\n    useCallback((state) => state.weekViewLayout.dayGridRows[name] ?? {}, [name])\n  );\n  const height = dayGridRowHeight ?? initialHeight;\n\n  useLayoutEffect(() => {\n    updateDayGridRowHeight({ rowName: name, height: initialHeight });\n  }, [initialHeight, name, updateDayGridRowHeight]);\n\n  const styles = getPanelStyle({\n    initialWidth,\n    initialHeight: height,\n    overflowX,\n    overflowY,\n    maxExpandableWidth,\n    maxExpandableHeight,\n    minHeight,\n    maxHeight,\n    minWidth,\n    maxWidth,\n  });\n\n  const isResizable = useMemo(() => {\n    if (isNil(resizable) || isBoolean(resizable)) {\n      return !!resizable;\n    }\n\n    return resizable.includes(name);\n  }, [resizable, name]);\n\n  return (\n    <Fragment>\n      <div className={cls('panel', name)} style={styles} ref={ref}>\n        {children}\n      </div>\n      {isResizable ? (\n        <PanelResizer\n          name={name as AlldayEventCategory}\n          width={resizerWidth}\n          height={resizerHeight}\n        />\n      ) : null}\n    </Fragment>\n  );\n});\n","import { h } from 'preact';\nimport { useCallback, useRef, useState } from 'preact/hooks';\n\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\nimport { DRAGGING_TYPE_CONSTANTS } from '@src/helpers/drag';\nimport { useDrag } from '@src/hooks/common/useDrag';\n\nimport type { StyleProp } from '@t/components/common';\nimport type { AlldayEventCategory } from '@t/panel';\n\ninterface Props {\n  name: AlldayEventCategory;\n  width: number;\n  height: number;\n}\n\nfunction getDefaultStyle(height: number, border: string) {\n  return {\n    height,\n    width: '100%',\n    cursor: 'row-resize',\n    borderTop: border,\n    borderBottom: border,\n  };\n}\n\nexport function PanelResizer({ name, height }: Props) {\n  const border = useTheme(useCallback((theme) => theme.week.panelResizer.border, []));\n  const style = getDefaultStyle(height, border);\n  const defaultGuideStyle = {\n    ...style,\n    display: 'none',\n    border: 'none',\n    backgroundColor: '#999',\n  };\n\n  const [guideStyle, setGuideStyle] = useState<StyleProp>(defaultGuideStyle);\n  const startPos = useRef<{ left: number; top: number } | null>(null);\n  const { updateDayGridRowHeightByDiff } = useDispatch('weekViewLayout');\n\n  const onMouseDown = useDrag(DRAGGING_TYPE_CONSTANTS.panelResizer, {\n    onDragStart: (e) => {\n      startPos.current = { left: e.pageX, top: e.pageY };\n    },\n    onDrag: (e) => {\n      if (startPos.current) {\n        const top = e.pageY - startPos.current.top;\n\n        setGuideStyle((prev) => ({ ...prev, top, display: null }));\n      }\n    },\n    onMouseUp: (e) => {\n      if (startPos.current) {\n        const diff = e.pageY - startPos.current.top;\n\n        startPos.current = null;\n\n        setGuideStyle(defaultGuideStyle);\n        updateDayGridRowHeightByDiff({ rowName: name, diff });\n      }\n    },\n  });\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div className={cls('panel-resizer')} style={style} onMouseDown={onMouseDown} />\n      <div className={cls('panel-resizer-guide')} style={guideStyle} />\n    </div>\n  );\n}\n","import { h } from 'preact';\n\nimport { cls } from '@src/helpers/css';\n\nimport type { CalendarInfo } from '@t/options';\n\ninterface Props {\n  open?: boolean;\n  calendars: CalendarInfo[];\n  setOpened: (isOpened: boolean) => void;\n  onChangeIndex: (index: number) => void;\n}\n\ninterface DropdownMenuItemProps {\n  index: number;\n  name: string;\n  backgroundColor: string;\n  onClick: (e: MouseEvent, index: number) => void;\n}\n\nconst classNames = {\n  dropdownMenu: cls('dropdown-menu'),\n  dropdownMenuItem: cls('dropdown-menu-item'),\n  dotIcon: cls('icon', 'dot'),\n  content: cls('content'),\n};\n\nfunction DropdownMenuItem({ index, name, backgroundColor, onClick }: DropdownMenuItemProps) {\n  return (\n    <li className={classNames.dropdownMenuItem} onClick={(e) => onClick(e, index)}>\n      <span className={classNames.dotIcon} style={{ backgroundColor }} />\n      <span className={classNames.content}>{name}</span>\n    </li>\n  );\n}\n\nexport function CalendarDropdownMenu({ calendars, setOpened, onChangeIndex }: Props) {\n  const handleDropdownMenuItemClick = (e: MouseEvent, index: number) => {\n    e.stopPropagation();\n    setOpened(false);\n    onChangeIndex(index);\n  };\n\n  return (\n    <ul className={classNames.dropdownMenu}>\n      {calendars.map(({ name, backgroundColor = '000' }, index) => (\n        <DropdownMenuItem\n          key={`dropdown-${name}-${index}`}\n          index={index}\n          name={name}\n          backgroundColor={backgroundColor}\n          onClick={handleDropdownMenuItemClick}\n        />\n      ))}\n    </ul>\n  );\n}\n","import { h } from 'preact';\n\nimport { CalendarDropdownMenu } from '@src/components/popup/calendarDropdownMenu';\nimport { PopupSection } from '@src/components/popup/popupSection';\nimport { cls } from '@src/helpers/css';\nimport { useDropdownState } from '@src/hooks/common/useDropdownState';\nimport type { FormStateDispatcher } from '@src/hooks/popup/useFormState';\nimport { FormStateActionType } from '@src/hooks/popup/useFormState';\n\nimport type { CalendarInfo } from '@t/options';\n\ninterface Props {\n  calendars: CalendarInfo[];\n  selectedCalendarId?: string;\n  formStateDispatch: FormStateDispatcher;\n}\n\nconst classNames = {\n  popupSection: ['dropdown-section', 'calendar-section'],\n  popupSectionItem: cls('popup-section-item', 'popup-button'),\n  dotIcon: cls('icon', 'dot'),\n  content: cls('content', 'event-calendar'),\n};\n\nexport function CalendarSelector({ calendars, selectedCalendarId, formStateDispatch }: Props) {\n  const { isOpened, setOpened, toggleDropdown } = useDropdownState();\n\n  const selectedCalendar = calendars.find((calendar) => calendar.id === selectedCalendarId);\n  const { backgroundColor = '', name = '' } = selectedCalendar ?? {};\n\n  const changeIndex = (index: number) =>\n    formStateDispatch({ type: FormStateActionType.setCalendarId, calendarId: calendars[index].id });\n\n  return (\n    <PopupSection onClick={toggleDropdown} classNames={classNames.popupSection}>\n      <button type=\"button\" className={classNames.popupSectionItem}>\n        <span className={classNames.dotIcon} style={{ backgroundColor }} />\n        <span className={classNames.content}>{name}</span>\n        <span className={cls('icon', 'ic-dropdown-arrow', { open: isOpened })} />\n      </button>\n      {isOpened && (\n        <CalendarDropdownMenu\n          calendars={calendars}\n          setOpened={setOpened}\n          onChangeIndex={changeIndex}\n        />\n      )}\n    </PopupSection>\n  );\n}\n","import { h } from 'preact';\n\nimport { Template } from '@src/components/template';\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport { cls } from '@src/helpers/css';\nimport { isFunction } from '@src/utils/type';\n\ninterface Props {\n  type: 'moreEvents' | 'form';\n  close?: () => void;\n}\n\nconst classNames = {\n  closeButton: cls('popup-button', 'popup-close'),\n  closeIcon: cls('icon', 'ic-close'),\n};\n\nexport function ClosePopupButton({ type, close }: Props) {\n  const { hideAllPopup } = useDispatch('popup');\n\n  const onClickHandler = () => {\n    hideAllPopup();\n\n    if (isFunction(close)) {\n      close();\n    }\n  };\n\n  return (\n    <button type=\"button\" className={classNames.closeButton} onClick={onClickHandler}>\n      {type === 'moreEvents' ? (\n        <Template template=\"monthMoreClose\" />\n      ) : (\n        <i className={classNames.closeIcon} />\n      )}\n    </button>\n  );\n}\n","import { h } from 'preact';\n\nimport { cls } from '@src/helpers/css';\n\nimport type { PropsWithChildren } from '@t/components/common';\n\nconst classNames = {\n  confirmButton: cls('popup-button', 'popup-confirm'),\n};\n\nexport function ConfirmPopupButton({ children }: PropsWithChildren) {\n  return (\n    <button type=\"submit\" className={classNames.confirmButton}>\n      <span>{children}</span>\n    </button>\n  );\n}\n","import type { RefObject } from 'preact';\nimport { h } from 'preact';\nimport { forwardRef } from 'preact/compat';\nimport { useEffect, useRef } from 'preact/hooks';\n\nimport type { DateRangePicker } from 'tui-date-picker';\nimport DatePicker from 'tui-date-picker';\n\nimport { PopupSection } from '@src/components/popup/popupSection';\nimport { Template } from '@src/components/template';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { cls } from '@src/helpers/css';\nimport type { FormStateDispatcher } from '@src/hooks/popup/useFormState';\nimport { FormStateActionType } from '@src/hooks/popup/useFormState';\nimport { useStringOnlyTemplate } from '@src/hooks/template/useStringOnlyTemplate';\nimport { optionsSelector } from '@src/selectors';\nimport TZDate from '@src/time/date';\n\ninterface Props {\n  start: TZDate;\n  end: TZDate;\n  isAllday?: boolean;\n  formStateDispatch: FormStateDispatcher;\n}\n\nconst classNames = {\n  datePickerContainer: cls('datepicker-container'),\n  datePicker: cls('popup-section-item', 'popup-date-picker'),\n  allday: cls('popup-section-item', 'popup-section-allday'),\n  dateIcon: cls('icon', 'ic-date'),\n  dateDash: cls('popup-date-dash'),\n  content: cls('content'),\n};\n\nexport const DateSelector = forwardRef<DateRangePicker, Props>(function DateSelector(\n  { start, end, isAllday = false, formStateDispatch },\n  ref\n) {\n  const { usageStatistics } = useStore(optionsSelector);\n  const startPickerContainerRef = useRef<HTMLDivElement>(null);\n  const startPickerInputRef = useRef<HTMLInputElement>(null);\n  const endPickerContainerRef = useRef<HTMLDivElement>(null);\n  const endPickerInputRef = useRef<HTMLInputElement>(null);\n\n  const startDatePlaceholder = useStringOnlyTemplate({\n    template: 'startDatePlaceholder',\n    defaultValue: 'Start Date',\n  });\n  const endDatePlaceholder = useStringOnlyTemplate({\n    template: 'endDatePlaceholder',\n    defaultValue: 'End Date',\n  });\n  const toggleAllday = () =>\n    formStateDispatch({ type: FormStateActionType.setAllday, isAllday: !isAllday });\n\n  useEffect(() => {\n    if (\n      startPickerContainerRef.current &&\n      startPickerInputRef.current &&\n      endPickerContainerRef.current &&\n      endPickerInputRef.current\n    ) {\n      const startDate = new TZDate(start);\n      const endDate = new TZDate(end);\n      // NOTE: Setting default start/end time when editing allday event first time.\n      // This logic refers to Apple calendar's behavior.\n      if (isAllday) {\n        startDate.setHours(12, 0, 0);\n        endDate.setHours(13, 0, 0);\n      }\n\n      (ref as RefObject<DateRangePicker>).current = DatePicker.createRangePicker({\n        startpicker: {\n          date: startDate.toDate(),\n          input: startPickerInputRef.current,\n          container: startPickerContainerRef.current,\n        },\n        endpicker: {\n          date: endDate.toDate(),\n          input: endPickerInputRef.current,\n          container: endPickerContainerRef.current,\n        },\n        format: isAllday ? 'yyyy-MM-dd' : 'yyyy-MM-dd HH:mm',\n        timePicker: isAllday\n          ? false\n          : {\n              showMeridiem: false,\n              usageStatistics,\n            },\n        usageStatistics,\n      });\n    }\n  }, [start, end, isAllday, usageStatistics, ref]);\n\n  return (\n    <PopupSection>\n      <div className={classNames.datePicker}>\n        <span className={classNames.dateIcon} />\n        <input\n          name=\"start\"\n          className={classNames.content}\n          placeholder={startDatePlaceholder}\n          ref={startPickerInputRef}\n        />\n        <div className={classNames.datePickerContainer} ref={startPickerContainerRef} />\n      </div>\n      <span className={classNames.dateDash}>-</span>\n      <div className={classNames.datePicker}>\n        <span className={classNames.dateIcon} />\n        <input\n          name=\"end\"\n          className={classNames.content}\n          placeholder={endDatePlaceholder}\n          ref={endPickerInputRef}\n        />\n        <div className={classNames.datePickerContainer} ref={endPickerContainerRef} />\n      </div>\n      <div className={classNames.allday} onClick={toggleAllday}>\n        <span\n          className={cls('icon', {\n            'ic-checkbox-normal': !isAllday,\n            'ic-checkbox-checked': isAllday,\n          })}\n        />\n        <span className={classNames.content}>\n          <Template template=\"popupIsAllday\" />\n        </span>\n        <input\n          name=\"isAllday\"\n          type=\"checkbox\"\n          className={cls('hidden-input')}\n          value={isAllday ? 'true' : 'false'}\n          checked={isAllday}\n        />\n      </div>\n    </PopupSection>\n  );\n});\n","import { h } from 'preact';\nimport { createPortal } from 'preact/compat';\nimport { useLayoutEffect, useMemo, useRef, useState } from 'preact/hooks';\n\nimport { EventDetailSectionDetail } from '@src/components/popup/eventDetailSectionDetail';\nimport { EventDetailSectionHeader } from '@src/components/popup/eventDetailSectionHeader';\nimport { Template } from '@src/components/template';\nimport { DetailPopupArrowDirection, HALF_OF_POPUP_ARROW_HEIGHT } from '@src/constants/popup';\nimport { useDispatch, useStore } from '@src/contexts/calendarStore';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useFloatingLayer } from '@src/contexts/floatingLayer';\nimport { useLayoutContainer } from '@src/contexts/layoutContainer';\nimport { cls } from '@src/helpers/css';\nimport { isLeftOutOfLayout, isTopOutOfLayout } from '@src/helpers/popup';\nimport { useCalendarColor } from '@src/hooks/calendar/useCalendarColor';\nimport { optionsSelector } from '@src/selectors';\nimport { eventDetailPopupParamSelector } from '@src/selectors/popup';\nimport { allOptionSelector } from '@src/selectors/options';\n\nimport TZDate from '@src/time/date';\nimport { isNil } from '@src/utils/type';\n\nimport type { StyleProp } from '@t/components/common';\nimport type { Rect } from '@t/store';\n\nconst classNames = {\n  popupContainer: cls('popup-container'),\n  detailContainer: cls('detail-container'),\n  topLine: cls('popup-top-line'),\n  border: cls('popup-arrow-border'),\n  fill: cls('popup-arrow-fill'),\n  sectionButton: cls('popup-section', 'section-button'),\n  content: cls('content'),\n  editIcon: cls('icon', 'ic-edit'),\n  deleteIcon: cls('icon', 'ic-delete'),\n  editButton: cls('edit-button'),\n  deleteButton: cls('delete-button'),\n  verticalLine: cls('vertical-line'),\n};\n\nfunction calculatePopupPosition(eventRect: Rect, layoutRect: Rect, popupRect: Rect) {\n  let top = eventRect.top + eventRect.height / 2 - popupRect.height / 2;\n  let left = eventRect.left + eventRect.width;\n\n  if (isTopOutOfLayout(top, layoutRect, popupRect)) {\n    top = layoutRect.top + layoutRect.height - popupRect.height;\n  }\n\n  if (isLeftOutOfLayout(left, layoutRect, popupRect)) {\n    left = eventRect.left - popupRect.width;\n  }\n\n  return [\n    Math.max(top, layoutRect.top) + window.scrollY,\n    Math.max(left, layoutRect.left) + window.scrollX,\n  ];\n}\n\nfunction calculatePopupArrowPosition(eventRect: Rect, layoutRect: Rect, popupRect: Rect) {\n  const top = eventRect.top + eventRect.height / 2 + window.scrollY;\n  const popupLeft = eventRect.left + eventRect.width;\n\n  const isOutOfLayout = popupLeft + popupRect.width > layoutRect.left + layoutRect.width;\n  const direction = isOutOfLayout\n    ? DetailPopupArrowDirection.right\n    : DetailPopupArrowDirection.left;\n\n  return { top, direction };\n}\n\nexport function EventDetailPopup() {\n  const { useFormPopup } = useStore(optionsSelector);\n  const popupParams = useStore(eventDetailPopupParamSelector);\n  const options = useStore(optionsSelector);\n  \n  const { event, eventRect } = popupParams ?? {};\n\n  const { showFormPopup, hideDetailPopup } = useDispatch('popup');\n\n  const calendarColor = useCalendarColor(event);\n  const layoutContainer = useLayoutContainer();\n  const detailPopupSlot = useFloatingLayer('detailPopupSlot');\n  const eventBus = useEventBus();\n  const popupContainerRef = useRef<HTMLDivElement>(null);\n\n  const [style, setStyle] = useState<StyleProp>({});\n  const [arrowTop, setArrowTop] = useState<number>(0);\n  const [arrowDirection, setArrowDirection] = useState<DetailPopupArrowDirection>(\n    DetailPopupArrowDirection.left\n  );\n\n  const popupArrowClassName = useMemo(() => {\n    const right = arrowDirection === DetailPopupArrowDirection.right;\n    const left = arrowDirection === DetailPopupArrowDirection.left;\n\n    return cls('popup-arrow', { right, left });\n  }, [arrowDirection]);\n\n  useLayoutEffect(() => {\n    if (popupContainerRef.current && eventRect && layoutContainer) {\n      const layoutRect = layoutContainer.getBoundingClientRect();\n      const popupRect = popupContainerRef.current.getBoundingClientRect();\n\n      const [top, left] = calculatePopupPosition(eventRect, layoutRect, popupRect);\n      const { top: arrowTopPosition, direction } = calculatePopupArrowPosition(\n        eventRect,\n        layoutRect,\n        popupRect\n      );\n\n      setStyle({ top, left });\n      setArrowTop(arrowTopPosition - top - HALF_OF_POPUP_ARROW_HEIGHT);\n      setArrowDirection(direction);\n    }\n  }, [eventRect, layoutContainer]);\n\n  if (isNil(event) || isNil(eventRect) || isNil(detailPopupSlot)) {\n    return null;\n  }\n\n  const {\n    title = '',\n    isAllday = false,\n    start = new TZDate(),\n    end = new TZDate(),\n    location,\n    state,\n    isReadOnly,\n    isPrivate,\n  } = event;\n\n  const popupArrowPointPosition = {\n    top: eventRect.top + eventRect.height / 2,\n    left: eventRect.left + eventRect.width / 2,\n  };\n\n  const onClickEditButton = () => {\n    if (useFormPopup) {\n      showFormPopup({\n        isCreationPopup: false,\n        event,\n        title,\n        location,\n        start,\n        end,\n        isAllday,\n        isPrivate,\n        eventState: state,\n        popupArrowPointPosition,\n      });\n    } else {\n      eventBus.fire('beforeUpdateEvent', { event: event.toEventObject(), changes: {} });\n    }\n  };\n\n  const onClickDeleteButton = () => {\n    eventBus.fire('beforeDeleteEvent', event.toEventObject());\n    hideDetailPopup();\n  };\n  const userData = options?.allOptions?.userData || null;\n\n  return createPortal(\n    <div role=\"dialog\" className={classNames.popupContainer} ref={popupContainerRef} style={style}>\n      <div className={classNames.detailContainer}>\n        <EventDetailSectionHeader event={event} />\n        <EventDetailSectionDetail event={event} userData={userData} />\n        {!isReadOnly && (\n          <div className={classNames.sectionButton}>\n            <button type=\"button\" className={classNames.editButton} onClick={onClickEditButton}>\n              <span className={classNames.editIcon} />\n              <span className={classNames.content}>\n                <Template template=\"popupEdit\" as=\"span\" />\n              </span>\n            </button>\n            <div className={classNames.verticalLine} />\n            <button type=\"button\" className={classNames.deleteButton} onClick={onClickDeleteButton}>\n              <span className={classNames.deleteIcon} />\n              <span className={classNames.content}>\n                <Template template=\"popupDelete\" as=\"span\" />\n              </span>\n            </button>\n          </div>\n        )}\n      </div>\n      <div\n        className={classNames.topLine}\n        style={{ backgroundColor: calendarColor.backgroundColor }}\n      />\n      <div className={popupArrowClassName}>\n        <div className={classNames.border} style={{ top: arrowTop }}>\n          <div className={classNames.fill} />\n        </div>\n      </div>\n    </div>,\n    detailPopupSlot\n  );\n}\n","import { h } from 'preact';\n\nimport { Template } from '@src/components/template';\nimport { cls } from '@src/helpers/css';\nimport { useCalendarById } from '@src/hooks/calendar/useCalendarById';\nimport type EventModel from '@src/model/eventModel';\n\ninterface Props {\n  event: EventModel;\n  userData: any;\n}\n\nconst classNames = {\n  detailItem: cls('detail-item'),\n  detailItemIndent: cls('detail-item', 'detail-item-indent'),\n  detailItemSeparate: cls('detail-item', 'detail-item-separate'),\n  sectionDetail: cls('popup-section', 'section-detail'),\n  content: cls('content'),\n  locationIcon: cls('icon', 'ic-location-b'),\n  repeatIcon: cls('icon', 'ic-repeat-b'),\n  userIcon: cls('icon', 'ic-user-b'),\n  stateIcon: cls('icon', 'ic-state-b'),\n  calendarDotIcon: cls('icon', 'calendar-dot'),\n};\n\n// eslint-disable-next-line complexity\nexport function EventDetailSectionDetail({ event, userData }: Props) {\n  const { location, recurrenceRule, attendees, state, calendarId, body } = event;\n  const calendar = useCalendarById(calendarId);\n  const eventId = event?.id;\n  const currentUserData = userData.find((user: any) => {\n    if(user?.id == eventId) return true; \n    return false;\n  });\n  \n  console.log({currentUserData});\n  return (\n    <div className={classNames.sectionDetail} style={{maxHeight: '1000px', overflow: \"auto\"}} >\n      {currentUserData?.image_file && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.content}>\n            <img style={{maxWidth: '100%', aspectRatio: 1, marginTop: \"10px\", marginBottom: \"10px\"}} src={currentUserData?.image_file} />\n          </span>\n        </div>\n      )}\n      {currentUserData?.description && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.content}>\n            Description: {currentUserData?.description}\n            {/* <Template template=\"popupDetailState\" param={event} as=\"span\" /> */}\n          </span>\n        </div>\n      )}\n      {currentUserData?.attendance_type && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.stateIcon} />\n          <span className={classNames.content}>\n            Attendance Type: {currentUserData?.attendance_type}\n            {/* <Template template=\"popupDetailState\" param={event} as=\"span\" /> */}\n          </span>\n        </div>\n      )}\n      {currentUserData?.attendance_point && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.repeatIcon} />\n          <span className={classNames.content}>\n            Attendance Point: {currentUserData?.attendance_point}\n            {/* <Template template=\"popupDetailState\" param={event} as=\"span\" /> */}\n          </span>\n        </div>\n      )}\n      {currentUserData?.slots_total && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.repeatIcon} />\n          <span className={classNames.content}>\n            Slots Total: {currentUserData?.slots_total}\n            {/* <Template template=\"popupDetailState\" param={event} as=\"span\" /> */}\n          </span>\n        </div>\n      )}\n      {currentUserData?.slots_remain && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.repeatIcon} />\n          <span className={classNames.content}>\n            Slots Remain: {currentUserData?.slots_remain}\n            {/* <Template template=\"popupDetailState\" param={event} as=\"span\" /> */}\n          </span>\n        </div>\n      )}\n      {currentUserData?.register_by_timestamp && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.calendarDotIcon} />\n          <span className={classNames.content}>\n            Register By: {currentUserData?.register_by_timestamp}\n            {/* <Template template=\"popupDetailState\" param={event} as=\"span\" /> */}\n          </span>\n        </div>\n      )}\n      \n      {/* {location && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.locationIcon} />\n          <span className={classNames.content}>\n            <Template template=\"popupDetailLocation\" param={event} as=\"span\" />\n          </span>\n        </div>\n      )}\n      {recurrenceRule && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.repeatIcon} />\n          <span className={classNames.content}>\n            <Template template=\"popupDetailRecurrenceRule\" param={event} as=\"span\" />\n          </span>\n        </div>\n      )}\n      {attendees && (\n        <div className={classNames.detailItemIndent}>\n          <span className={classNames.userIcon} />\n          <span className={classNames.content}>\n            <Template template=\"popupDetailAttendees\" param={event} as=\"span\" />\n          </span>\n        </div>\n      )}\n      {state && (\n        <div className={classNames.detailItem}>\n          <span className={classNames.stateIcon} />\n          <span className={classNames.content}>\n            <Template template=\"popupDetailState\" param={event} as=\"span\" />\n          </span>\n        </div>\n      )}\n      {calendar && (\n        <div className={classNames.detailItem}>\n          <span\n            className={classNames.calendarDotIcon}\n            style={{\n              backgroundColor: calendar?.backgroundColor ?? '',\n            }}\n          />\n          <span className={classNames.content}>{calendar?.name ?? ''}</span>\n        </div>\n      )}\n      {body && (\n        <div className={classNames.detailItemSeparate}>\n          <span className={classNames.content}>\n            <Template template=\"popupDetailBody\" param={event} as=\"span\" />\n          </span>\n        </div>\n      )} */}\n    </div>\n  );\n}\n","import { h } from 'preact';\n\nimport { Template } from '@src/components/template';\nimport { cls } from '@src/helpers/css';\nimport type EventModel from '@src/model/eventModel';\n\ninterface Props {\n  event: EventModel;\n}\n\nconst classNames = {\n  sectionHeader: cls('popup-section', 'section-header'),\n  content: cls('content'),\n  eventTitle: cls('event-title'),\n};\n\nexport function EventDetailSectionHeader({ event }: Props) {\n  return (\n    <div className={classNames.sectionHeader}>\n      <div className={classNames.eventTitle}>\n        <Template template=\"popupDetailTitle\" param={event} as=\"span\" />\n      </div>\n      <div className={classNames.content}>\n        <Template template=\"popupDetailDate\" param={event} as=\"span\" />\n      </div>\n    </div>\n  );\n}\n","import { h } from 'preact';\nimport { createPortal } from 'preact/compat';\nimport { useEffect, useLayoutEffect, useMemo, useRef, useState } from 'preact/hooks';\n\nimport type { DateRangePicker } from 'tui-date-picker';\n\nimport { CalendarSelector } from '@src/components/popup/calendarSelector';\nimport { ClosePopupButton } from '@src/components/popup/closePopupButton';\nimport { ConfirmPopupButton } from '@src/components/popup/confirmPopupButton';\nimport { DateSelector } from '@src/components/popup/dateSelector';\nimport { EventStateSelector } from '@src/components/popup/eventStateSelector';\nimport { LocationInputBox } from '@src/components/popup/locationInputBox';\nimport { PopupSection } from '@src/components/popup/popupSection';\nimport { TitleInputBox } from '@src/components/popup/titleInputBox';\nimport { Template } from '@src/components/template';\nimport {\n  BOOLEAN_KEYS_OF_EVENT_MODEL_DATA,\n  FormPopupArrowDirection,\n  HALF_OF_POPUP_ARROW_HEIGHT,\n} from '@src/constants/popup';\nimport { useDispatch, useStore } from '@src/contexts/calendarStore';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useFloatingLayer } from '@src/contexts/floatingLayer';\nimport { useLayoutContainer } from '@src/contexts/layoutContainer';\nimport { cls } from '@src/helpers/css';\nimport { isLeftOutOfLayout, isTopOutOfLayout } from '@src/helpers/popup';\nimport { FormStateActionType, useFormState } from '@src/hooks/popup/useFormState';\nimport type EventModel from '@src/model/eventModel';\nimport { calendarSelector } from '@src/selectors';\nimport { eventFormPopupParamSelector } from '@src/selectors/popup';\nimport TZDate from '@src/time/date';\nimport { compare } from '@src/time/datetime';\nimport { isNil, isPresent } from '@src/utils/type';\n\nimport type { FormEvent, StyleProp } from '@t/components/common';\nimport type { BooleanKeyOfEventObject, EventObject } from '@t/events';\nimport type { PopupArrowPointPosition, Rect } from '@t/store';\n\nconst classNames = {\n  popupContainer: cls('popup-container'),\n  formContainer: cls('form-container'),\n  popupArrowBorder: cls('popup-arrow-border'),\n  popupArrowFill: cls('popup-arrow-fill'),\n};\n\nfunction calculatePopupPosition(\n  popupArrowPointPosition: PopupArrowPointPosition,\n  layoutRect: Rect,\n  popupRect: Rect\n) {\n  let top = popupArrowPointPosition.top - popupRect.height - HALF_OF_POPUP_ARROW_HEIGHT;\n  let left = popupArrowPointPosition.left - popupRect.width / 2;\n  let direction = FormPopupArrowDirection.bottom;\n\n  if (top < layoutRect.top) {\n    direction = FormPopupArrowDirection.top;\n    top = popupArrowPointPosition.top + HALF_OF_POPUP_ARROW_HEIGHT;\n  }\n\n  if (isTopOutOfLayout(top, layoutRect, popupRect)) {\n    top = layoutRect.top + layoutRect.height - popupRect.height;\n  }\n\n  if (isLeftOutOfLayout(left, layoutRect, popupRect)) {\n    left = layoutRect.left + layoutRect.width - popupRect.width;\n  }\n\n  return {\n    top: top + window.scrollY,\n    left: Math.max(left, layoutRect.left) + window.scrollX,\n    direction,\n  };\n}\n\nfunction isBooleanKey(key: string): key is BooleanKeyOfEventObject {\n  return BOOLEAN_KEYS_OF_EVENT_MODEL_DATA.indexOf(key as BooleanKeyOfEventObject) !== -1;\n}\n\nfunction getChanges(event: EventModel, eventObject: EventObject) {\n  return Object.entries(eventObject).reduce((changes, [key, value]) => {\n    const eventObjectKey = key as keyof EventObject;\n\n    if (event[eventObjectKey] instanceof TZDate) {\n      // NOTE: handle TZDate\n      if (compare(event[eventObjectKey], value) !== 0) {\n        changes[eventObjectKey] = value;\n      }\n    } else if (event[eventObjectKey] !== value) {\n      changes[eventObjectKey] = value;\n    }\n\n    return changes;\n  }, {} as EventObject);\n}\n\nexport function EventFormPopup() {\n  const { calendars } = useStore(calendarSelector);\n  const { hideAllPopup } = useDispatch('popup');\n  const popupParams = useStore(eventFormPopupParamSelector);\n  const { start, end, popupArrowPointPosition, close, isCreationPopup, event } = popupParams ?? {};\n  const eventBus = useEventBus();\n  const formPopupSlot = useFloatingLayer('formPopupSlot');\n  const [formState, formStateDispatch] = useFormState(calendars[0]?.id);\n\n  const datePickerRef = useRef<DateRangePicker>(null);\n  const popupContainerRef = useRef<HTMLDivElement>(null);\n  const [style, setStyle] = useState<StyleProp>({});\n  const [arrowLeft, setArrowLeft] = useState<number>(0);\n  const [arrowDirection, setArrowDirection] = useState<FormPopupArrowDirection>(\n    FormPopupArrowDirection.bottom\n  );\n\n  const layoutContainer = useLayoutContainer();\n\n  const popupArrowClassName = useMemo(() => {\n    const top = arrowDirection === FormPopupArrowDirection.top;\n    const bottom = arrowDirection === FormPopupArrowDirection.bottom;\n\n    return cls('popup-arrow', { top, bottom });\n  }, [arrowDirection]);\n\n  useLayoutEffect(() => {\n    if (popupContainerRef.current && popupArrowPointPosition && layoutContainer) {\n      const layoutRect = layoutContainer.getBoundingClientRect();\n      const popupRect = popupContainerRef.current.getBoundingClientRect();\n\n      const { top, left, direction } = calculatePopupPosition(\n        popupArrowPointPosition,\n        layoutRect,\n        popupRect\n      );\n      const arrowLeftPosition = popupArrowPointPosition.left - left;\n\n      setStyle({ left, top });\n      setArrowLeft(arrowLeftPosition);\n      setArrowDirection(direction);\n    }\n  }, [layoutContainer, popupArrowPointPosition]);\n\n  // Sync store's popupParams with formState when editing event\n  useEffect(() => {\n    if (isPresent(popupParams) && isPresent(event)) {\n      formStateDispatch({\n        type: FormStateActionType.init,\n        event: {\n          title: popupParams.title,\n          location: popupParams.location,\n          isAllday: popupParams.isAllday,\n          isPrivate: popupParams.isPrivate,\n          calendarId: event.calendarId,\n          state: popupParams.eventState,\n        },\n      });\n    }\n  }, [calendars, event, formStateDispatch, popupParams]);\n\n  // Reset form states when closing the popup\n  useEffect(() => {\n    if (isNil(popupParams)) {\n      formStateDispatch({ type: FormStateActionType.reset });\n    }\n  }, [formStateDispatch, popupParams]);\n\n  if (isNil(start) || isNil(end) || isNil(formPopupSlot)) {\n    return null;\n  }\n\n  const onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    const formData = new FormData(e.target as HTMLFormElement);\n    const eventData: EventObject = { ...formState };\n\n    formData.forEach((data, key) => {\n      eventData[key as keyof EventObject] = isBooleanKey(key) ? data === 'true' : data;\n    });\n\n    eventData.start = new TZDate(datePickerRef.current?.getStartDate());\n    eventData.end = new TZDate(datePickerRef.current?.getEndDate());\n\n    if (isCreationPopup) {\n      eventBus.fire('beforeCreateEvent', eventData);\n    } else if (event) {\n      const changes = getChanges(event, eventData);\n\n      eventBus.fire('beforeUpdateEvent', { event: event.toEventObject(), changes });\n    }\n    hideAllPopup();\n  };\n\n  return createPortal(\n    <div role=\"dialog\" className={classNames.popupContainer} ref={popupContainerRef} style={style}>\n      <form onSubmit={onSubmit}>\n        <div className={classNames.formContainer}>\n          {calendars?.length ? (\n            <CalendarSelector\n              selectedCalendarId={formState.calendarId}\n              calendars={calendars}\n              formStateDispatch={formStateDispatch}\n            />\n          ) : (\n            <PopupSection />\n          )}\n          <TitleInputBox\n            title={formState.title}\n            isPrivate={formState.isPrivate}\n            formStateDispatch={formStateDispatch}\n          />\n          <LocationInputBox location={formState.location} formStateDispatch={formStateDispatch} />\n          <DateSelector\n            start={start}\n            end={end}\n            isAllday={formState.isAllday}\n            formStateDispatch={formStateDispatch}\n            ref={datePickerRef}\n          />\n          <EventStateSelector eventState={formState.state} formStateDispatch={formStateDispatch} />\n          <ClosePopupButton type=\"form\" close={close} />\n          <PopupSection>\n            <ConfirmPopupButton>\n              {isCreationPopup ? (\n                <Template template=\"popupSave\" />\n              ) : (\n                <Template template=\"popupUpdate\" />\n              )}\n            </ConfirmPopupButton>\n          </PopupSection>\n        </div>\n        <div className={popupArrowClassName}>\n          <div className={classNames.popupArrowBorder} style={{ left: arrowLeft }}>\n            <div className={classNames.popupArrowFill} />\n          </div>\n        </div>\n      </form>\n    </div>,\n    formPopupSlot\n  );\n}\n","import { h } from 'preact';\n\nimport { PopupSection } from '@src/components/popup/popupSection';\nimport { StateDropdownMenu } from '@src/components/popup/stateDropdownMenu';\nimport { Template } from '@src/components/template';\nimport { cls } from '@src/helpers/css';\nimport { useDropdownState } from '@src/hooks/common/useDropdownState';\nimport type { FormStateDispatcher } from '@src/hooks/popup/useFormState';\nimport { FormStateActionType } from '@src/hooks/popup/useFormState';\n\nimport type { EventState } from '@t/events';\n\ninterface Props {\n  eventState?: EventState;\n  formStateDispatch: FormStateDispatcher;\n}\n\nconst classNames = {\n  popupSection: ['dropdown-section', 'state-section'],\n  popupSectionItem: cls('popup-section-item', 'popup-button'),\n  stateIcon: cls('icon', 'ic-state'),\n  arrowIcon: cls('icon', 'ic-dropdown-arrow'),\n  content: cls('content', 'event-state'),\n};\n\nexport function EventStateSelector({ eventState = 'Busy', formStateDispatch }: Props) {\n  const { isOpened, setOpened, toggleDropdown } = useDropdownState();\n\n  const handleChangeEventState = (state: EventState) =>\n    formStateDispatch({ type: FormStateActionType.setState, state });\n\n  return (\n    <PopupSection onClick={toggleDropdown} classNames={classNames.popupSection}>\n      <button type=\"button\" className={classNames.popupSectionItem}>\n        <span className={classNames.stateIcon} />\n        <span className={classNames.content}>\n          {eventState === 'Busy' ? (\n            <Template template=\"popupStateBusy\" />\n          ) : (\n            <Template template=\"popupStateFree\" />\n          )}\n        </span>\n        <span className={classNames.arrowIcon} />\n      </button>\n      {isOpened && (\n        <StateDropdownMenu setOpened={setOpened} setEventState={handleChangeEventState} />\n      )}\n    </PopupSection>\n  );\n}\n","import { h } from 'preact';\nimport type { ChangeEventHandler } from 'preact/compat';\n\nimport { PopupSection } from '@src/components/popup/popupSection';\nimport { cls } from '@src/helpers/css';\nimport type { FormStateDispatcher } from '@src/hooks/popup/useFormState';\nimport { FormStateActionType } from '@src/hooks/popup/useFormState';\nimport { useStringOnlyTemplate } from '@src/hooks/template/useStringOnlyTemplate';\n\ninterface Props {\n  location?: string;\n  formStateDispatch: FormStateDispatcher;\n}\n\nconst classNames = {\n  popupSectionItem: cls('popup-section-item', 'popup-section-location'),\n  locationIcon: cls('icon', 'ic-location'),\n  content: cls('content'),\n};\n\nexport function LocationInputBox({ location, formStateDispatch }: Props) {\n  const locationPlaceholder = useStringOnlyTemplate({\n    template: 'locationPlaceholder',\n    defaultValue: 'Location',\n  });\n\n  const handleLocationChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n    formStateDispatch({ type: FormStateActionType.setLocation, location: e.currentTarget.value });\n  };\n\n  return (\n    <PopupSection>\n      <div className={classNames.popupSectionItem}>\n        <span className={classNames.locationIcon} />\n        <input\n          name=\"location\"\n          className={classNames.content}\n          placeholder={locationPlaceholder}\n          value={location}\n          onChange={handleLocationChange}\n        />\n      </div>\n    </PopupSection>\n  );\n}\n","import { h } from 'preact';\n\nimport { useDispatch, useStore } from '@src/contexts/calendarStore';\nimport { cls } from '@src/helpers/css';\nimport type { CalendarState } from '@src/types/store';\nimport { isPresent } from '@src/utils/type';\n\nfunction shownPopupParamSelector(state: CalendarState) {\n  return Object.values(state.popup).find((popup) => isPresent(popup));\n}\n\nexport function PopupOverlay() {\n  const shownPopupParam = useStore(shownPopupParamSelector);\n  const { hideAllPopup } = useDispatch('popup');\n\n  const isPopupShown = isPresent(shownPopupParam);\n\n  const onClick = (ev: MouseEvent) => {\n    ev.stopPropagation();\n\n    shownPopupParam?.close?.();\n    hideAllPopup();\n  };\n\n  return (\n    <div\n      className={cls('popup-overlay')}\n      style={{ display: isPopupShown ? 'block' : 'none' }}\n      onClick={onClick}\n    />\n  );\n}\n","import { h } from 'preact';\n\nimport { cls } from '@src/helpers/css';\nimport { noop } from '@src/utils/noop';\n\nimport type { PropsWithChildren } from '@t/components/common';\n\ninterface Props {\n  classNames?: string[];\n  onClick?: () => void;\n}\n\nexport function PopupSection({\n  children,\n  classNames = [],\n  onClick = noop,\n}: PropsWithChildren<Props>) {\n  return (\n    <div className={cls('popup-section', ...classNames)} onClick={onClick}>\n      {children}\n    </div>\n  );\n}\n","import { h } from 'preact';\nimport { createPortal } from 'preact/compat';\nimport { useEffect, useRef } from 'preact/hooks';\n\nimport { HorizontalEvent } from '@src/components/events/horizontalEvent';\nimport { ClosePopupButton } from '@src/components/popup/closePopupButton';\nimport { Template } from '@src/components/template';\nimport {\n  MONTH_EVENT_HEIGHT,\n  MONTH_MORE_VIEW_HEADER_HEIGHT,\n  MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM,\n  MONTH_MORE_VIEW_HEADER_PADDING,\n  MONTH_MORE_VIEW_HEADER_PADDING_TOP,\n} from '@src/constants/style';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useFloatingLayer } from '@src/contexts/floatingLayer';\nimport { useMonthTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\nimport { seeMorePopupParamSelector } from '@src/selectors/popup';\nimport { toFormat } from '@src/time/datetime';\nimport { isNil } from '@src/utils/type';\n\nconst classNames = {\n  container: cls('see-more-container'),\n  seeMore: cls('see-more'),\n  header: cls('see-more-header'),\n  list: cls('month-more-list'),\n};\n\nexport function SeeMoreEventsPopup() {\n  const popupParams = useStore(seeMorePopupParamSelector);\n  const { date, events = [], popupPosition } = popupParams ?? {};\n  const { moreView, moreViewTitle } = useMonthTheme();\n  const seeMorePopupSlot = useFloatingLayer('seeMorePopupSlot');\n  const eventBus = useEventBus();\n  const moreEventsPopupContainerRef = useRef(null);\n  const isHidden = isNil(date) || isNil(popupPosition) || isNil(seeMorePopupSlot);\n\n  useEffect(() => {\n    if (!isHidden && moreEventsPopupContainerRef.current) {\n      eventBus.fire('clickMoreEventsBtn', {\n        date: date.toDate(),\n        target: moreEventsPopupContainerRef.current,\n      });\n    }\n  }, [date, eventBus, isHidden]);\n\n  if (isHidden) {\n    return null;\n  }\n\n  const style = {\n    height: MONTH_MORE_VIEW_HEADER_HEIGHT,\n    marginBottom: MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM,\n    padding: MONTH_MORE_VIEW_HEADER_PADDING,\n    backgroundColor: moreViewTitle.backgroundColor,\n  };\n\n  const moreTitle = {\n    ymd: toFormat(date, 'YYYY-MM-DD'),\n    day: date.getDay(),\n    date: date.getDate().toString().padStart(2, '0'),\n  };\n\n  const moreViewListStyle = {\n    height: `calc(100% - ${\n      MONTH_MORE_VIEW_HEADER_HEIGHT +\n      MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM +\n      MONTH_MORE_VIEW_HEADER_PADDING_TOP\n    }px)`,\n  };\n\n  return createPortal(\n    <div\n      role=\"dialog\"\n      className={classNames.container}\n      style={popupPosition}\n      ref={moreEventsPopupContainerRef}\n    >\n      <div className={classNames.seeMore} style={moreView}>\n        <div className={classNames.header} style={style}>\n          <Template template=\"monthMoreTitleDate\" param={moreTitle} />\n          <ClosePopupButton type=\"moreEvents\" />\n        </div>\n        <div className={classNames.list} style={moreViewListStyle}>\n          {events.map((uiModel) => (\n            <HorizontalEvent\n              key={`see-more-event-item-${uiModel.cid()}`}\n              uiModel={uiModel}\n              eventHeight={MONTH_EVENT_HEIGHT}\n              headerHeight={MONTH_MORE_VIEW_HEADER_HEIGHT}\n              flat={true}\n            />\n          ))}\n        </div>\n      </div>\n    </div>,\n    seeMorePopupSlot\n  );\n}\n","import { h } from 'preact';\n\nimport { Template } from '@src/components/template';\nimport { cls } from '@src/helpers/css';\n\nimport type { EventState } from '@t/events';\n\ninterface Props {\n  setOpened: (isOpened: boolean) => void;\n  setEventState: (eventState: EventState) => void;\n}\n\nconst EVENT_STATES: EventState[] = ['Busy', 'Free'];\nconst classNames = {\n  popupSectionItem: cls('popup-section-item', 'dropdown-menu-item'),\n  dropdownMenu: cls('dropdown-menu'),\n  icon: cls('icon'),\n  content: cls('content'),\n};\n\nexport function StateDropdownMenu({ setOpened, setEventState }: Props) {\n  const onClickDropdown = (e: MouseEvent, state: EventState) => {\n    e.stopPropagation();\n    setOpened(false);\n    setEventState(state);\n  };\n\n  return (\n    <ul className={classNames.dropdownMenu}>\n      {EVENT_STATES.map((state) => (\n        <li\n          key={state}\n          className={classNames.popupSectionItem}\n          onClick={(e) => onClickDropdown(e, state)}\n        >\n          <span className={classNames.icon} />\n          <span className={classNames.content}>\n            {state === 'Busy' ? (\n              <Template template=\"popupStateBusy\" />\n            ) : (\n              <Template template=\"popupStateFree\" />\n            )}\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { h } from 'preact';\nimport type { ChangeEventHandler } from 'preact/compat';\n\nimport { PopupSection } from '@src/components/popup/popupSection';\nimport { cls } from '@src/helpers/css';\nimport type { FormStateDispatcher } from '@src/hooks/popup/useFormState';\nimport { FormStateActionType } from '@src/hooks/popup/useFormState';\nimport { useStringOnlyTemplate } from '@src/hooks/template/useStringOnlyTemplate';\n\ninterface Props {\n  title?: string;\n  isPrivate?: boolean;\n  formStateDispatch: FormStateDispatcher;\n}\n\nconst classNames = {\n  popupSectionItem: cls('popup-section-item', 'popup-section-title'),\n  privateButton: cls('popup-section-item', 'popup-section-private', 'popup-button'),\n  titleIcon: cls('icon', 'ic-title'),\n  content: cls('content'),\n};\n\nexport function TitleInputBox({ title, isPrivate = false, formStateDispatch }: Props) {\n  const titlePlaceholder = useStringOnlyTemplate({\n    template: 'titlePlaceholder',\n    defaultValue: 'Subject',\n  });\n\n  const togglePrivate = () =>\n    formStateDispatch({ type: FormStateActionType.setPrivate, isPrivate: !isPrivate });\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n    formStateDispatch({ type: FormStateActionType.setTitle, title: e.currentTarget.value });\n  };\n\n  return (\n    <PopupSection>\n      <div className={classNames.popupSectionItem}>\n        <span className={classNames.titleIcon} />\n        <input\n          name=\"title\"\n          className={classNames.content}\n          placeholder={titlePlaceholder}\n          value={title}\n          onChange={handleInputChange}\n          required\n        />\n      </div>\n      <button type=\"button\" className={classNames.privateButton} onClick={togglePrivate}>\n        <span className={cls('icon', { 'ic-private': isPrivate, 'ic-public': !isPrivate })} />\n        <input\n          name=\"isPrivate\"\n          type=\"checkbox\"\n          className={cls('hidden-input')}\n          value={isPrivate ? 'true' : 'false'}\n          checked={isPrivate}\n        />\n      </button>\n    </PopupSection>\n  );\n}\n","import { cloneElement, createElement } from 'preact';\n\nimport { useStore } from '@src/contexts/calendarStore';\nimport { cls } from '@src/helpers/css';\nimport { templateSelector } from '@src/selectors';\nimport type { TemplateName } from '@src/template/default';\nimport { sanitize } from '@src/utils/sanitizer';\nimport { isNil, isString } from '@src/utils/type';\n\nimport type { TemplateReturnType } from '@t/template';\n\ninterface Props {\n  template: TemplateName;\n  param?: any;\n  as?: keyof HTMLElementTagNameMap;\n}\n\nexport function Template({ template, param, as: tagName = 'div' }: Props) {\n  const templates = useStore(templateSelector);\n  const templateFunc: Function = templates[template];\n\n  if (isNil(templateFunc)) {\n    return null;\n  }\n\n  const htmlOrVnode: TemplateReturnType = templateFunc(param);\n\n  return isString(htmlOrVnode)\n    ? createElement(tagName, {\n        className: cls(`template-${template}`),\n        dangerouslySetInnerHTML: {\n          __html: sanitize(htmlOrVnode),\n        },\n      })\n    : cloneElement(htmlOrVnode, {\n        className: `${htmlOrVnode.props.className ?? ''} ${cls(`template-${template}`)}`,\n      });\n}\n","import { h } from 'preact';\nimport { memo } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\n\nimport { TimeEvent } from '@src/components/events/timeEvent';\nimport { GridSelectionByColumn } from '@src/components/timeGrid/gridSelectionByColumn';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\nimport { usePrimaryTimezone } from '@src/hooks/timezone/usePrimaryTimezone';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\nimport { isSameDate, isWeekend } from '@src/time/datetime';\n\nimport type { GridPositionFinder, TimeGridData } from '@t/grid';\nimport type { ThemeState } from '@t/theme';\n\nimport { ResizingGuideByColumn } from './resizingGuideByColumn';\n\nconst classNames = {\n  column: cls('column'),\n  backgrounds: cls('background-events'),\n  events: cls('events'),\n};\n\n// TODO: implement BackgroundEvents\n// function BackgroundEvents({\n//   eventUIModels,\n//   startTime,\n//   endTime,\n// }: {\n//   eventUIModels: EventUIModel[];\n//   startTime: TZDate;\n//   endTime: TZDate;\n// }) {\n//   const backgroundEvents = eventUIModels.filter(isBackgroundEvent);\n\n//   return (\n//     <div className={classNames.backgrounds}>\n//       {backgroundEvents.map((eventUIModel, index) => {\n//         const { top, height } = getTopHeightByTime(\n//           eventUIModel.model.start,\n//           eventUIModel.model.end,\n//           startTime,\n//           endTime\n//         );\n\n//         return (\n//           <BackgroundEvent\n//             uiModel={eventUIModel}\n//             top={toPercent(top)}\n//             height={toPercent(height)}\n//             key={`backgroundEvent-${index}`}\n//           />\n//         );\n//       })}\n//     </div>\n//   );\n// }\n\nfunction VerticalEvents({\n  eventUIModels,\n  minEventHeight,\n}: {\n  eventUIModels: EventUIModel[];\n  minEventHeight: number;\n}) {\n  // @TODO: use dynamic value\n  const style = { marginRight: 8 };\n\n  return (\n    <div className={classNames.events} style={style}>\n      {eventUIModels.map((eventUIModel) => (\n        <TimeEvent\n          key={`${eventUIModel.valueOf()}-${eventUIModel.cid()}`}\n          uiModel={eventUIModel}\n          minHeight={minEventHeight}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction backgroundColorSelector(theme: ThemeState) {\n  return {\n    defaultBackgroundColor: theme.week.dayGrid.backgroundColor,\n    todayBackgroundColor: theme.week.today.backgroundColor,\n    weekendBackgroundColor: theme.week.weekend.backgroundColor,\n  };\n}\n\nfunction getBackgroundColor({\n  today,\n  columnDate,\n  defaultBackgroundColor,\n  todayBackgroundColor,\n  weekendBackgroundColor,\n}: {\n  today: TZDate;\n  columnDate: TZDate;\n  defaultBackgroundColor: string;\n  todayBackgroundColor: string;\n  weekendBackgroundColor: string;\n}) {\n  const isTodayColumn = isSameDate(today, columnDate);\n  const isWeekendColumn = isWeekend(columnDate.getDay());\n\n  if (isTodayColumn) {\n    return todayBackgroundColor;\n  }\n\n  if (isWeekendColumn) {\n    return weekendBackgroundColor;\n  }\n\n  return defaultBackgroundColor;\n}\n\ninterface Props {\n  timeGridData: TimeGridData;\n  columnDate: TZDate;\n  columnWidth: string;\n  columnIndex: number;\n  totalUIModels: EventUIModel[][];\n  gridPositionFinder: GridPositionFinder;\n  isLastColumn: boolean;\n  readOnly?: boolean;\n}\n\nexport const Column = memo(function Column({\n  columnDate,\n  columnWidth,\n  columnIndex,\n  totalUIModels,\n  gridPositionFinder,\n  timeGridData,\n  isLastColumn,\n}: Props) {\n  const { rows: timeGridRows } = timeGridData;\n  const borderRight = useTheme(useCallback((theme) => theme.week.timeGrid.borderRight, []));\n  const backgroundColorTheme = useTheme(backgroundColorSelector);\n  const [, getNow] = usePrimaryTimezone();\n  const today = getNow();\n\n  // const [startTime, endTime] = useMemo(() => {\n  //   const { startTime: startTimeStr } = first(timeGridRows);\n  //   const { endTime: endTimeStr } = last(timeGridRows);\n\n  //   const start = setTimeStrToDate(columnDate, startTimeStr);\n  //   const end = setTimeStrToDate(columnDate, endTimeStr);\n\n  //   return [start, end];\n  // }, [columnDate, timeGridRows]);\n\n  const backgroundColor = getBackgroundColor({ today, columnDate, ...backgroundColorTheme });\n\n  const style = {\n    width: columnWidth,\n    backgroundColor,\n    borderRight: isLastColumn ? 'none' : borderRight,\n  };\n\n  const uiModelsByColumn = totalUIModels[columnIndex];\n\n  const minEventHeight = timeGridRows[0].height;\n\n  return (\n    <div\n      className={classNames.column}\n      style={style}\n      data-testid={`timegrid-column-${columnDate.getDay()}`}\n    >\n      {/* <BackgroundEvents eventUIModels={uiModelsByColumn} startTime={startTime} endTime={endTime} /> */}\n      <VerticalEvents eventUIModels={uiModelsByColumn} minEventHeight={minEventHeight} />\n      <ResizingGuideByColumn\n        gridPositionFinder={gridPositionFinder}\n        totalUIModels={totalUIModels}\n        columnIndex={columnIndex}\n        timeGridData={timeGridData}\n      />\n      <GridSelectionByColumn columnIndex={columnIndex} timeGridRows={timeGridRows} />\n    </div>\n  );\n});\n","import { h } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\n\nimport type { TimeGridRow } from '@t/grid';\nimport type { ThemeState } from '@t/theme';\n\nfunction gridLineBorderSelector(theme: ThemeState) {\n  return {\n    halfHourLineBorder: theme.week.timeGridHalfHourLine.borderBottom,\n    hourLineBorder: theme.week.timeGridHourLine.borderBottom,\n  };\n}\n\nexport const GridLines = memo(function GridLines({\n  timeGridRows,\n}: {\n  timeGridRows: TimeGridRow[];\n}) {\n  const { halfHourLineBorder, hourLineBorder } = useTheme(gridLineBorderSelector);\n\n  return (\n    <div className={cls('gridlines')}>\n      {timeGridRows.map((time, index) => {\n        const isUpperLine = index % 2 === 0;\n\n        return (\n          <div\n            key={`gridline-${time.startTime}-${time.endTime}`}\n            className={cls('gridline-half')}\n            style={{\n              top: toPercent(time.top),\n              height: toPercent(time.height),\n              borderBottom: isUpperLine ? halfHourLineBorder : hourLineBorder,\n            }}\n            data-testid={`gridline-${time.startTime}-${time.endTime}`}\n          />\n        );\n      })}\n    </div>\n  );\n});\n","import { h } from 'preact';\nimport { useCallback, useMemo } from 'preact/hooks';\n\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { timeGridSelectionHelper } from '@src/helpers/gridSelection';\nimport { isNil } from '@src/utils/type';\n\nimport type { TimeGridRow } from '@t/grid';\nimport type { CalendarState } from '@t/store';\n\nfunction GridSelection({ top, height, text }: { top: number; height: number; text: string }) {\n  const { backgroundColor, border } = useTheme(\n    useCallback((theme) => theme.common.gridSelection, [])\n  );\n  const color = useTheme(useCallback((theme) => theme.week.gridSelection.color, []));\n\n  const style = {\n    top: toPercent(top),\n    height: toPercent(height),\n    backgroundColor,\n    border,\n  };\n\n  return (\n    <div\n      className={cls('time', 'grid-selection')}\n      style={style}\n      data-testid={`time-grid-selection-${top}-${height}`}\n    >\n      {text.length > 0 ? (\n        <span className={cls('grid-selection-label')} style={{ color }}>\n          {text}\n        </span>\n      ) : null}\n    </div>\n  );\n}\n\ninterface Props {\n  columnIndex: number;\n  timeGridRows: TimeGridRow[];\n}\n\nexport function GridSelectionByColumn({ columnIndex, timeGridRows }: Props) {\n  const gridSelectionData = useStore(\n    useCallback(\n      (state: CalendarState) =>\n        timeGridSelectionHelper.calculateSelection(\n          state.gridSelection.timeGrid,\n          columnIndex,\n          timeGridRows.length - 1\n        ),\n      [columnIndex, timeGridRows]\n    )\n  );\n\n  const gridSelectionProps = useMemo(() => {\n    if (!gridSelectionData) {\n      return null;\n    }\n\n    const { startRowIndex, endRowIndex, isStartingColumn, isSelectingMultipleColumns } =\n      gridSelectionData;\n\n    const { top: startRowTop, startTime: startRowStartTime } = timeGridRows[startRowIndex];\n    const {\n      top: endRowTop,\n      height: endRowHeight,\n      endTime: endRowEndTime,\n    } = timeGridRows[endRowIndex];\n\n    const gridSelectionHeight = endRowTop + endRowHeight - startRowTop;\n\n    let text = `${startRowStartTime} - ${endRowEndTime}`;\n    if (isSelectingMultipleColumns) {\n      text = isStartingColumn ? startRowStartTime : '';\n    }\n\n    return {\n      top: startRowTop,\n      height: gridSelectionHeight,\n      text,\n    };\n  }, [gridSelectionData, timeGridRows]);\n\n  if (isNil(gridSelectionProps)) {\n    return null;\n  }\n\n  return <GridSelection {...gridSelectionProps} />;\n}\n","import type { TimeUnit } from '@t/events';\n\nexport const className = 'timegrid';\nexport const addTimeGridPrefix = (selector: string) => `${className}-${selector}`;\n\nexport const timeFormats: Record<TimeUnit, string> = {\n  second: 'HH:mm:ss',\n  minute: 'HH:mm',\n  hour: 'HH:mm',\n  date: 'HH:mm',\n  month: 'MM.DD',\n  year: 'YYYY.MM.DD',\n};\n","import { h } from 'preact';\n\nimport { TimeEvent } from '@src/components/events/timeEvent';\nimport { useTimeGridEventMove } from '@src/hooks/timeGrid/useTimeGridEventMove';\nimport { isNil } from '@src/utils/type';\n\nimport type { GridPositionFinder, TimeGridData } from '@t/grid';\n\nexport function MovingEventShadow({\n  gridPositionFinder,\n  timeGridData,\n}: {\n  gridPositionFinder: GridPositionFinder;\n  timeGridData: TimeGridData;\n}) {\n  const { movingEvent, nextStartTime } = useTimeGridEventMove({\n    gridPositionFinder,\n    timeGridData,\n  });\n\n  if (isNil(movingEvent)) {\n    return null;\n  }\n\n  return <TimeEvent uiModel={movingEvent} nextStartTime={nextStartTime} />;\n}\n","import { h } from 'preact';\nimport { useEffect, useRef } from 'preact/hooks';\n\nimport { addTimeGridPrefix } from '@src/components/timeGrid';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useLayoutContainer } from '@src/contexts/layoutContainer';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { TEST_IDS } from '@src/test/testIds';\n\nimport type { ScrollBehaviorOptions } from '@t/eventBus';\nimport type { ThemeState } from '@t/theme';\n\nconst classNames = {\n  line: cls(addTimeGridPrefix('now-indicator')),\n  left: cls(addTimeGridPrefix('now-indicator-left')),\n  marker: cls(addTimeGridPrefix('now-indicator-marker')),\n  today: cls(addTimeGridPrefix('now-indicator-today')),\n  right: cls(addTimeGridPrefix('now-indicator-right')),\n};\n\ninterface Props {\n  top: number;\n  columnWidth: number;\n  columnCount: number;\n  columnIndex: number;\n}\n\nfunction nowIndicatorTheme(theme: ThemeState) {\n  return {\n    pastBorder: theme.week.nowIndicatorPast.border,\n    todayBorder: theme.week.nowIndicatorToday.border,\n    futureBorder: theme.week.nowIndicatorFuture.border,\n    bulletBackgroundColor: theme.week.nowIndicatorBullet.backgroundColor,\n  };\n}\n\nexport function NowIndicator({ top, columnWidth, columnCount, columnIndex }: Props) {\n  const { pastBorder, todayBorder, futureBorder, bulletBackgroundColor } =\n    useTheme(nowIndicatorTheme);\n\n  const layoutContainer = useLayoutContainer();\n  const eventBus = useEventBus();\n  const indicatorRef = useRef<HTMLDivElement | null>(null);\n\n  const leftLine = {\n    left: toPercent(columnWidth * columnIndex),\n    width: toPercent(columnWidth * columnIndex),\n  };\n  const rightLine = {\n    left: toPercent(columnWidth * (columnIndex + 1)),\n    width: toPercent(columnWidth * (columnCount - columnIndex + 1)),\n  };\n\n  useEffect(() => {\n    const scrollToNow = (behavior: ScrollBehaviorOptions) => {\n      const scrollArea = layoutContainer?.querySelector(`.${cls('panel')}.${cls('time')}`) ?? null;\n\n      if (scrollArea && indicatorRef.current) {\n        const { offsetHeight: scrollAreaOffsetHeight } = scrollArea as HTMLDivElement;\n        const { offsetTop: targetOffsetTop } = indicatorRef.current;\n        const newScrollTop = targetOffsetTop - scrollAreaOffsetHeight / 2;\n\n        // NOTE: IE11 doesn't support `scrollTo`\n        if (scrollArea.scrollTo) {\n          scrollArea.scrollTo({ top: newScrollTop, behavior });\n        } else {\n          scrollArea.scrollTop = newScrollTop;\n        }\n      }\n    };\n    eventBus.on('scrollToNow', scrollToNow);\n\n    return () => eventBus.off('scrollToNow', scrollToNow);\n  }, [eventBus, layoutContainer]);\n\n  useEffect(() => {\n    eventBus.fire('scrollToNow', 'smooth');\n  }, [eventBus]);\n\n  return (\n    <div\n      ref={indicatorRef}\n      className={classNames.line}\n      style={{ top: toPercent(top) }}\n      data-testid={TEST_IDS.NOW_INDICATOR}\n    >\n      <div className={classNames.left} style={{ width: leftLine.width, borderTop: pastBorder }} />\n      <div\n        className={classNames.marker}\n        style={{ left: leftLine.left, backgroundColor: bulletBackgroundColor }}\n      />\n      <div\n        className={classNames.today}\n        style={{\n          left: leftLine.left,\n          width: toPercent(columnWidth),\n          borderTop: todayBorder,\n        }}\n      />\n      <div\n        className={classNames.right}\n        style={{\n          left: rightLine.left,\n          borderTop: futureBorder,\n        }}\n      />\n    </div>\n  );\n}\n","import { h } from 'preact';\nimport { useCallback, useMemo } from 'preact/hooks';\n\nimport { Template } from '@src/components/template';\nimport { addTimeGridPrefix, timeFormats } from '@src/components/timeGrid';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { TEST_IDS } from '@src/test/testIds';\nimport type TZDate from '@src/time/date';\nimport { getDateDifference } from '@src/time/datetime';\n\nimport type { TimeUnit } from '@t/events';\n\nconst classNames = {\n  now: addTimeGridPrefix('current-time'),\n  dayDifference: addTimeGridPrefix('day-difference'),\n};\n\ninterface Props {\n  unit: TimeUnit;\n  top: number;\n  now: TZDate;\n  zonedNow: TZDate;\n}\n\nexport function NowIndicatorLabel({ unit, top, now, zonedNow }: Props) {\n  const color = useTheme(useCallback((theme) => theme.week.nowIndicatorLabel.color, []));\n\n  const dateDifference = useMemo(() => {\n    return getDateDifference(zonedNow, now);\n  }, [zonedNow, now]);\n\n  const model = {\n    unit,\n    time: zonedNow,\n    format: timeFormats[unit],\n  };\n\n  return (\n    <div\n      className={cls(classNames.now)}\n      style={{ top: toPercent(top), color }}\n      data-testid={TEST_IDS.NOW_INDICATOR_LABEL}\n    >\n      {dateDifference !== 0 && (\n        <span className={cls(classNames.dayDifference)}>{`[${\n          dateDifference > 0 ? '+' : '-'\n        }${Math.abs(dateDifference)}]`}</span>\n      )}\n      <Template template=\"timegridNowIndicatorLabel\" param={model} as=\"span\" />\n    </div>\n  );\n}\n","import { h } from 'preact';\n\nimport { TimeEvent } from '@src/components/events/timeEvent';\nimport { useTimeGridEventResize } from '@src/hooks/timeGrid/useTimeGridEventResize';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { isNil } from '@src/utils/type';\n\nimport type { GridPositionFinder, TimeGridData } from '@t/grid';\n\nexport function ResizingGuideByColumn({\n  gridPositionFinder,\n  totalUIModels,\n  columnIndex,\n  timeGridData,\n}: {\n  gridPositionFinder: GridPositionFinder;\n  totalUIModels: EventUIModel[][];\n  columnIndex: number;\n  timeGridData: TimeGridData;\n}) {\n  const guideUIModel = useTimeGridEventResize({\n    gridPositionFinder,\n    totalUIModels,\n    columnIndex,\n    timeGridData,\n  });\n\n  if (isNil(guideUIModel)) {\n    return null;\n  }\n\n  return <TimeEvent uiModel={guideUIModel} isResizingGuide={true} />;\n}\n","import { h } from 'preact';\nimport { memo } from 'preact/compat';\nimport { useCallback, useMemo } from 'preact/hooks';\n\nimport { Template } from '@src/components/template';\nimport { addTimeGridPrefix } from '@src/components/timeGrid';\nimport { NowIndicatorLabel } from '@src/components/timeGrid/nowIndicatorLabel';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { useTZConverter } from '@src/hooks/timezone/useTZConverter';\nimport {\n  showNowIndicatorOptionSelector,\n  timezonesCollapsedOptionSelector,\n} from '@src/selectors/options';\nimport { weekTimeGridLeftSelector } from '@src/selectors/theme';\nimport { timezonesSelector } from '@src/selectors/timezone';\nimport TZDate from '@src/time/date';\nimport { addMinutes, setTimeStrToDate } from '@src/time/datetime';\nimport { isNil, isPresent } from '@src/utils/type';\n\nimport type { TimeGridRow } from '@t/grid';\nimport type { ThemeState } from '@t/theme';\n\nconst classNames = {\n  timeColumn: addTimeGridPrefix('time-column'),\n  hourRows: addTimeGridPrefix('hour-rows'),\n  time: addTimeGridPrefix('time'),\n  timeLabel: addTimeGridPrefix('time-label'),\n  first: addTimeGridPrefix('time-first'),\n  last: addTimeGridPrefix('time-last'),\n  hidden: addTimeGridPrefix('time-hidden'),\n};\n\ninterface HourRowsProps {\n  rowsInfo: {\n    date: TZDate;\n    top: number;\n    className: string;\n    diffFromPrimaryTimezone?: number;\n  }[];\n  isPrimary: boolean;\n  borderRight?: string;\n  width: number;\n  nowIndicatorState: {\n    top: number;\n    now: TZDate;\n  } | null;\n}\n\nfunction backgroundColorSelector(theme: ThemeState) {\n  return {\n    primaryTimezoneBackgroundColor: theme.week.timeGridLeft.backgroundColor,\n    subTimezoneBackgroundColor: theme.week.timeGridLeftAdditionalTimezone.backgroundColor,\n  };\n}\n\nfunction timeColorSelector(theme: ThemeState) {\n  return {\n    pastTimeColor: theme.week.pastTime.color,\n    futureTimeColor: theme.week.futureTime.color,\n  };\n}\n\nfunction HourRows({ rowsInfo, isPrimary, borderRight, width, nowIndicatorState }: HourRowsProps) {\n  const showNowIndicator = useStore(showNowIndicatorOptionSelector);\n  const { primaryTimezoneBackgroundColor, subTimezoneBackgroundColor } =\n    useTheme(backgroundColorSelector);\n  const { pastTimeColor, futureTimeColor } = useTheme(timeColorSelector);\n  const zonedNow = isPresent(nowIndicatorState)\n    ? addMinutes(nowIndicatorState.now, rowsInfo[0].diffFromPrimaryTimezone ?? 0)\n    : null;\n\n  const backgroundColor = isPrimary ? primaryTimezoneBackgroundColor : subTimezoneBackgroundColor;\n\n  return (\n    <div\n      role=\"rowgroup\"\n      className={cls(classNames.hourRows)}\n      style={{ width: toPercent(width), borderRight, backgroundColor }}\n    >\n      {rowsInfo.map(({ date, top, className }) => {\n        const isPast = isPresent(zonedNow) && date < zonedNow;\n        const color = isPast ? pastTimeColor : futureTimeColor;\n\n        return (\n          <div\n            key={date.getTime()}\n            className={className}\n            style={{\n              top: toPercent(top),\n              color,\n            }}\n            role=\"row\"\n          >\n            <Template\n              template={`timegridDisplay${isPrimary ? 'Primary' : ''}Time`}\n              param={{ time: date }}\n              as=\"span\"\n            />\n          </div>\n        );\n      })}\n      {showNowIndicator && isPresent(nowIndicatorState) && isPresent(zonedNow) && (\n        <NowIndicatorLabel\n          unit=\"hour\"\n          top={nowIndicatorState.top}\n          now={nowIndicatorState.now}\n          zonedNow={zonedNow}\n        />\n      )}\n    </div>\n  );\n}\n\ninterface Props {\n  timeGridRows: TimeGridRow[];\n  nowIndicatorState: { top: number; now: TZDate } | null;\n}\n\nexport const TimeColumn = memo(function TimeColumn({ timeGridRows, nowIndicatorState }: Props) {\n  const showNowIndicator = useStore(showNowIndicatorOptionSelector);\n  const timezones = useStore(timezonesSelector);\n  const timezonesCollapsed = useStore(timezonesCollapsedOptionSelector);\n\n  const tzConverter = useTZConverter();\n  const { width, borderRight } = useTheme(weekTimeGridLeftSelector);\n\n  const rowsByHour = useMemo(\n    () => timeGridRows.filter((_, index) => index % 2 === 0 || index === timeGridRows.length - 1),\n    [timeGridRows]\n  );\n  const hourRowsPropsMapper = useCallback(\n    (row: TimeGridRow, index: number, diffFromPrimaryTimezone?: number) => {\n      const shouldHideRow = ({ top: rowTop, height: rowHeight }: TimeGridRow) => {\n        if (!showNowIndicator || isNil(nowIndicatorState)) {\n          return false;\n        }\n\n        const indicatorTop = nowIndicatorState.top;\n\n        return rowTop - rowHeight <= indicatorTop && indicatorTop <= rowTop + rowHeight;\n      };\n\n      const isFirst = index === 0;\n      const isLast = index === rowsByHour.length - 1;\n      const className = cls(classNames.time, {\n        [classNames.first]: isFirst,\n        [classNames.last]: isLast,\n        [classNames.hidden]: shouldHideRow(row),\n      });\n      let date = setTimeStrToDate(new TZDate(), isLast ? row.endTime : row.startTime);\n      if (isPresent(diffFromPrimaryTimezone)) {\n        date = addMinutes(date, diffFromPrimaryTimezone);\n      }\n\n      return {\n        date,\n        top: row.top,\n        className,\n        diffFromPrimaryTimezone,\n      };\n    },\n    [rowsByHour, nowIndicatorState, showNowIndicator]\n  );\n\n  const [primaryTimezone, ...otherTimezones] = timezones;\n  const hourRowsWidth = otherTimezones.length > 0 ? 100 / (otherTimezones.length + 1) : 100;\n  const primaryTimezoneHourRowsProps = rowsByHour.map((row, index) =>\n    hourRowsPropsMapper(row, index)\n  );\n  const otherTimezoneHourRowsProps = useMemo(() => {\n    if (otherTimezones.length === 0) {\n      return [];\n    }\n\n    return otherTimezones.reverse().map((timezone) => {\n      const { timezoneName } = timezone;\n      const primaryTimezoneOffset = tzConverter(primaryTimezone.timezoneName).getTimezoneOffset();\n      const currentTimezoneOffset = tzConverter(timezoneName).getTimezoneOffset();\n      const diffFromPrimaryTimezone = currentTimezoneOffset - primaryTimezoneOffset;\n\n      return rowsByHour.map((row, index) =>\n        hourRowsPropsMapper(row, index, diffFromPrimaryTimezone)\n      );\n    });\n  }, [hourRowsPropsMapper, otherTimezones, primaryTimezone, rowsByHour, tzConverter]);\n\n  return (\n    <div\n      className={cls(classNames.timeColumn)}\n      style={{ width }}\n      data-testid=\"timegrid-time-column\"\n    >\n      {!timezonesCollapsed &&\n        otherTimezoneHourRowsProps.map((rowsInfo) => (\n          <HourRows\n            key={rowsInfo[0].diffFromPrimaryTimezone}\n            rowsInfo={rowsInfo}\n            isPrimary={false}\n            borderRight={borderRight}\n            width={hourRowsWidth}\n            nowIndicatorState={nowIndicatorState}\n          />\n        ))}\n      <HourRows\n        rowsInfo={primaryTimezoneHourRowsProps}\n        isPrimary={true}\n        borderRight={borderRight}\n        width={timezonesCollapsed ? 100 : hourRowsWidth}\n        nowIndicatorState={nowIndicatorState}\n      />\n    </div>\n  );\n});\n","import { h } from 'preact';\nimport { useCallback, useLayoutEffect, useMemo, useState } from 'preact/hooks';\n\nimport { addTimeGridPrefix, className as timegridClassName } from '@src/components/timeGrid';\nimport { Column } from '@src/components/timeGrid/column';\nimport { GridLines } from '@src/components/timeGrid/gridLines';\nimport { MovingEventShadow } from '@src/components/timeGrid/movingEventShadow';\nimport { NowIndicator } from '@src/components/timeGrid/nowIndicator';\nimport { TimeColumn } from '@src/components/timeGrid/timeColumn';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { isBetween, setRenderInfoOfUIModels } from '@src/controller/column';\nimport { getTopPercentByTime } from '@src/controller/times';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { createGridPositionFinder } from '@src/helpers/grid';\nimport { timeGridSelectionHelper } from '@src/helpers/gridSelection';\nimport { useDOMNode } from '@src/hooks/common/useDOMNode';\nimport { useInterval } from '@src/hooks/common/useInterval';\nimport { useIsMounted } from '@src/hooks/common/useIsMounted';\nimport { useGridSelection } from '@src/hooks/gridSelection/useGridSelection';\nimport { usePrimaryTimezone } from '@src/hooks/timezone/usePrimaryTimezone';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { optionsSelector } from '@src/selectors';\nimport { showNowIndicatorOptionSelector } from '@src/selectors/options';\nimport { weekTimeGridLeftSelector } from '@src/selectors/theme';\nimport type TZDate from '@src/time/date';\nimport {\n  isSameDate,\n  MS_PER_MINUTES,\n  setTimeStrToDate,\n  toEndOfDay,\n  toStartOfDay,\n} from '@src/time/datetime';\nimport type { CollapseDuplicateEventsOptions } from '@src/types/options';\nimport { first, last } from '@src/utils/array';\nimport { passConditionalProp } from '@src/utils/preact';\nimport { isPresent } from '@src/utils/type';\n\nimport type { TimeGridData } from '@t/grid';\n\nconst classNames = {\n  timegrid: cls(timegridClassName),\n  scrollArea: cls(addTimeGridPrefix('scroll-area')),\n};\n\ninterface Props {\n  events: EventUIModel[];\n  timeGridData: TimeGridData;\n}\n\nexport function TimeGrid({ timeGridData, events }: Props) {\n  const {\n    isReadOnly,\n    week: { narrowWeekend, startDayOfWeek, collapseDuplicateEvents },\n  } = useStore(optionsSelector);\n  const showNowIndicator = useStore(showNowIndicatorOptionSelector);\n  const selectedDuplicateEventCid = useStore(\n    (state) => state.weekViewLayout.selectedDuplicateEventCid\n  );\n  const [, getNow] = usePrimaryTimezone();\n\n  const isMounted = useIsMounted();\n  const { width: timeGridLeftWidth } = useTheme(weekTimeGridLeftSelector);\n\n  const [nowIndicatorState, setNowIndicatorState] = useState<{\n    top: number;\n    now: TZDate;\n  } | null>(null);\n\n  const { columns, rows } = timeGridData;\n  const lastColumnIndex = columns.length - 1;\n\n  const totalUIModels = useMemo(\n    () =>\n      columns\n        .map(({ date }) =>\n          events\n            .filter(isBetween(toStartOfDay(date), toEndOfDay(date)))\n            // NOTE: prevent shared reference between columns\n            .map((uiModel) => uiModel.clone())\n        )\n        .map((uiModelsByColumn, columnIndex) =>\n          setRenderInfoOfUIModels(\n            uiModelsByColumn,\n            setTimeStrToDate(columns[columnIndex].date, first(rows).startTime),\n            setTimeStrToDate(columns[columnIndex].date, last(rows).endTime),\n            selectedDuplicateEventCid,\n            collapseDuplicateEvents as CollapseDuplicateEventsOptions\n          )\n        ),\n    [columns, rows, events, selectedDuplicateEventCid, collapseDuplicateEvents]\n  );\n\n  const currentDateData = useMemo(() => {\n    const now = getNow();\n    const currentDateIndexInColumns = columns.findIndex((column) => isSameDate(column.date, now));\n    if (currentDateIndexInColumns < 0) {\n      return null;\n    }\n    const startTime = setTimeStrToDate(\n      columns[currentDateIndexInColumns].date,\n      timeGridData.rows[0].startTime\n    );\n    const endTime = setTimeStrToDate(\n      columns[currentDateIndexInColumns].date,\n      last(timeGridData.rows).endTime\n    );\n\n    return {\n      startTime,\n      endTime,\n      currentDateIndex: currentDateIndexInColumns,\n    };\n  }, [columns, getNow, timeGridData.rows]);\n\n  const [columnsContainer, setColumnsContainer] = useDOMNode();\n  const gridPositionFinder = useMemo(\n    () =>\n      createGridPositionFinder({\n        rowsCount: rows.length,\n        columnsCount: columns.length,\n        container: columnsContainer,\n        narrowWeekend,\n        startDayOfWeek,\n      }),\n    [columns.length, columnsContainer, narrowWeekend, rows.length, startDayOfWeek]\n  );\n\n  const onMouseDown = useGridSelection({\n    type: 'timeGrid',\n    gridPositionFinder,\n    selectionSorter: timeGridSelectionHelper.sortSelection,\n    dateGetter: timeGridSelectionHelper.getDateFromCollection,\n    dateCollection: timeGridData,\n  });\n\n  const updateTimeGridIndicator = useCallback(() => {\n    if (isPresent(currentDateData)) {\n      const { startTime, endTime } = currentDateData;\n      const now = getNow();\n\n      if (startTime <= now && now <= endTime) {\n        setNowIndicatorState({\n          top: getTopPercentByTime(now, startTime, endTime),\n          now,\n        });\n      }\n    }\n  }, [currentDateData, getNow]);\n\n  // Calculate initial setTimeIndicatorTop\n  useLayoutEffect(() => {\n    if (isMounted()) {\n      if ((currentDateData?.currentDateIndex ?? -1) >= 0) {\n        updateTimeGridIndicator();\n      } else {\n        setNowIndicatorState(null);\n      }\n    }\n  }, [currentDateData, isMounted, updateTimeGridIndicator]);\n\n  // Set interval to update timeIndicatorTop\n  useInterval(updateTimeGridIndicator, isPresent(currentDateData) ? MS_PER_MINUTES : null);\n\n  return (\n    <div className={classNames.timegrid}>\n      <div className={classNames.scrollArea}>\n        <TimeColumn timeGridRows={rows} nowIndicatorState={nowIndicatorState} />\n        <div\n          className={cls('columns')}\n          style={{ left: timeGridLeftWidth }}\n          ref={setColumnsContainer}\n          onMouseDown={passConditionalProp(!isReadOnly, onMouseDown)}\n        >\n          <GridLines timeGridRows={rows} />\n          <MovingEventShadow gridPositionFinder={gridPositionFinder} timeGridData={timeGridData} />\n          {columns.map((column, index) => (\n            <Column\n              key={column.date.toString()}\n              timeGridData={timeGridData}\n              columnDate={column.date}\n              columnWidth={toPercent(column.width)}\n              columnIndex={index}\n              totalUIModels={totalUIModels}\n              gridPositionFinder={gridPositionFinder}\n              isLastColumn={index === lastColumnIndex}\n            />\n          ))}\n          {showNowIndicator && isPresent(currentDateData) && isPresent(nowIndicatorState) ? (\n            <NowIndicator\n              top={nowIndicatorState.top}\n              columnWidth={columns[0].width}\n              columnCount={columns.length}\n              columnIndex={currentDateData.currentDateIndex}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { h } from 'preact';\n\nimport { addTimeGridPrefix } from '@src/components/timeGrid';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { cls } from '@src/helpers/css';\n\nexport function TimezoneCollapseButton({ isCollapsed }: { isCollapsed: boolean }) {\n  const eventBus = useEventBus();\n\n  const iconClassName = cls('icon', {\n    'ic-arrow-right': isCollapsed,\n    'ic-arrow-left': !isCollapsed,\n  });\n\n  return (\n    <button\n      className={cls(addTimeGridPrefix('timezone-collapse-button'))}\n      aria-expanded={!isCollapsed}\n      onClick={() => eventBus.fire('clickTimezonesCollapseBtn', isCollapsed)}\n    >\n      <span className={iconClassName} role=\"img\" />\n    </button>\n  );\n}\n","import { h } from 'preact';\nimport { useMemo } from 'preact/hooks';\n\nimport { Template } from '@src/components/template';\nimport { addTimeGridPrefix } from '@src/components/timeGrid';\nimport { TimezoneCollapseButton } from '@src/components/timeGrid/timezoneCollapseButton';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { useTZConverter } from '@src/hooks/timezone/useTZConverter';\nimport {\n  showTimezoneCollapseButtonOptionSelector,\n  timezonesCollapsedOptionSelector,\n} from '@src/selectors/options';\nimport { weekTimeGridLeftSelector } from '@src/selectors/theme';\nimport { timezonesSelector } from '@src/selectors/timezone';\nimport { isUndefined } from '@src/utils/type';\n\ninterface TimezoneLabelProps {\n  label: string | null;\n  offset: number | null;\n  tooltip: string;\n  width: number;\n  left: number;\n}\n\nfunction TimezoneLabel({ label, offset, tooltip, width = 100, left }: TimezoneLabelProps) {\n  return (\n    <div\n      title={tooltip}\n      className={cls(addTimeGridPrefix('timezone-label'))}\n      style={{\n        width: toPercent(width),\n        height: toPercent(100),\n        left: toPercent(left),\n      }}\n      role=\"gridcell\"\n    >\n      <Template\n        template=\"timezoneDisplayLabel\"\n        param={{ displayLabel: label, timezoneOffset: offset }}\n        as=\"span\"\n      />\n    </div>\n  );\n}\n\nfunction useTimezoneCollapseOptions() {\n  const showTimezoneCollapseButton = useStore(showTimezoneCollapseButtonOptionSelector);\n  const timezonesCollapsed = useStore(timezonesCollapsedOptionSelector);\n\n  return useMemo(() => {\n    return {\n      showTimezoneCollapseButton,\n      timezonesCollapsed,\n    };\n  }, [showTimezoneCollapseButton, timezonesCollapsed]);\n}\n\nexport function TimezoneLabels({ top }: { top: number | null }) {\n  const timezones = useStore(timezonesSelector);\n  const { width } = useTheme(weekTimeGridLeftSelector);\n\n  const tzConverter = useTZConverter();\n  const { showTimezoneCollapseButton, timezonesCollapsed } = useTimezoneCollapseOptions();\n\n  if (timezones.length <= 1) {\n    return null;\n  }\n\n  const timezoneLabelProps = timezones.map(({ displayLabel, timezoneName, tooltip }) => {\n    return !isUndefined(displayLabel)\n      ? { label: displayLabel, offset: null, tooltip: tooltip ?? timezoneName }\n      : {\n          label: null,\n          offset: tzConverter(timezoneName).getTimezoneOffset(),\n          tooltip: tooltip ?? timezoneName,\n        };\n  });\n\n  const [primaryTimezone, ...restTimezones] = timezoneLabelProps;\n  const subTimezones = restTimezones.reverse();\n\n  const timezonesCount = timezonesCollapsed ? 1 : timezones.length;\n  const timezoneLabelWidth = 100 / timezonesCount;\n\n  return (\n    <div\n      style={{\n        top,\n        width,\n      }}\n      role=\"columnheader\"\n      className={cls('timezone-labels-slot')}\n    >\n      {!timezonesCollapsed &&\n        subTimezones.map((subTimezone, index) => (\n          <TimezoneLabel\n            key={`subTimezone-${subTimezone.label ?? subTimezone.offset}`}\n            width={timezoneLabelWidth}\n            left={timezoneLabelWidth * index}\n            {...subTimezone}\n          />\n        ))}\n      {showTimezoneCollapseButton && <TimezoneCollapseButton isCollapsed={timezonesCollapsed} />}\n      <TimezoneLabel\n        width={timezoneLabelWidth}\n        left={timezoneLabelWidth * subTimezones.length}\n        {...primaryTimezone}\n      />\n    </div>\n  );\n}\n","import { h } from 'preact';\nimport { useCallback, useMemo } from 'preact/hooks';\n\nimport { GridHeader } from '@src/components/dayGridCommon/gridHeader';\nimport { AlldayGridRow } from '@src/components/dayGridWeek/alldayGridRow';\nimport { OtherGridRow } from '@src/components/dayGridWeek/otherGridRow';\nimport { Layout } from '@src/components/layout';\nimport { Panel } from '@src/components/panel';\nimport { TimeGrid } from '@src/components/timeGrid/timeGrid';\nimport { TimezoneLabels } from '@src/components/timeGrid/timezoneLabels';\nimport { WEEK_DAY_NAME_BORDER, WEEK_DAY_NAME_HEIGHT } from '@src/constants/style';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\nimport { getDayNames } from '@src/helpers/dayName';\nimport { createTimeGridData, getWeekViewEvents } from '@src/helpers/grid';\nimport { getActivePanels } from '@src/helpers/view';\nimport { useCalendarData } from '@src/hooks/calendar/useCalendarData';\nimport { useDOMNode } from '@src/hooks/common/useDOMNode';\nimport { useTimeGridScrollSync } from '@src/hooks/timeGrid/useTimeGridScrollSync';\nimport { useTimezoneLabelsTop } from '@src/hooks/timeGrid/useTimezoneLabelsTop';\nimport {\n  calendarSelector,\n  optionsSelector,\n  viewSelector,\n  weekViewLayoutSelector,\n} from '@src/selectors';\nimport { primaryTimezoneSelector } from '@src/selectors/timezone';\nimport { addDate, getRowStyleInfo, toEndOfDay, toStartOfDay } from '@src/time/datetime';\n\nimport type { WeekOptions } from '@t/options';\nimport type { AlldayEventCategory } from '@t/panel';\n\nfunction useDayViewState() {\n  const calendar = useStore(calendarSelector);\n  const options = useStore(optionsSelector);\n  const { dayGridRows: gridRowLayout, lastPanelType } = useStore(weekViewLayoutSelector);\n  const { renderDate } = useStore(viewSelector);\n\n  return useMemo(\n    () => ({\n      calendar,\n      options,\n      gridRowLayout,\n      lastPanelType,\n      renderDate,\n    }),\n    [calendar, options, gridRowLayout, lastPanelType, renderDate]\n  );\n}\n\nexport function Day() {\n  const { calendar, options, gridRowLayout, lastPanelType, renderDate } = useDayViewState();\n\n  const primaryTimezoneName = useStore(primaryTimezoneSelector);\n\n  const gridHeaderMarginLeft = useTheme(useCallback((theme) => theme.week.dayGridLeft.width, []));\n  const [timePanel, setTimePanelRef] = useDOMNode<HTMLDivElement>();\n\n  const weekOptions = options.week as Required<WeekOptions>;\n  const { narrowWeekend, startDayOfWeek, workweek, hourStart, hourEnd, eventView, taskView } =\n    weekOptions;\n  const days = useMemo(() => [renderDate], [renderDate]);\n  const dayNames = getDayNames(days, options.week?.dayNames ?? []);\n  const { rowStyleInfo, cellWidthMap } = getRowStyleInfo(\n    days.length,\n    narrowWeekend,\n    startDayOfWeek,\n    workweek\n  );\n  const calendarData = useCalendarData(calendar, options.eventFilter);\n  const dayGridEvents = useMemo(() => {\n    const getFilterRange = () => {\n      if (primaryTimezoneName === 'Local') {\n        return [toStartOfDay(days[0]), toEndOfDay(days[0])];\n      }\n\n      // NOTE: Extend filter range because of timezone offset differences\n      return [toStartOfDay(addDate(days[0], -1)), toEndOfDay(addDate(days[0], 1))];\n    };\n\n    const [weekStartDate, weekEndDate] = getFilterRange();\n\n    return getWeekViewEvents(days, calendarData, {\n      narrowWeekend,\n      hourStart,\n      hourEnd,\n      weekStartDate,\n      weekEndDate,\n    });\n  }, [calendarData, days, hourEnd, hourStart, narrowWeekend, primaryTimezoneName]);\n  const timeGridData = useMemo(\n    () =>\n      createTimeGridData(days, {\n        hourStart,\n        hourEnd,\n        narrowWeekend,\n      }),\n    [days, hourEnd, hourStart, narrowWeekend]\n  );\n  const activePanels = getActivePanels(taskView, eventView);\n  const gridRows = activePanels.map((key) => {\n    if (key === 'time') {\n      return null;\n    }\n\n    const rowType = key as AlldayEventCategory;\n\n    return (\n      <Panel key={rowType} name={rowType} resizable={rowType !== lastPanelType}>\n        {rowType === 'allday' ? (\n          <AlldayGridRow\n            events={dayGridEvents[rowType]}\n            rowStyleInfo={rowStyleInfo}\n            gridColWidthMap={cellWidthMap}\n            weekDates={days}\n            height={gridRowLayout[rowType]?.height}\n            options={weekOptions}\n          />\n        ) : (\n          <OtherGridRow\n            category={rowType}\n            events={dayGridEvents[rowType]}\n            weekDates={days}\n            height={gridRowLayout[rowType]?.height}\n            options={weekOptions}\n            gridColWidthMap={cellWidthMap}\n          />\n        )}\n      </Panel>\n    );\n  });\n\n  useTimeGridScrollSync(timePanel, timeGridData.rows.length);\n\n  const stickyTop = useTimezoneLabelsTop(timePanel);\n\n  return (\n    <Layout className={cls('day-view')} autoAdjustPanels={true}>\n      <Panel name=\"day-view-day-names\" initialHeight={WEEK_DAY_NAME_HEIGHT + WEEK_DAY_NAME_BORDER}>\n        <GridHeader\n          type=\"week\"\n          dayNames={dayNames}\n          marginLeft={gridHeaderMarginLeft}\n          rowStyleInfo={rowStyleInfo}\n        />\n      </Panel>\n      {gridRows}\n      {activePanels.includes('time') ? (\n        <Panel name=\"time\" autoSize={1} ref={setTimePanelRef}>\n          <TimeGrid events={dayGridEvents.time} timeGridData={timeGridData} />\n          <TimezoneLabels top={stickyTop} />\n        </Panel>\n      ) : null}\n    </Layout>\n  );\n}\n","import type { FunctionComponent } from 'preact';\nimport { h } from 'preact';\nimport { useMemo } from 'preact/hooks';\n\nimport { Day } from '@src/components/view/day';\nimport { Month } from '@src/components/view/month';\nimport { Week } from '@src/components/view/week';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { viewSelector } from '@src/selectors';\n\nimport type { ViewType } from '@t/options';\n\nconst views: {\n  [k in ViewType]: FunctionComponent;\n} = {\n  month: Month,\n  week: Week,\n  day: Day,\n};\n\nexport function Main() {\n  const { currentView } = useStore(viewSelector);\n  const CurrentViewComponent = useMemo(() => views[currentView] || (() => null), [currentView]);\n\n  return <CurrentViewComponent />;\n}\n","import { h } from 'preact';\nimport { useMemo } from 'preact/hooks';\n\nimport { GridHeader } from '@src/components/dayGridCommon/gridHeader';\nimport { DayGridMonth } from '@src/components/dayGridMonth/dayGridMonth';\nimport { Layout } from '@src/components/layout';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { cls } from '@src/helpers/css';\nimport { createDateMatrixOfMonth } from '@src/helpers/grid';\nimport { optionsSelector, viewSelector } from '@src/selectors';\nimport { getRowStyleInfo, isWeekend } from '@src/time/datetime';\nimport { capitalize } from '@src/utils/string';\n\nimport type { MonthOptions } from '@t/options';\nimport type { CalendarStore } from '@t/store';\nimport type { CellInfo } from '@t/time/datetime';\n\nfunction getMonthDayNames(options: CalendarStore['options']) {\n  const { dayNames, startDayOfWeek, workweek } = options.month as Required<MonthOptions>;\n  const dayIndices = [...Array(7)].map((_, i) => (startDayOfWeek + i) % 7);\n  const monthDayNames = dayIndices.map((i) => ({\n    day: i,\n    label: capitalize(dayNames[i]),\n  }));\n\n  return monthDayNames.filter((dayNameInfo) => (workweek ? !isWeekend(dayNameInfo.day) : true));\n}\n\nexport function Month() {\n  const options = useStore(optionsSelector);\n  const { renderDate } = useStore(viewSelector);\n\n  const dayNames = getMonthDayNames(options);\n  const monthOptions = options.month as Required<MonthOptions>;\n  const { narrowWeekend, startDayOfWeek, workweek } = monthOptions;\n\n  const dateMatrix = useMemo(\n    () => createDateMatrixOfMonth(renderDate, monthOptions),\n    [monthOptions, renderDate]\n  );\n  const { rowStyleInfo, cellWidthMap } = useMemo(\n    () => getRowStyleInfo(dayNames.length, narrowWeekend, startDayOfWeek, workweek),\n    [dayNames.length, narrowWeekend, startDayOfWeek, workweek]\n  );\n  const rowInfo: CellInfo[] = rowStyleInfo.map((cellStyleInfo, index) => ({\n    ...cellStyleInfo,\n    date: dateMatrix[0][index],\n  }));\n  \n  return (\n    <Layout className={cls('month')}>\n      <GridHeader\n        type=\"month\"\n        dayNames={dayNames}\n        options={monthOptions}\n        rowStyleInfo={rowStyleInfo}\n      />\n      <DayGridMonth dateMatrix={dateMatrix} rowInfo={rowInfo} cellWidthMap={cellWidthMap} />\n    </Layout>\n  );\n}\n","import { h } from 'preact';\nimport { useCallback, useMemo } from 'preact/hooks';\n\nimport { GridHeader } from '@src/components/dayGridCommon/gridHeader';\nimport { AlldayGridRow } from '@src/components/dayGridWeek/alldayGridRow';\nimport { OtherGridRow } from '@src/components/dayGridWeek/otherGridRow';\nimport { Layout } from '@src/components/layout';\nimport { Panel } from '@src/components/panel';\nimport { TimeGrid } from '@src/components/timeGrid/timeGrid';\nimport { TimezoneLabels } from '@src/components/timeGrid/timezoneLabels';\nimport { WEEK_DAY_NAME_BORDER, WEEK_DAY_NAME_HEIGHT } from '@src/constants/style';\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useTheme } from '@src/contexts/themeStore';\nimport { cls } from '@src/helpers/css';\nimport { getDayNames } from '@src/helpers/dayName';\nimport { createTimeGridData, getWeekDates, getWeekViewEvents } from '@src/helpers/grid';\nimport { getActivePanels } from '@src/helpers/view';\nimport { useCalendarData } from '@src/hooks/calendar/useCalendarData';\nimport { useDOMNode } from '@src/hooks/common/useDOMNode';\nimport { useTimeGridScrollSync } from '@src/hooks/timeGrid/useTimeGridScrollSync';\nimport { useTimezoneLabelsTop } from '@src/hooks/timeGrid/useTimezoneLabelsTop';\nimport {\n  calendarSelector,\n  optionsSelector,\n  viewSelector,\n  weekViewLayoutSelector,\n} from '@src/selectors';\nimport { primaryTimezoneSelector } from '@src/selectors/timezone';\nimport { addDate, getRowStyleInfo, toEndOfDay, toStartOfDay } from '@src/time/datetime';\nimport { first, last } from '@src/utils/array';\n\nimport type { WeekOptions } from '@t/options';\nimport type { AlldayEventCategory } from '@t/panel';\n\nfunction useWeekViewState() {\n  const options = useStore(optionsSelector);\n  const calendar = useStore(calendarSelector);\n  const { dayGridRows: gridRowLayout, lastPanelType } = useStore(weekViewLayoutSelector);\n  const { renderDate } = useStore(viewSelector);\n\n  return useMemo(\n    () => ({\n      options,\n      calendar,\n      gridRowLayout,\n      lastPanelType,\n      renderDate,\n    }),\n    [calendar, gridRowLayout, lastPanelType, options, renderDate]\n  );\n}\n\nexport function Week() {\n  const { options, calendar, gridRowLayout, lastPanelType, renderDate } = useWeekViewState();\n  const gridHeaderMarginLeft = useTheme(useCallback((theme) => theme.week.dayGridLeft.width, []));\n\n  const primaryTimezoneName = useStore(primaryTimezoneSelector);\n\n  const [timePanel, setTimePanelRef] = useDOMNode<HTMLDivElement>();\n\n  const weekOptions = options.week as Required<WeekOptions>;\n  const { narrowWeekend, startDayOfWeek, workweek, hourStart, hourEnd, eventView, taskView } =\n    weekOptions;\n  const weekDates = useMemo(() => getWeekDates(renderDate, weekOptions), [renderDate, weekOptions]);\n  const dayNames = getDayNames(weekDates, options.week?.dayNames ?? []);\n  const { rowStyleInfo, cellWidthMap } = getRowStyleInfo(\n    weekDates.length,\n    narrowWeekend,\n    startDayOfWeek,\n    workweek\n  );\n  const calendarData = useCalendarData(calendar, options.eventFilter);\n  const eventByPanel = useMemo(() => {\n    const getFilterRange = () => {\n      if (primaryTimezoneName === 'Local') {\n        return [toStartOfDay(first(weekDates)), toEndOfDay(last(weekDates))];\n      }\n\n      // NOTE: Extend filter range because of timezone offset differences\n      return [toStartOfDay(addDate(first(weekDates), -1)), toEndOfDay(addDate(last(weekDates), 1))];\n    };\n\n    const [weekStartDate, weekEndDate] = getFilterRange();\n\n    return getWeekViewEvents(weekDates, calendarData, {\n      narrowWeekend,\n      hourStart,\n      hourEnd,\n      weekStartDate,\n      weekEndDate,\n    });\n  }, [calendarData, hourEnd, hourStart, narrowWeekend, primaryTimezoneName, weekDates]);\n  const timeGridData = useMemo(\n    () =>\n      createTimeGridData(weekDates, {\n        hourStart,\n        hourEnd,\n        narrowWeekend,\n      }),\n    [hourEnd, hourStart, narrowWeekend, weekDates]\n  );\n\n  const activePanels = getActivePanels(taskView, eventView);\n  const dayGridRows = activePanels.map((key) => {\n    if (key === 'time') {\n      return null;\n    }\n\n    const rowType = key as AlldayEventCategory;\n\n    return (\n      <Panel name={rowType} key={rowType} resizable={rowType !== lastPanelType}>\n        {rowType === 'allday' ? (\n          <AlldayGridRow\n            events={eventByPanel[rowType]}\n            rowStyleInfo={rowStyleInfo}\n            gridColWidthMap={cellWidthMap}\n            weekDates={weekDates}\n            height={gridRowLayout[rowType]?.height}\n            options={weekOptions}\n          />\n        ) : (\n          <OtherGridRow\n            category={rowType}\n            events={eventByPanel[rowType]}\n            weekDates={weekDates}\n            height={gridRowLayout[rowType]?.height}\n            options={weekOptions}\n            gridColWidthMap={cellWidthMap}\n          />\n        )}\n      </Panel>\n    );\n  });\n  const hasTimePanel = useMemo(() => activePanels.includes('time'), [activePanels]);\n\n  useTimeGridScrollSync(timePanel, timeGridData.rows.length);\n\n  const stickyTop = useTimezoneLabelsTop(timePanel);\n\n  return (\n    <Layout className={cls('week-view')} autoAdjustPanels={true}>\n      <Panel\n        name=\"week-view-day-names\"\n        initialHeight={WEEK_DAY_NAME_HEIGHT + WEEK_DAY_NAME_BORDER * 2}\n      >\n        <GridHeader\n          type=\"week\"\n          dayNames={dayNames}\n          marginLeft={gridHeaderMarginLeft}\n          options={weekOptions}\n          rowStyleInfo={rowStyleInfo}\n        />\n      </Panel>\n      {dayGridRows}\n      {hasTimePanel ? (\n        <Panel name=\"time\" autoSize={1} ref={setTimePanelRef}>\n          <TimeGrid events={eventByPanel.time} timeGridData={timeGridData} />\n          <TimezoneLabels top={stickyTop} />\n        </Panel>\n      ) : null}\n    </Layout>\n  );\n}\n","export const INVALID_DATETIME_FORMAT = 'Invalid DateTime Format';\nexport const INVALID_TIMEZONE_NAME = 'Invalid IANA Timezone Name';\nexport const INVALID_VIEW_TYPE = 'Invalid View Type';\n","export const DEFAULT_VISIBLE_WEEKS = 6;\n\nexport enum CellBarType {\n  header = 'header',\n  footer = 'footer',\n}\n","export enum KEY {\n  ESCAPE = 'Escape',\n}\n\nexport const KEYCODE: Record<KEY, number> = {\n  [KEY.ESCAPE]: 27,\n};\n","export const DEFAULT_RESIZER_LENGTH = 3;\n\nexport const DEFAULT_DUPLICATE_EVENT_CID = -1;\n","export const MESSAGE_PREFIX = '@toast-ui/calendar: ';\n","export const MINIMUM_DRAG_MOUSE_DISTANCE = 3;\n","import { cls } from '@src/helpers/css';\n\nimport type { BooleanKeyOfEventObject } from '@t/events';\n\nexport const SEE_MORE_POPUP_SLOT_CLASS_NAME = cls('see-more-popup-slot');\nexport const EVENT_FORM_POPUP_SLOT_CLASS_NAME = cls('event-form-popup-slot');\nexport const EVENT_DETAIL_POPUP_SLOT_CLASS_NAME = cls('event-detail-popup-slot');\n\nexport const HALF_OF_POPUP_ARROW_HEIGHT = 8;\n\nexport const BOOLEAN_KEYS_OF_EVENT_MODEL_DATA: BooleanKeyOfEventObject[] = [\n  'isPrivate',\n  'isAllday',\n  'isPending',\n  'isFocused',\n  'isVisible',\n  'isReadOnly',\n];\n\nexport enum DetailPopupArrowDirection {\n  right = 'right',\n  left = 'left',\n}\n\nexport enum FormPopupArrowDirection {\n  top = 'top',\n  bottom = 'bottom',\n}\n","export const GA_TRACKING_ID = 'UA-129951699-1';\n","// common day name\nexport const DEFAULT_DAY_NAME_MARGIN_LEFT = '0';\n\n// month day name\nexport const MONTH_DAY_NAME_HEIGHT = 31;\n\n// month event\nexport const MONTH_EVENT_BORDER_RADIUS = 2;\nexport const MONTH_EVENT_HEIGHT = 24;\nexport const MONTH_EVENT_MARGIN_TOP = 2;\nexport const MONTH_EVENT_MARGIN_LEFT = 8;\nexport const MONTH_EVENT_MARGIN_RIGHT = 8;\n\n// month cell\nexport const MONTH_CELL_PADDING_TOP = 3;\nexport const MONTH_CELL_BAR_HEIGHT = 27;\n\n// month more view\nexport const MONTH_MORE_VIEW_PADDING = 5;\nexport const MONTH_MORE_VIEW_MIN_WIDTH = 280;\nexport const MONTH_MORE_VIEW_HEADER_HEIGHT = 44;\nexport const MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM = 12;\nexport const MONTH_MORE_VIEW_HEADER_PADDING_TOP = 12;\nexport const MONTH_MORE_VIEW_HEADER_PADDING = '12px 17px 0';\n\n// week day name\nexport const WEEK_DAY_NAME_HEIGHT = 42;\nexport const WEEK_DAY_NAME_BORDER = 1;\n\n// week panel resizer\nexport const WEEK_PANEL_RESIZER_HEIGHT = 3;\n\n// week event\nexport const WEEK_EVENT_BORDER_RADIUS = 2;\nexport const WEEK_EVENT_HEIGHT = 24;\nexport const WEEK_EVENT_MARGIN_TOP = 2;\nexport const WEEK_EVENT_MARGIN_LEFT = 8;\nexport const WEEK_EVENT_MARGIN_RIGHT = 8;\n\nexport const DEFAULT_PANEL_HEIGHT = 72;\n\n// default color values for events\nexport const DEFAULT_EVENT_COLORS = {\n  color: '#000',\n  backgroundColor: '#a1b56c',\n  dragBackgroundColor: '#a1b56c',\n  borderColor: '#000',\n};\n\nexport const TIME_EVENT_CONTAINER_MARGIN_LEFT = 2;\n\nexport const COLLAPSED_DUPLICATE_EVENT_WIDTH_PX = 9;\n","import type { DeepRequired } from 'ts-essentials';\n\nimport type { CommonTheme, MonthTheme, WeekTheme } from '@t/theme';\n\nexport const DEFAULT_COMMON_THEME: DeepRequired<CommonTheme> = {\n  border: '1px solid #e5e5e5',\n  backgroundColor: 'white',\n  holiday: {\n    color: '#ff4040',\n  },\n  saturday: {\n    color: '#333',\n  },\n  dayName: {\n    color: '#333',\n  },\n  today: {\n    color: '#fff',\n  },\n  gridSelection: {\n    backgroundColor: 'rgba(81, 92, 230, 0.05)',\n    border: '1px solid #515ce6',\n  },\n};\n\nexport const DEFAULT_WEEK_THEME: DeepRequired<WeekTheme> = {\n  dayName: {\n    borderLeft: 'none',\n    borderTop: '1px solid #e5e5e5',\n    borderBottom: '1px solid #e5e5e5',\n    backgroundColor: 'inherit',\n  },\n  weekend: {\n    backgroundColor: 'inherit',\n  },\n  today: {\n    color: 'inherit',\n    backgroundColor: 'rgba(81, 92, 230, 0.05)',\n  },\n  pastDay: {\n    color: '#bbb',\n  },\n  panelResizer: {\n    border: '1px solid #e5e5e5',\n  },\n  dayGrid: {\n    borderRight: '1px solid #e5e5e5',\n    backgroundColor: 'inherit',\n  },\n  dayGridLeft: {\n    borderRight: '1px solid #e5e5e5',\n    backgroundColor: 'inherit',\n    width: '72px',\n  },\n  timeGrid: {\n    borderRight: '1px solid #e5e5e5',\n  },\n  timeGridLeft: {\n    backgroundColor: 'inherit',\n    borderRight: '1px solid #e5e5e5',\n    width: '72px',\n  },\n  timeGridLeftAdditionalTimezone: {\n    backgroundColor: 'white',\n  },\n  timeGridHalfHourLine: {\n    borderBottom: 'none',\n  },\n  timeGridHourLine: {\n    borderBottom: '1px solid #e5e5e5',\n  },\n  nowIndicatorLabel: {\n    color: '#515ce6',\n  },\n  nowIndicatorPast: {\n    border: '1px dashed #515ce6',\n  },\n  nowIndicatorBullet: {\n    backgroundColor: '#515ce6',\n  },\n  nowIndicatorToday: {\n    border: '1px solid #515ce6',\n  },\n  nowIndicatorFuture: {\n    border: 'none',\n  },\n  pastTime: {\n    color: '#bbb',\n  },\n  futureTime: {\n    color: '#333',\n  },\n  gridSelection: {\n    color: '#515ce6',\n  },\n};\n\nexport const DEFAULT_MONTH_THEME: DeepRequired<MonthTheme> = {\n  dayName: {\n    borderLeft: 'none',\n    backgroundColor: 'inherit',\n  },\n  holidayExceptThisMonth: {\n    color: 'rgba(255, 64, 64, 0.4)',\n  },\n  dayExceptThisMonth: {\n    color: 'rgba(51, 51, 51, 0.4)',\n  },\n  weekend: {\n    backgroundColor: 'inherit',\n  },\n  moreView: {\n    border: '1px solid #d5d5d5',\n    boxShadow: '0 2px 6px 0 rgba(0, 0, 0, 0.1)',\n    backgroundColor: 'white',\n    width: null,\n    height: null,\n  },\n  gridCell: {\n    headerHeight: 31,\n    footerHeight: null,\n  },\n  moreViewTitle: {\n    backgroundColor: 'inherit',\n  },\n};\n","import type { EventView, TaskView, ViewType } from '@t/options';\n\nexport const VIEW_TYPE: {\n  [key: string]: ViewType;\n} = {\n  MONTH: 'month',\n  WEEK: 'week',\n  DAY: 'day',\n};\n\nexport const DEFAULT_TASK_PANEL: TaskView[] = ['milestone', 'task'];\n\nexport const DEFAULT_EVENT_PANEL: EventView[] = ['allday', 'time'];\n","import { useCallback } from 'preact/hooks';\n\nimport { createCalendarDispatchers, createCalendarSlice } from '@src/slices/calendar';\nimport { createDndDispatchers, createDndSlice } from '@src/slices/dnd';\nimport {\n  createGridSelectionDispatchers,\n  createGridSelectionSlice,\n} from '@src/slices/gridSelection';\nimport { createWeekViewLayoutDispatchers, createWeekViewLayoutSlice } from '@src/slices/layout';\nimport { createOptionsDispatchers, createOptionsSlice } from '@src/slices/options';\nimport { createPopupDispatchers, createPopupSlice } from '@src/slices/popup';\nimport { createTemplateDispatchers, createTemplateSlice } from '@src/slices/template';\nimport { createViewDispatchers, createViewSlice } from '@src/slices/view';\nimport { createStoreContext } from '@src/store';\nimport { createStore } from '@src/store/internal';\n\nimport type { Options } from '@t/options';\nimport type { CalendarStore, Dispatchers, SetState } from '@t/store';\n\nconst storeCreator = (options: Options) => (set: SetState<CalendarStore>) => {\n  return {\n    ...createOptionsSlice(options),\n    ...createTemplateSlice(options.template),\n    ...createPopupSlice(),\n    ...createWeekViewLayoutSlice(),\n    ...createCalendarSlice(options.calendars),\n    ...createViewSlice(options.defaultView),\n    ...createDndSlice(),\n    ...createGridSelectionSlice(),\n    dispatch: {\n      options: createOptionsDispatchers(set),\n      popup: createPopupDispatchers(set),\n      weekViewLayout: createWeekViewLayoutDispatchers(set),\n      calendar: createCalendarDispatchers(set),\n      view: createViewDispatchers(set),\n      dnd: createDndDispatchers(set),\n      gridSelection: createGridSelectionDispatchers(set),\n      template: createTemplateDispatchers(set),\n    },\n  };\n};\n\nexport const initCalendarStore = (options: Options = {}) =>\n  createStore<CalendarStore>(storeCreator(options));\n\nconst { StoreProvider, useStore, useInternalStore } = createStoreContext<CalendarStore>();\nexport { StoreProvider, useInternalStore, useStore };\n\nexport function useDispatch(): Dispatchers;\nexport function useDispatch<Group extends keyof Dispatchers>(group: Group): Dispatchers[Group];\nexport function useDispatch<Group extends keyof Dispatchers>(group?: Group) {\n  return useStore(\n    useCallback(\n      (state) => {\n        if (!group) {\n          return state.dispatch;\n        }\n\n        return state.dispatch[group];\n      },\n      [group]\n    )\n  );\n}\n","import { createContext } from 'preact';\nimport { useContext } from 'preact/hooks';\n\nimport type { EventBus } from '@src/utils/eventBus';\n\nimport type { ExternalEventTypes, InternalEventTypes } from '@t/eventBus';\n\nconst EventBusContext = createContext<EventBus<ExternalEventTypes & InternalEventTypes> | null>(\n  null\n);\n\nexport const EventBusProvider = EventBusContext.Provider;\n\nexport const useEventBus = () => {\n  const eventBus = useContext(EventBusContext);\n\n  if (!eventBus) {\n    throw new Error('useEventBus must be used within a EventBusProvider');\n  }\n\n  return eventBus;\n};\n","import { createContext, h } from 'preact';\nimport { useContext } from 'preact/hooks';\n\nimport {\n  EVENT_DETAIL_POPUP_SLOT_CLASS_NAME,\n  EVENT_FORM_POPUP_SLOT_CLASS_NAME,\n  SEE_MORE_POPUP_SLOT_CLASS_NAME,\n} from '@src/constants/popup';\nimport { cls } from '@src/helpers/css';\nimport { useDOMNode } from '@src/hooks/common/useDOMNode';\nimport { isUndefined } from '@src/utils/type';\n\nimport type { PropsWithChildren } from '@t/components/common';\n\ninterface FloatingLayers {\n  container: HTMLDivElement | null;\n  seeMorePopupSlot: HTMLDivElement | null;\n  formPopupSlot: HTMLDivElement | null;\n  detailPopupSlot: HTMLDivElement | null;\n}\n\ntype FloatingLayerType = keyof FloatingLayers;\n\nconst FloatingLayerContext = createContext<FloatingLayers | null>(null);\n\nexport function FloatingLayerProvider({ children }: PropsWithChildren) {\n  const [containerRef, containerRefCallback] = useDOMNode<HTMLDivElement>();\n  const [seeMorePopupSlotRef, seeMorePopupSlotRefCallback] = useDOMNode<HTMLDivElement>();\n  const [formPopupSlotRef, formPopupSlotRefCallback] = useDOMNode<HTMLDivElement>();\n  const [detailPopupSlotRef, detailPopupSlotRefCallback] = useDOMNode<HTMLDivElement>();\n\n  const floatingLayer = {\n    container: containerRef,\n    seeMorePopupSlot: seeMorePopupSlotRef,\n    formPopupSlot: formPopupSlotRef,\n    detailPopupSlot: detailPopupSlotRef,\n  };\n\n  return (\n    <FloatingLayerContext.Provider value={floatingLayer}>\n      {children}\n      <div ref={containerRefCallback} className={cls('floating-layer')}>\n        <div ref={seeMorePopupSlotRefCallback} className={SEE_MORE_POPUP_SLOT_CLASS_NAME} />\n        <div ref={formPopupSlotRefCallback} className={EVENT_FORM_POPUP_SLOT_CLASS_NAME} />\n        <div ref={detailPopupSlotRefCallback} className={EVENT_DETAIL_POPUP_SLOT_CLASS_NAME} />\n      </div>\n    </FloatingLayerContext.Provider>\n  );\n}\n\nexport const useFloatingLayer = (floatingLayerType: FloatingLayerType) => {\n  const floatingLayers = useContext(FloatingLayerContext);\n\n  if (isUndefined(floatingLayers)) {\n    throw new Error('FloatingLayerProvider is not found');\n  }\n\n  return floatingLayers?.[floatingLayerType] ?? null;\n};\n","import { createContext } from 'preact';\nimport { useContext } from 'preact/hooks';\n\nimport { isUndefined } from '@src/utils/type';\n\nconst LayoutContainerContext = createContext<HTMLDivElement | null>(null);\n\nexport const LayoutContainerProvider = LayoutContainerContext.Provider;\n\nexport const useLayoutContainer = () => {\n  const ref = useContext(LayoutContainerContext);\n\n  if (isUndefined(ref)) {\n    throw new Error('LayoutContainerProvider is not found');\n  }\n\n  return ref;\n};\n","import { useCallback } from 'preact/hooks';\n\nimport { commonThemeSelector, monthThemeSelector, weekThemeSelector } from '@src/selectors/theme';\nimport { createStoreContext } from '@src/store';\nimport { createStore } from '@src/store/internal';\nimport { createCommonTheme } from '@src/theme/common';\nimport { createThemeDispatch } from '@src/theme/dispatch';\nimport { createMonthTheme } from '@src/theme/month';\nimport { createWeekTheme } from '@src/theme/week';\n\nimport type { Options } from '@t/options';\nimport type { SetState } from '@t/store';\nimport type {\n  CommonTheme,\n  MonthTheme,\n  ThemeDispatchers,\n  ThemeState,\n  ThemeStore,\n  WeekTheme,\n} from '@t/theme';\n\nconst themeStoreCreator =\n  (themeOptions: Options['theme'] = {}) =>\n  (set: SetState<ThemeStore>) => {\n    return {\n      ...createCommonTheme(themeOptions?.common),\n      ...createWeekTheme(themeOptions?.week),\n      ...createMonthTheme(themeOptions?.month),\n      dispatch: {\n        ...createThemeDispatch(set),\n      },\n    };\n  };\n\nexport const initThemeStore = (themeOptions: Options['theme'] = {}) =>\n  createStore<ThemeStore>(themeStoreCreator(themeOptions));\n\nconst {\n  StoreProvider: ThemeProvider,\n  useInternalStore: useInternalThemeStore,\n  useStore: useTheme,\n} = createStoreContext<ThemeStore>();\nexport { ThemeProvider, useInternalThemeStore, useTheme };\n\nexport function useThemeDispatch(): ThemeDispatchers {\n  return useTheme(useCallback((state) => state.dispatch, []));\n}\n\nexport function useCommonTheme(): CommonTheme {\n  return useTheme(commonThemeSelector);\n}\n\nexport function useWeekTheme(): WeekTheme {\n  return useTheme(weekThemeSelector);\n}\n\nexport function useMonthTheme(): MonthTheme {\n  return useTheme(monthThemeSelector);\n}\n\nexport function useAllTheme(): ThemeState {\n  return useTheme(\n    useCallback(\n      ({ common, week, month }) => ({\n        common,\n        week,\n        month,\n      }),\n      []\n    )\n  );\n}\n","import { isSameEvent } from '@src/helpers/events';\nimport EventModel from '@src/model/eventModel';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\nimport { makeDateRange, MS_PER_DAY, toEndOfDay, toFormat, toStartOfDay } from '@src/time/datetime';\nimport Collection from '@src/utils/collection';\n\nimport type { CalendarData, EventObject, IDS_OF_DAY } from '@t/events';\nimport type { CalendarInfo } from '@t/options';\n\n/**\n * Make a event collection\n * @returns {Collection<EventModel>} instance\n */\nexport function createEventCollection<T extends EventModel | EventUIModel>(...initItems: T[]) {\n  const collection = new Collection<T>((event) => event.cid());\n\n  if (initItems.length) {\n    collection.add(...initItems);\n  }\n\n  return collection;\n}\n/**\n * Calculate contain dates in event.\n * @param {TZDate} start - start date of range\n * @param {TZDate} end - end date of range\n * @returns {array} contain dates.\n */\nexport function getDateRange(start: TZDate, end: TZDate) {\n  return makeDateRange(toStartOfDay(start), toEndOfDay(end), MS_PER_DAY);\n}\n\nexport function isAllday(event: EventModel) {\n  return (\n    event.isAllday ||\n    (event.category === 'time' && Number(event.end) - Number(event.start) > MS_PER_DAY)\n  );\n}\n\n/**\n * function for group each event models.\n * @type {function}\n * @param {EventUIModel} uiModel - ui model instance\n * @returns {string} group key\n */\nexport function filterByCategory(uiModel: EventUIModel) {\n  const { model } = uiModel;\n\n  if (isAllday(model)) {\n    return 'allday';\n  }\n\n  return model.category;\n}\n\n/****************\n * Events CRUD\n ****************/\n\n/**\n * Set date matrix to supplied event model instance.\n * @param {IDS_OF_DAY} idsOfDay - ids of day\n * @param {EventModel} event - instance of event model.\n */\nexport function addToMatrix(idsOfDay: IDS_OF_DAY, event: EventModel) {\n  const containDates = getDateRange(event.getStarts(), event.getEnds());\n\n  containDates.forEach((date) => {\n    const ymd = toFormat(date, 'YYYYMMDD');\n    const matrix = (idsOfDay[ymd] = idsOfDay[ymd] || []);\n\n    matrix.push(event.cid());\n  });\n}\n\n/**\n * Remove event's id from matrix.\n * @param {IDS_OF_DAY} idsOfDay - ids of day\n * @param {EventModel} event - instance of event model\n */\nexport function removeFromMatrix(idsOfDay: IDS_OF_DAY, event: EventModel) {\n  const modelID = event.cid();\n\n  Object.values(idsOfDay).forEach((ids: number[]) => {\n    const index = ids.indexOf(modelID);\n\n    if (~index) {\n      ids.splice(index, 1);\n    }\n  });\n}\n\nexport function addEvent(calendarData: CalendarData, event: EventModel) {\n  calendarData.events.add(event);\n  addToMatrix(calendarData.idsOfDay, event);\n\n  return event;\n}\n\nexport function createEvent(calendarData: CalendarData, eventData: EventObject) {\n  const event = new EventModel(eventData);\n\n  return addEvent(calendarData, event);\n}\n\nexport function createEvents(calendarData: CalendarData, events: EventObject[] = []) {\n  return events.map((eventData) => createEvent(calendarData, eventData));\n}\n\n/**\n * Update an event.\n * @param {CalendarData} calendarData - data of calendar\n * @param {string} eventId - event id\n * @param {string} calendarId - calendar id\n * @param {EventObject} eventData - event data\n * @returns {boolean} success or failure\n */\nexport function updateEvent(\n  calendarData: CalendarData,\n  eventId: string,\n  calendarId: string,\n  eventData: EventObject\n) {\n  const { idsOfDay } = calendarData;\n  const event = calendarData.events.find((item) => isSameEvent(item, eventId, calendarId));\n\n  if (!event) {\n    return false;\n  }\n\n  event.init({ ...event, ...eventData });\n\n  removeFromMatrix(idsOfDay, event);\n  addToMatrix(idsOfDay, event);\n\n  return true;\n}\n\n/**\n * Delete event instance from controller.\n * @param {CalendarData} calendarData - data of calendar\n * @param {EventModel} event - event model instance to delete\n * @returns {EventModel} deleted model instance.\n */\nexport function deleteEvent(calendarData: CalendarData, event: EventModel) {\n  removeFromMatrix(calendarData.idsOfDay, event);\n  calendarData.events.remove(event);\n\n  return event;\n}\n\nexport function clearEvents(calendarData: CalendarData) {\n  calendarData.idsOfDay = {};\n  calendarData.events.clear();\n}\n\n/**\n * Set calendar list\n * @param {CalendarData} calendarData - data of calendar\n * @param {Array.<Calendar>} calendars - calendar list\n */\nexport function setCalendars(calendarData: CalendarData, calendars: CalendarInfo[]) {\n  calendarData.calendars = calendars;\n}\n\n/**\n * Return events in supplied date range.\n *\n * available only YMD.\n * @param {CalendarData} calendarData - data of calendar\n * @param {{start: TZDate, end: TZDate}} condition - condition of find range\n * @returns {object.<string, Collection>} event collection grouped by dates.\n */\nexport function findByDateRange(\n  calendarData: CalendarData,\n  condition: { start: TZDate; end: TZDate }\n): Record<string, EventModel[]> {\n  const { start, end } = condition;\n  const { events, idsOfDay } = calendarData;\n  const range = getDateRange(start, end);\n  const result: Record<string, EventModel[]> = {};\n  let ids;\n  let ymd;\n  let uiModels: EventModel[];\n\n  range.forEach((date) => {\n    ymd = toFormat(date, 'YYYYMMDD');\n    ids = idsOfDay[ymd];\n    uiModels = result[ymd] = [];\n\n    if (ids && ids.length) {\n      uiModels.push(...ids.map((id) => events.get(id) as EventModel));\n    }\n  });\n\n  return result;\n}\n","import { DEFAULT_DUPLICATE_EVENT_CID } from '@src/constants/layout';\nimport {\n  COLLAPSED_DUPLICATE_EVENT_WIDTH_PX,\n  TIME_EVENT_CONTAINER_MARGIN_LEFT,\n} from '@src/constants/style';\nimport { createEventCollection } from '@src/controller/base';\nimport { getCollisionGroup, getMatrices } from '@src/controller/core';\nimport { getTopHeightByTime } from '@src/controller/times';\nimport { extractPercentPx, toPercent, toPx } from '@src/helpers/css';\nimport { isTimeEvent } from '@src/model/eventModel';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\nimport { addMinutes, max, min } from '@src/time/datetime';\nimport type { CollapseDuplicateEventsOptions } from '@src/types/options';\nimport array from '@src/utils/array';\n\nconst MIN_HEIGHT_PERCENT = 1;\n\ninterface RenderInfoOptions {\n  baseWidth: number;\n  columnIndex: number;\n  renderStart: TZDate;\n  renderEnd: TZDate;\n  modelStart: TZDate;\n  modelEnd: TZDate;\n  goingStart: TZDate;\n  comingEnd: TZDate;\n  startColumnTime: TZDate;\n  endColumnTime: TZDate;\n}\n\n/**\n * Filter that get events in supplied date ranges.\n * @param {TZDate} startColumnTime - start date\n * @param {TZDate} endColumnTime - end date\n * @returns {function} event filter function\n */\nexport function isBetween(startColumnTime: TZDate, endColumnTime: TZDate) {\n  return (uiModel: EventUIModel) => {\n    const { goingDuration = 0, comingDuration = 0 } = uiModel.model;\n    const ownStarts = addMinutes(uiModel.getStarts(), -goingDuration);\n    const ownEnds = addMinutes(uiModel.getEnds(), comingDuration);\n\n    return !(ownEnds <= startColumnTime || ownStarts >= endColumnTime);\n  };\n}\n\nfunction setInnerHeights(uiModel: EventUIModel, options: RenderInfoOptions) {\n  const { renderStart, renderEnd, modelStart, modelEnd } = options;\n  const { goingDuration = 0, comingDuration = 0 } = uiModel.model;\n\n  let modelDurationHeight = 100;\n\n  if (goingDuration > 0) {\n    const { height: goingDurationHeight } = getTopHeightByTime(\n      renderStart,\n      modelStart,\n      renderStart,\n      renderEnd\n    );\n    uiModel.goingDurationHeight = goingDurationHeight;\n    modelDurationHeight -= goingDurationHeight;\n  }\n\n  if (comingDuration > 0) {\n    const { height: comingDurationHeight } = getTopHeightByTime(\n      modelEnd,\n      renderEnd,\n      renderStart,\n      renderEnd\n    );\n    uiModel.comingDurationHeight = comingDurationHeight;\n    modelDurationHeight -= comingDurationHeight;\n  }\n\n  uiModel.modelDurationHeight = modelDurationHeight;\n}\n\nfunction setCroppedEdges(uiModel: EventUIModel, options: RenderInfoOptions) {\n  const { goingStart, comingEnd, startColumnTime, endColumnTime } = options;\n\n  if (goingStart < startColumnTime) {\n    uiModel.croppedStart = true;\n  }\n  if (comingEnd > endColumnTime) {\n    uiModel.croppedEnd = true;\n  }\n}\n\nfunction getDuplicateLeft(uiModel: EventUIModel, baseLeft: number) {\n  const { duplicateEvents, duplicateEventIndex } = uiModel;\n\n  const prevEvent = duplicateEvents[duplicateEventIndex - 1];\n  let left: number | string = baseLeft;\n  if (prevEvent) {\n    // duplicateLeft = prevEvent.duplicateLeft + prevEvent.duplicateWidth + marginLeft\n    const { percent: leftPercent, px: leftPx } = extractPercentPx(`${prevEvent.duplicateLeft}`);\n    const { percent: widthPercent, px: widthPx } = extractPercentPx(`${prevEvent.duplicateWidth}`);\n    const percent = leftPercent + widthPercent;\n    const px = leftPx + widthPx + TIME_EVENT_CONTAINER_MARGIN_LEFT;\n\n    if (percent !== 0) {\n      left = `calc(${toPercent(percent)} ${px > 0 ? '+' : '-'} ${toPx(Math.abs(px))})`;\n    } else {\n      left = toPx(px);\n    }\n  } else {\n    left = toPercent(left);\n  }\n\n  return left;\n}\n\nfunction getDuplicateWidth(uiModel: EventUIModel, baseWidth: number) {\n  const { collapse } = uiModel;\n\n  // if it is collapsed, (COLLAPSED_DUPLICATE_EVENT_WIDTH_PX)px\n  // if it is expanded, (baseWidth)% - (other duplicate events' width + marginLeft)px - (its marginLeft)px\n  return collapse\n    ? `${COLLAPSED_DUPLICATE_EVENT_WIDTH_PX}px`\n    : `calc(${toPercent(baseWidth)} - ${toPx(\n        (COLLAPSED_DUPLICATE_EVENT_WIDTH_PX + TIME_EVENT_CONTAINER_MARGIN_LEFT) *\n          (uiModel.duplicateEvents.length - 1) +\n          TIME_EVENT_CONTAINER_MARGIN_LEFT\n      )})`;\n}\n\nfunction setDimension(uiModel: EventUIModel, options: RenderInfoOptions) {\n  const { startColumnTime, endColumnTime, baseWidth, columnIndex, renderStart, renderEnd } =\n    options;\n  const { duplicateEvents } = uiModel;\n  const { top, height } = getTopHeightByTime(\n    renderStart,\n    renderEnd,\n    startColumnTime,\n    endColumnTime\n  );\n  const dimension = {\n    top,\n    left: baseWidth * columnIndex,\n    width: baseWidth,\n    height: Math.max(MIN_HEIGHT_PERCENT, height),\n    duplicateLeft: '',\n    duplicateWidth: '',\n  };\n\n  if (duplicateEvents.length > 0) {\n    dimension.duplicateLeft = getDuplicateLeft(uiModel, dimension.left);\n    dimension.duplicateWidth = getDuplicateWidth(uiModel, dimension.width);\n  }\n\n  uiModel.setUIProps(dimension);\n}\n\nfunction getRenderInfoOptions(\n  uiModel: EventUIModel,\n  columnIndex: number,\n  baseWidth: number,\n  startColumnTime: TZDate,\n  endColumnTime: TZDate\n) {\n  const { goingDuration = 0, comingDuration = 0 } = uiModel.model;\n  const modelStart = uiModel.getStarts();\n  const modelEnd = uiModel.getEnds();\n  const goingStart = addMinutes(modelStart, -goingDuration);\n  const comingEnd = addMinutes(modelEnd, comingDuration);\n  const renderStart = max(goingStart, startColumnTime);\n  const renderEnd = min(comingEnd, endColumnTime);\n\n  return {\n    baseWidth,\n    columnIndex,\n    modelStart,\n    modelEnd,\n    renderStart,\n    renderEnd,\n    goingStart,\n    comingEnd,\n    startColumnTime,\n    endColumnTime,\n    duplicateEvents: uiModel.duplicateEvents,\n  };\n}\n\nfunction setRenderInfo({\n  uiModel,\n  columnIndex,\n  baseWidth,\n  startColumnTime,\n  endColumnTime,\n  isDuplicateEvent = false,\n}: {\n  uiModel: EventUIModel;\n  columnIndex: number;\n  baseWidth: number;\n  startColumnTime: TZDate;\n  endColumnTime: TZDate;\n  isDuplicateEvent?: boolean;\n}) {\n  if (!isDuplicateEvent && uiModel.duplicateEvents.length > 0) {\n    uiModel.duplicateEvents.forEach((event) => {\n      setRenderInfo({\n        uiModel: event,\n        columnIndex,\n        baseWidth,\n        startColumnTime,\n        endColumnTime,\n        isDuplicateEvent: true,\n      });\n    });\n\n    return;\n  }\n\n  const renderInfoOptions = getRenderInfoOptions(\n    uiModel,\n    columnIndex,\n    baseWidth,\n    startColumnTime,\n    endColumnTime\n  );\n\n  setDimension(uiModel, renderInfoOptions);\n  setInnerHeights(uiModel, renderInfoOptions);\n  setCroppedEdges(uiModel, renderInfoOptions);\n}\n\nfunction setDuplicateEvents(\n  uiModels: EventUIModel[],\n  options: CollapseDuplicateEventsOptions,\n  selectedDuplicateEventCid: number\n) {\n  const { getDuplicateEvents, getMainEvent } = options;\n\n  const eventObjects = uiModels.map((uiModel) => uiModel.model.toEventObject());\n\n  uiModels.forEach((targetUIModel) => {\n    if (targetUIModel.collapse || targetUIModel.duplicateEvents.length > 0) {\n      return;\n    }\n\n    const duplicateEvents = getDuplicateEvents(targetUIModel.model.toEventObject(), eventObjects);\n\n    if (duplicateEvents.length <= 1) {\n      return;\n    }\n\n    const mainEvent = getMainEvent(duplicateEvents);\n\n    const duplicateEventUIModels = duplicateEvents.map(\n      (event) => uiModels.find((uiModel) => uiModel.cid() === event.__cid) as EventUIModel\n    );\n    const isSelectedGroup = !!(\n      selectedDuplicateEventCid > DEFAULT_DUPLICATE_EVENT_CID &&\n      duplicateEvents.find((event) => event.__cid === selectedDuplicateEventCid)\n    );\n    const duplicateStarts = duplicateEvents.reduce((acc, { start, goingDuration }) => {\n      const renderStart = addMinutes(start, -goingDuration);\n      return min(acc, renderStart);\n    }, duplicateEvents[0].start);\n    const duplicateEnds = duplicateEvents.reduce((acc, { end, comingDuration }) => {\n      const renderEnd = addMinutes(end, comingDuration);\n      return max(acc, renderEnd);\n    }, duplicateEvents[0].end);\n\n    duplicateEventUIModels.forEach((event, index) => {\n      const isMain = event.cid() === mainEvent.__cid;\n      const collapse = !(\n        (isSelectedGroup && event.cid() === selectedDuplicateEventCid) ||\n        (!isSelectedGroup && isMain)\n      );\n\n      event.setUIProps({\n        duplicateEvents: duplicateEventUIModels,\n        duplicateEventIndex: index,\n        collapse,\n        isMain,\n        duplicateStarts,\n        duplicateEnds,\n      });\n    });\n  });\n\n  return uiModels;\n}\n\n/**\n * Convert to EventUIModel and make rendering information of events\n * @param {EventUIModel[]} events - event list\n * @param {TZDate} startColumnTime - start date\n * @param {TZDate} endColumnTime - end date\n */\nexport function setRenderInfoOfUIModels(\n  events: EventUIModel[],\n  startColumnTime: TZDate,\n  endColumnTime: TZDate,\n  selectedDuplicateEventCid: number,\n  collapseDuplicateEventsOptions?: CollapseDuplicateEventsOptions\n) {\n  const uiModels: EventUIModel[] = events\n    .filter(isTimeEvent)\n    .filter(isBetween(startColumnTime, endColumnTime))\n    .sort(array.compare.event.asc);\n\n  if (collapseDuplicateEventsOptions) {\n    setDuplicateEvents(uiModels, collapseDuplicateEventsOptions, selectedDuplicateEventCid);\n  }\n  const expandedEvents = uiModels.filter((uiModel) => !uiModel.collapse);\n\n  const uiModelColl = createEventCollection(...expandedEvents);\n  const usingTravelTime = true;\n  const collisionGroups = getCollisionGroup(expandedEvents, usingTravelTime);\n  const matrices = getMatrices(uiModelColl, collisionGroups, usingTravelTime);\n\n  matrices.forEach((matrix) => {\n    const maxRowLength = Math.max(...matrix.map((row) => row.length));\n    const baseWidth = Math.round(100 / maxRowLength);\n\n    matrix.forEach((row) => {\n      row.forEach((uiModel, columnIndex) => {\n        setRenderInfo({ uiModel, columnIndex, baseWidth, startColumnTime, endColumnTime });\n      });\n    });\n  });\n\n  return uiModels;\n}\n","import type EventModel from '@src/model/eventModel';\nimport EventUIModel from '@src/model/eventUIModel';\nimport TZDate from '@src/time/date';\nimport { makeDateRange, MS_PER_DAY, toEndOfDay, toFormat, toStartOfDay } from '@src/time/datetime';\nimport type { Filter } from '@src/utils/collection';\nimport Collection from '@src/utils/collection';\nimport { isUndefined } from '@src/utils/type';\n\nimport type { CollisionGroup, Matrix, Matrix3d } from '@t/events';\n\n/**\n * Calculate collision group.\n * @param {Array<EventModel|EventUIModel>} events list of ui models.\n * @param {boolean} [usingTravelTime = true]\n * @returns {Array<number[]>} Collision Group.\n */\nexport function getCollisionGroup<Events extends EventModel | EventUIModel>(\n  events: Events[],\n  usingTravelTime = true\n) {\n  const collisionGroups: CollisionGroup = [];\n  let previousEventList: Array<Events>;\n\n  if (!events.length) {\n    return collisionGroups;\n  }\n\n  collisionGroups[0] = [events[0].cid()];\n  events.slice(1).forEach((event: Events, index: number) => {\n    previousEventList = events.slice(0, index + 1).reverse();\n\n    // If overlapping previous events, find a Collision Group of overlapping events and add this events\n    const found = previousEventList.find((previous: Events) =>\n      event.collidesWith(previous, usingTravelTime)\n    );\n\n    if (!found) {\n      // This event is a event that does not overlap with the previous event, so a new Collision Group is constructed.\n      collisionGroups.push([event.cid()]);\n    } else {\n      collisionGroups\n        .slice()\n        .reverse()\n        .some((group) => {\n          if (~group.indexOf(found.cid())) {\n            // If you find a previous event that overlaps, include it in the Collision Group to which it belongs.\n            group.push(event.cid());\n\n            return true; // returning true can stop this loop\n          }\n\n          return false;\n        });\n    }\n  });\n\n  return collisionGroups;\n}\n\n/**\n * Get row length by column index in 2d matrix.\n * @param {array[]} matrix Matrix\n * @param {number} col Column index.\n * @returns {number} Last row number in column or -1\n */\nexport function getLastRowInColumn(matrix: Array<any[]>, col: number) {\n  let { length: row } = matrix;\n\n  while (row > 0) {\n    row -= 1;\n    if (!isUndefined(matrix[row][col])) {\n      return row;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Calculate matrix for appointment block element placing.\n * @param {Collection} collection model collection.\n * @param {Array<number[]>} collisionGroups Collision groups for event set.\n * @param {boolean} [usingTravelTime = true]\n * @returns {array} matrices\n */\nexport function getMatrices<T extends EventModel | EventUIModel>(\n  collection: Collection<T>,\n  collisionGroups: CollisionGroup,\n  usingTravelTime = true\n): Matrix3d<T> {\n  const result: Matrix3d<T> = [];\n\n  collisionGroups.forEach((group) => {\n    const matrix: Matrix<T> = [[]];\n\n    group.forEach((eventID) => {\n      const event = collection.get(eventID) as T;\n      let col = 0;\n      let found = false;\n      let nextRow;\n      let lastRowInColumn;\n\n      while (!found) {\n        lastRowInColumn = getLastRowInColumn(matrix, col);\n\n        if (lastRowInColumn === -1) {\n          matrix[0].push(event);\n          found = true;\n        } else if (!event.collidesWith(matrix[lastRowInColumn][col], usingTravelTime)) {\n          nextRow = lastRowInColumn + 1;\n          if (isUndefined(matrix[nextRow])) {\n            matrix[nextRow] = [];\n          }\n          matrix[nextRow][col] = event;\n          found = true;\n        }\n\n        col += 1;\n      }\n    });\n\n    result.push(matrix);\n  });\n\n  return result;\n}\n\n/**\n * Filter that get event model in supplied date ranges.\n * @param {TZDate} start - start date\n * @param {TZDate} end - end date\n * @returns {function} event filter function\n */\nexport function getEventInDateRangeFilter(\n  start: TZDate,\n  end: TZDate\n): Filter<EventModel | EventUIModel> {\n  return (model) => {\n    const ownStarts = model.getStarts();\n    const ownEnds = model.getEnds();\n\n    // shorthand condition of\n    //\n    // (ownStarts >= start && ownEnds <= end) ||\n    // (ownStarts < start && ownEnds >= start) ||\n    // (ownEnds > end && ownStarts <= end)\n    return !(ownEnds < start || ownStarts > end);\n  };\n}\n\n/**\n * Position each ui model for placing into container\n * @param {TZDate} start - start date to render\n * @param {TZDate} end - end date to render\n * @param {Matrix3d} matrices - matrices from controller\n * @param {function} [iteratee] - iteratee function invoke each ui models\n */\nexport function positionUIModels(\n  start: TZDate,\n  end: TZDate,\n  matrices: Matrix3d<EventUIModel>,\n  iteratee?: (uiModel: EventUIModel) => void\n) {\n  const ymdListToRender = makeDateRange(start, end, MS_PER_DAY).map((date) =>\n    toFormat(date, 'YYYYMMDD')\n  );\n\n  matrices.forEach((matrix) => {\n    matrix.forEach((column) => {\n      column.forEach((uiModel, index) => {\n        if (!uiModel) {\n          return;\n        }\n\n        const ymd = toFormat(uiModel.getStarts(), 'YYYYMMDD');\n        const dateLength = makeDateRange(\n          toStartOfDay(uiModel.getStarts()),\n          toEndOfDay(uiModel.getEnds()),\n          MS_PER_DAY\n        ).length;\n\n        uiModel.top = index;\n        uiModel.left = ymdListToRender.indexOf(ymd);\n        uiModel.width = dateLength;\n\n        iteratee?.(uiModel);\n      });\n    });\n  });\n}\n\n/**\n * Limit render range for ui models\n * @param {TZDate} start\n * @param {TZDate} end\n * @param {EventUIModel} uiModel - ui model instance\n * @returns {EventUIModel} ui model that limited render range\n */\nfunction limit(start: TZDate, end: TZDate, uiModel: EventUIModel) {\n  if (uiModel.getStarts() < start) {\n    uiModel.exceedLeft = true;\n    uiModel.renderStarts = new TZDate(start);\n  }\n\n  if (uiModel.getEnds() > end) {\n    uiModel.exceedRight = true;\n    uiModel.renderEnds = new TZDate(end);\n  }\n\n  return uiModel;\n}\n\n/**\n * Limit start, end date each ui model for render properly\n * @param {TZDate} start - start date to render\n * @param {TZDate} end - end date to render\n * @param {Collection<EventUIModel>|EventUIModel} uiModelColl - collection of EventUIModel or EventUIModel\n * @returns {?EventUIModel} return ui model when third parameter is\n *  ui model\n */\nexport function limitRenderRange(\n  start: TZDate,\n  end: TZDate,\n  uiModelColl: Collection<EventUIModel> | EventUIModel\n) {\n  if (uiModelColl instanceof Collection) {\n    uiModelColl.each((uiModel) => {\n      limit(start, end, uiModel);\n\n      return true;\n    });\n\n    return null;\n  }\n\n  return limit(start, end, uiModelColl);\n}\n\n/**\n * Convert event model collection to ui model collection.\n * @param {Collection} eventCollection - collection of event model\n * @returns {Collection} collection of event ui model\n */\nexport function convertToUIModel(eventCollection: Collection<EventModel>) {\n  const uiModelColl = new Collection<EventUIModel>((uiModel) => {\n    return uiModel.cid();\n  });\n\n  eventCollection.each(function (event) {\n    uiModelColl.add(new EventUIModel(event));\n  });\n\n  return uiModelColl;\n}\n","import {\n  convertToUIModel,\n  getCollisionGroup,\n  getEventInDateRangeFilter,\n  getMatrices,\n  limitRenderRange,\n  positionUIModels,\n} from '@src/controller/core';\nimport type EventModel from '@src/model/eventModel';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\nimport { isSameDate, toEndOfDay, toFormat, toStartOfDay } from '@src/time/datetime';\nimport array from '@src/utils/array';\nimport type { Filter } from '@src/utils/collection';\nimport Collection from '@src/utils/collection';\nimport { isUndefined } from '@src/utils/type';\n\nimport type { CalendarData, IDS_OF_DAY } from '@t/events';\n\n/**\n * Filter function for find allday event\n * @param {EventUIModel} uiModel - ui model\n * @returns {boolean} whether model is allday event?\n */\nfunction _isAllday({ model }: EventUIModel) {\n  return model.isAllday || model.hasMultiDates;\n}\n\n/**\n * Filter function for find time event\n * @param {EventUIModel} uiModel - ui model\n * @returns {boolean} whether model is time event?\n */\nfunction _isNotAllday(uiModel: EventUIModel) {\n  return !_isAllday(uiModel);\n}\n\n/**\n * Weight top value +1 for month view render\n * @param {EventUIModel} uiModel - ui model\n */\nfunction _weightTopValue(uiModel: EventUIModel) {\n  uiModel.top = uiModel.top || 0;\n  uiModel.top += 1;\n}\n\n/**\n * Adjust render range to render properly.\n *\n * Limit start, end for each allday events and expand start, end for\n * each time events\n * @param {TZDate} start - render start date\n * @param {TZDate} end - render end date\n * @param {Collection} uiModelColl - collection of ui model.\n */\nfunction _adjustRenderRange(start: TZDate, end: TZDate, uiModelColl: Collection<EventUIModel>) {\n  uiModelColl.each((uiModel) => {\n    if (uiModel.model.isAllday || uiModel.model.hasMultiDates) {\n      limitRenderRange(toStartOfDay(start), toEndOfDay(end), uiModel);\n    }\n  });\n}\n\n/**\n * Get max top index value for allday events in specific date (YMD)\n * @param idsOfDay\n * @param {string} ymd - yyyymmdd formatted value\n * @param {Collection} uiModelAlldayColl - collection of allday events\n * @returns {number} max top index value in date\n */\nfunction _getAlldayMaxTopIndexAtYMD(\n  idsOfDay: IDS_OF_DAY,\n  ymd: string,\n  uiModelAlldayColl: Collection<EventUIModel>\n) {\n  const topIndexesInDate: number[] = [];\n\n  idsOfDay[ymd].forEach((cid) => {\n    uiModelAlldayColl.doWhenHas(cid, (uiModel) => {\n      topIndexesInDate.push(uiModel.top);\n    });\n  });\n\n  if (topIndexesInDate.length > 0) {\n    return Math.max(...topIndexesInDate);\n  }\n\n  return 0;\n}\n\n/**\n * Adjust time ui model's top index value\n * @param idsOfDay\n * @param {Collection} uiModelColl - collection of ui ui model\n */\nfunction _adjustTimeTopIndex(idsOfDay: IDS_OF_DAY, uiModelColl: Collection<EventUIModel>) {\n  const vAlldayColl = uiModelColl.filter(_isAllday);\n  const sortedTimeEvents = uiModelColl.filter(_isNotAllday).sort(array.compare.event.asc);\n  const maxIndexInYMD: Record<string, number> = {};\n\n  sortedTimeEvents.forEach((timeUIModel) => {\n    const eventYMD = toFormat(timeUIModel.getStarts(), 'YYYYMMDD');\n    let alldayMaxTopInYMD = maxIndexInYMD[eventYMD];\n\n    if (isUndefined(alldayMaxTopInYMD)) {\n      alldayMaxTopInYMD = maxIndexInYMD[eventYMD] = _getAlldayMaxTopIndexAtYMD(\n        idsOfDay,\n        eventYMD,\n        vAlldayColl\n      );\n    }\n    maxIndexInYMD[eventYMD] = timeUIModel.top = alldayMaxTopInYMD + 1;\n  });\n}\n\n/**\n * Adjust time ui model's top index value\n * @param {IDS_OF_DAY} idsOfDay - ids of days\n * @param {Collection} uiModelColl - collection of ui ui model\n */\nfunction _stackTimeFromTop(idsOfDay: IDS_OF_DAY, uiModelColl: Collection<EventUIModel>) {\n  const uiModelAlldayColl = uiModelColl.filter(_isAllday);\n  const sortedTimeEvents = uiModelColl.filter(_isNotAllday).sort(array.compare.event.asc);\n  const indiceInYMD: Record<string, number[]> = {};\n\n  sortedTimeEvents.forEach((timeUIModel) => {\n    const eventYMD = toFormat(timeUIModel.getStarts(), 'YYYYMMDD');\n    let topArrayInYMD = indiceInYMD[eventYMD];\n\n    if (isUndefined(topArrayInYMD)) {\n      topArrayInYMD = indiceInYMD[eventYMD] = [];\n      idsOfDay[eventYMD].forEach((cid) => {\n        uiModelAlldayColl.doWhenHas(cid, (uiModel) => {\n          topArrayInYMD.push(uiModel.top);\n        });\n      });\n    }\n\n    if (topArrayInYMD.indexOf(timeUIModel.top) >= 0) {\n      const maxTopInYMD = Math.max(...topArrayInYMD) + 1;\n      for (let i = 1; i <= maxTopInYMD; i += 1) {\n        timeUIModel.top = i;\n        if (topArrayInYMD.indexOf(timeUIModel.top) < 0) {\n          break;\n        }\n      }\n    }\n    topArrayInYMD.push(timeUIModel.top);\n  });\n}\n\n/**\n * Convert multi-date time event to all-day event\n * @param {Collection} uiModelColl - collection of ui models.\n * property.\n */\nfunction _addMultiDatesInfo(uiModelColl: Collection<EventUIModel>) {\n  uiModelColl.each((uiModel) => {\n    const { model } = uiModel;\n    const start = model.getStarts();\n    const end = model.getEnds();\n\n    model.hasMultiDates = !isSameDate(start, end);\n\n    if (!model.isAllday && model.hasMultiDates) {\n      uiModel.renderStarts = toStartOfDay(start);\n      uiModel.renderEnds = toEndOfDay(end);\n    }\n  });\n}\n\n/**\n * Find event and get ui model for specific month\n * @returns {object} ui model data\n * @param calendarData\n * @param condition\n */\nexport function findByDateRange(\n  calendarData: CalendarData,\n  condition: {\n    start: TZDate;\n    end: TZDate;\n    andFilters?: Filter<EventModel | EventUIModel>[];\n    alldayFirstMode?: boolean;\n  }\n) {\n  const { start, end, andFilters = [], alldayFirstMode = false } = condition;\n  const { events, idsOfDay } = calendarData;\n  const filterFn = Collection.and(...[getEventInDateRangeFilter(start, end)].concat(andFilters));\n\n  const coll = events.filter(filterFn);\n  const uiModelColl = convertToUIModel(coll);\n  _addMultiDatesInfo(uiModelColl);\n  _adjustRenderRange(start, end, uiModelColl);\n  const vList = uiModelColl.sort(array.compare.event.asc);\n  const usingTravelTime = false;\n  const collisionGroup = getCollisionGroup(vList, usingTravelTime);\n  const matrices = getMatrices(uiModelColl, collisionGroup, usingTravelTime);\n  positionUIModels(start, end, matrices, _weightTopValue);\n\n  if (alldayFirstMode) {\n    _adjustTimeTopIndex(idsOfDay, uiModelColl);\n  } else {\n    _stackTimeFromTop(idsOfDay, uiModelColl);\n  }\n\n  return matrices;\n}\n","import type TZDate from '@src/time/date';\nimport { clone } from '@src/time/datetime';\nimport { limit, ratio } from '@src/utils/math';\n\nimport type { TimeUnit } from '@t/events';\n\n/**\n * @param date\n * @param {TZDate} [start] - start time\n * @param {TZDate} [end] - end time\n * @returns {number} The percent value represent current time between start and end\n */\nexport function getTopPercentByTime(date: TZDate, start: TZDate, end: TZDate) {\n  const startTime = start.getTime();\n  const endTime = end.getTime();\n  const time = limit(date.getTime(), [startTime], [endTime]) - startTime;\n  const max = endTime - startTime;\n\n  const topPercent = ratio(max, 100, time);\n\n  return limit(topPercent, [0], [100]);\n}\n\n/**\n * @typedef {Object} VerticalPositionsByTime\n * @property {number} top - top percent\n * @property {number} height - height percent\n */\n/**\n *\n * @param {TZDate} start target time which is converted to percent value\n * @param {TZDate} end target time which is converted to percent value\n * @param {TZDate} minTime start time\n * @param {TZDate} maxTime end time\n * @returns {VerticalPositionsByTime} verticalPositions\n */\nexport function getTopHeightByTime(start: TZDate, end: TZDate, minTime: TZDate, maxTime: TZDate) {\n  const top = getTopPercentByTime(start, minTime, maxTime);\n  const bottom = getTopPercentByTime(end, minTime, maxTime);\n  const height = bottom - top;\n\n  return {\n    top,\n    height,\n  };\n}\n\nfunction setValueByUnit(time: TZDate, value: number, unit: TimeUnit) {\n  if (unit === 'minute') {\n    time.setMinutes(value, 0, 0);\n  } else if (unit === 'hour') {\n    time.setHours(value, 0, 0, 0);\n  } else if (unit === 'date') {\n    time.setHours(0, 0, 0, 0);\n    time.setDate(value + 1);\n  } else if (unit === 'month') {\n    time.setHours(0, 0, 0, 0);\n    time.setMonth(value, 1);\n  } else if (unit === 'year') {\n    time.setHours(0, 0, 0, 0);\n    time.setFullYear(value, 0, 1);\n  }\n\n  return time;\n}\n\n/**\n * Get a previous grid time before the time\n * @param {TZDate} time - target time\n * @param slot\n * @param unit\n * @returns {TZDate} - next grid time\n */\nexport function getPrevGridTime(time: TZDate, slot: number, unit: TimeUnit) {\n  let index = 0;\n  let prevGridTime = setValueByUnit(clone(time), slot * index, unit);\n  let nextGridTime;\n\n  index += 1;\n  do {\n    nextGridTime = setValueByUnit(clone(time), slot * index, unit);\n    index += 1;\n\n    if (nextGridTime < time) {\n      prevGridTime = clone(nextGridTime);\n    }\n  } while (nextGridTime <= time);\n\n  return prevGridTime;\n}\n\n/**\n * Get a next grid time after the time\n * @param {TZDate} time - target time\n * @param slot\n * @param unit\n * @returns {TZDate} - next grid time\n */\nexport function getNextGridTime(time: TZDate, slot: number, unit: TimeUnit) {\n  let index = 0;\n  let nextGridTime;\n\n  do {\n    nextGridTime = setValueByUnit(clone(time), slot * index, unit);\n    index += 1;\n  } while (nextGridTime < time);\n\n  return nextGridTime;\n}\n","import { filterByCategory, getDateRange } from '@src/controller/base';\nimport {\n  convertToUIModel,\n  getCollisionGroup,\n  getEventInDateRangeFilter,\n  getMatrices,\n  limitRenderRange,\n  positionUIModels,\n} from '@src/controller/core';\nimport type EventModel from '@src/model/eventModel';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport TZDate from '@src/time/date';\nimport { toEndOfDay, toFormat, toStartOfDay } from '@src/time/datetime';\nimport array from '@src/utils/array';\nimport type { Filter } from '@src/utils/collection';\nimport Collection from '@src/utils/collection';\nimport { isNil } from '@src/utils/type';\n\nimport type {\n  CalendarData,\n  DayGridEventMatrix,\n  EventGroupMap,\n  IDS_OF_DAY,\n  Matrix3d,\n} from '@t/events';\nimport type { WeekOptions } from '@t/options';\nimport type { Panel } from '@t/panel';\n\n/**********\n * TIME GRID VIEW\n **********/\n\n/**\n * make a filter function that is not included range of start, end hour\n * @param {number} hStart - hour start\n * @param {number} hEnd - hour end\n * @returns {function} - filtering function\n */\nexport function _makeHourRangeFilter(hStart: number, hEnd: number) {\n  // eslint-disable-next-line complexity\n  return (uiModel: EventModel | EventUIModel) => {\n    const ownHourStart = uiModel.getStarts();\n    const ownHourEnd = uiModel.getEnds();\n    const ownHourStartTime = ownHourStart.getTime();\n    const ownHourEndTime = ownHourEnd.getTime();\n    const yyyy = ownHourStart.getFullYear();\n    const mm = ownHourStart.getMonth();\n    const dd = ownHourStart.getDate();\n\n    const hourStart = new TZDate(yyyy, mm, dd).setHours(hStart);\n    const hourEnd = new TZDate(yyyy, mm, dd).setHours(hEnd);\n\n    return (\n      (ownHourStartTime >= hourStart && ownHourStartTime < hourEnd) ||\n      (ownHourEndTime > hourStart && ownHourEndTime <= hourEnd) ||\n      (ownHourStartTime < hourStart && ownHourEndTime > hourStart) ||\n      (ownHourEndTime > hourEnd && ownHourStartTime < hourEnd)\n    );\n  };\n}\n\n/**\n * make ui model function depending on start and end hour\n * if time view options has start or end hour condition\n * it add filter\n * @param {number} hourStart - start hour to be shown\n * @param {number} hourEnd - end hour to be shown\n * @returns {function} function\n */\nexport function _makeGetUIModelFuncForTimeView(\n  hourStart: number,\n  hourEnd: number\n): (uiModelColl: Collection<EventUIModel>) => EventUIModel[] {\n  if (hourStart === 0 && hourEnd === 24) {\n    return (uiModelColl: Collection<EventUIModel>) => {\n      return uiModelColl.sort(array.compare.event.asc);\n    };\n  }\n\n  return (uiModelColl: Collection<EventUIModel>) => {\n    return uiModelColl\n      .filter(_makeHourRangeFilter(hourStart, hourEnd))\n      .sort(array.compare.event.asc);\n  };\n}\n\n/**\n * split event model by ymd.\n * @param {IDS_OF_DAY} idsOfDay - ids of days\n * @param {TZDate} start - start date\n * @param {TZDate} end - end date\n * @param {Collection<EventUIModel>} uiModelColl - collection of ui models.\n * @returns {object.<string, Collection>} splitted event model collections.\n */\nexport function splitEventByDateRange(\n  idsOfDay: IDS_OF_DAY,\n  start: TZDate,\n  end: TZDate,\n  uiModelColl: Collection<EventModel> | Collection<EventUIModel>\n) {\n  const result: Record<string, Collection<EventModel | EventUIModel>> = {};\n  const range = getDateRange(start, end);\n\n  range.forEach((date: TZDate) => {\n    const ymd = toFormat(date, 'YYYYMMDD');\n    const ids = idsOfDay[ymd];\n    const collection = (result[ymd] = new Collection<EventModel | EventUIModel>((event) => {\n      return event.cid();\n    }));\n\n    if (ids && ids.length) {\n      ids.forEach((id) => {\n        uiModelColl.doWhenHas(id, (event: EventModel | EventUIModel) => {\n          collection.add(event);\n        });\n      });\n    }\n  }, {});\n\n  return result;\n}\n\n/**\n * create ui model for time view part\n * @param {IDS_OF_DAY} idsOfDay - model controller\n * @param {object} condition - find options\n *  @param {TZDate} condition.start - start date.\n *  @param {TZDate} condition.end - end date.\n *  @param {Collection} condition.uiModelTimeColl - collection of ui models.\n *  @param {number} condition.hourStart - start hour to be shown\n *  @param {number} condition.hourEnd - end hour to be shown\n * @returns {object} ui model for time part.\n */\nexport function getUIModelForTimeView(\n  idsOfDay: IDS_OF_DAY,\n  condition: {\n    start: TZDate;\n    end: TZDate;\n    uiModelTimeColl: Collection<EventUIModel>;\n    hourStart: number;\n    hourEnd: number;\n  }\n) {\n  const { start, end, uiModelTimeColl, hourStart, hourEnd } = condition;\n  const ymdSplitted = splitEventByDateRange(idsOfDay, start, end, uiModelTimeColl);\n  const result: Record<string, Matrix3d<EventUIModel>> = {};\n\n  const _getUIModel = _makeGetUIModelFuncForTimeView(hourStart, hourEnd);\n  const usingTravelTime = true;\n\n  Object.entries(ymdSplitted).forEach(([ymd, uiModelColl]) => {\n    const uiModels = _getUIModel(uiModelColl as Collection<EventUIModel>);\n    const collisionGroups = getCollisionGroup(uiModels, usingTravelTime);\n    const matrices = getMatrices(uiModelColl, collisionGroups, usingTravelTime);\n\n    result[ymd] = matrices as Matrix3d<EventUIModel>;\n  });\n\n  return result;\n}\n\n/**********\n * ALLDAY VIEW\n **********/\n\n/**\n * Set hasMultiDates flag to true and set date ranges for rendering\n * @param {Collection} uiModelColl - collection of ui models.\n */\nexport function _addMultiDatesInfo(uiModelColl: Collection<EventUIModel>) {\n  uiModelColl.each((uiModel) => {\n    const { model } = uiModel;\n\n    model.hasMultiDates = true;\n    uiModel.renderStarts = toStartOfDay(model.getStarts());\n    uiModel.renderEnds = toEndOfDay(model.getEnds());\n  });\n}\n\n/**\n * create ui model for allday view part\n * @param {TZDate} start start date.\n * @param {TZDate} end end date.\n * @param {Collection} uiModelColl - ui models of allday event.\n * @returns {DayGridEventMatrix} matrix of allday event ui models.\n */\nexport function getUIModelForAlldayView(\n  start: TZDate,\n  end: TZDate,\n  uiModelColl: Collection<EventUIModel>\n): DayGridEventMatrix {\n  if (!uiModelColl || !uiModelColl.size) {\n    return [];\n  }\n\n  _addMultiDatesInfo(uiModelColl);\n  limitRenderRange(start, end, uiModelColl);\n\n  const uiModels = uiModelColl.sort(array.compare.event.asc);\n  const usingTravelTime = true;\n  const collisionGroups = getCollisionGroup(uiModels, usingTravelTime);\n  const matrices = getMatrices(uiModelColl, collisionGroups, usingTravelTime);\n\n  positionUIModels(start, end, matrices);\n\n  return matrices;\n}\n\n/**********\n * READ\n **********/\n\n/**\n * Populate events in date range.\n * @param {CalendarData} calendarData - data store\n * @param {object} condition - find options\n *  @param {IDS_OF_DAY} condition.idsOfDay - model controller\n *  @param {TZDate} condition.start start date.\n *  @param {TZDate} condition.end end date.\n *  @param {Array.<object>} condition.panels - event panels like 'milestone', 'task', 'allday', 'time'\n *  @param {function[]} condition.[andFilters] - optional filters to applying search query\n *  @param {Object} condition.options - week view options\n * @returns {object} events grouped by dates.\n */\nexport function findByDateRange(\n  calendarData: CalendarData,\n  condition: {\n    start: TZDate;\n    end: TZDate;\n    panels: Panel[];\n    andFilters: Filter<EventModel | EventUIModel>[];\n    options: WeekOptions;\n  }\n) {\n  const { start, end, panels, andFilters = [], options } = condition;\n  const { events, idsOfDay } = calendarData;\n  const hourStart = options?.hourStart ?? 0;\n  const hourEnd = options?.hourEnd ?? 24;\n  const filterFn = Collection.and(...[getEventInDateRangeFilter(start, end)].concat(andFilters));\n  const uiModelColl = convertToUIModel(events.filter(filterFn));\n\n  const group: Record<string, Collection<EventUIModel>> = uiModelColl.groupBy(filterByCategory);\n\n  return panels.reduce<EventGroupMap>(\n    (acc, cur) => {\n      const { name, type } = cur;\n\n      if (isNil(group[name])) {\n        return acc;\n      }\n\n      return {\n        ...acc,\n        [name]:\n          type === 'daygrid'\n            ? getUIModelForAlldayView(start, end, group[name])\n            : getUIModelForTimeView(idsOfDay, {\n                start,\n                end,\n                uiModelTimeColl: group[name],\n                hourStart,\n                hourEnd,\n              }),\n      };\n    },\n    {\n      milestone: [],\n      task: [],\n      allday: [],\n      time: {},\n    }\n  );\n}\n","import { h } from 'preact';\n\nimport { Main } from '@src/components/view/main';\nimport { VIEW_TYPE } from '@src/constants/view';\nimport CalendarCore from '@src/factory/calendarCore';\nimport { InvalidViewTypeError } from '@src/utils/error';\n\nimport type { Options, ViewType } from '@t/options';\n\n// TODO: move this function to a separate file such as util\nfunction isValidViewType(viewType: string): viewType is ViewType {\n  return !!Object.values(VIEW_TYPE).find((type) => type === viewType);\n}\n\n/**\n * Calendar class\n *\n * @class Calendar\n * @extends CalendarCore\n * @param {object} options - Calendar options. Check out {@link CalendarCore} for more information.\n */\nexport default class Calendar extends CalendarCore {\n  constructor(container: Element | string, options: Options = {}) {\n    super(container, options);\n\n    const { defaultView = 'week' } = options;\n\n    if (!isValidViewType(defaultView)) {\n      throw new InvalidViewTypeError(defaultView);\n    }\n\n    this.render();\n  }\n\n  protected getComponent() {\n    return <Main />;\n  }\n}\n","import type { ComponentChild } from 'preact';\nimport { h, render } from 'preact';\nimport { unmountComponentAtNode } from 'preact/compat';\nimport renderToString from 'preact-render-to-string';\n\nimport type { DeepPartial } from 'ts-essentials';\nimport sendHostname from 'tui-code-snippet/request/sendHostname';\n\nimport { CalendarContainer } from '@src/calendarContainer';\nimport { GA_TRACKING_ID } from '@src/constants/statistics';\nimport { initCalendarStore } from '@src/contexts/calendarStore';\nimport { initThemeStore } from '@src/contexts/themeStore';\nimport { createDateMatrixOfMonth, getWeekDates } from '@src/helpers/grid';\nimport EventModel from '@src/model/eventModel';\nimport TZDate from '@src/time/date';\nimport { addDate, addMonths, toEndOfDay, toStartOfDay } from '@src/time/datetime';\nimport { last } from '@src/utils/array';\nimport type { EventBus } from '@src/utils/eventBus';\nimport { EventBusImpl } from '@src/utils/eventBus';\nimport { addAttributeHooks, removeAttributeHooks } from '@src/utils/sanitizer';\nimport { isNil, isPresent, isString } from '@src/utils/type';\n\nimport type { ExternalEventTypes, InternalEventTypes, ScrollBehaviorOptions } from '@t/eventBus';\nimport type { DateType, EventObject } from '@t/events';\nimport type { CalendarColor, CalendarInfo, Options, ViewType } from '@t/options';\nimport type {\n  CalendarMonthOptions,\n  CalendarState,\n  CalendarStore,\n  CalendarWeekOptions,\n  Dispatchers,\n  InternalStoreAPI,\n} from '@t/store';\nimport type { ThemeState, ThemeStore } from '@t/theme';\n\n/**\n * {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents CustomEvents} document at {@link https://github.com/nhn/tui.code-snippet tui-code-snippet}\n * @typedef {CustomEvents} CustomEvents\n */\n\n/**\n * Define Calendars to group events.\n *\n * @typedef {object} CalendarInfo\n * @property {string} id - Calendar id.\n * @property {string} name - Calendar name.\n * @property {string} color - Text color of events.\n * @property {string} borderColor - Left border color of events.\n * @property {string} backgroundColor - Background color of events.\n * @property {string} dragBackgroundColor - Background color of events during dragging.\n */\n\n/**\n * Timezone options of the calendar instance.\n *\n * For more information, see {@link https://github.com/nhn/tui.calendar/blob/main/docs/en/apis/options.md#timezone|Timezone options} in guide.\n *\n * @typedef {object} TimezoneOptions\n * @example\n * const calendar = new Calendar('#container', {\n *   timezone: {\n *     // @property {string} zones[].timezoneName - Timezone name. it should be one of IANA timezone names.\n *     // @property {string} [zones[].displayLabel] - Display label of timezone.\n *     // @property {string} [zones[].tooltip] - Tooltip of the element of the display label.\n *     zones: [\n *       {\n *         timezoneName: 'Asia/Seoul',\n *         displayLabel: 'UTC+9:00',\n *         tooltip: 'Seoul'\n *       },\n *       {\n *         timezoneName: 'Europe/London',\n *         displayLabel: 'UTC+1:00',\n *         tooltip: 'BST'\n *       }\n *     ],\n *     // This function will be called for rendering components for each timezone.\n *     // You don't have to use it if you're able to `Intl.DateTimeFormat` API with `timeZone` option.\n *     // this function should return timezone offset from UTC.\n *     // for instance, using moment-timezone:\n *     customOffsetCalculator: (timezoneName, timestamp) => {\n *       return moment.tz(timezoneName).utcOffset(timestamp);\n *     }\n *   }\n * });\n * @property {Array.<object>} zones - Timezone data.\n * @property {string} zones[].timezoneName - Timezone name. it should be one of IANA timezone names.\n * @property {string} [zones[].displayLabel] - Display label of timezone.\n * @property {string} [zones[].tooltip] - Tooltip of the element of the display label.\n * @property {function} customOffsetCalculator - Custom offset calculator when you're not able to leverage `Intl.DateTimeFormat` API.\n */\n\n/**\n * Object to create/modify events.\n * @typedef {object} EventObject\n * @property {string} [id] - Event id.\n * @property {string} [calendarId] - Calendar id.\n * @property {string} [title] - Event title.\n * @property {string} [body] - Body content of the event.\n * @property {string} [isAllday] - Whether the event is all day or not.\n * @property {string|number|Date|TZDate} [start] - Start time of the event.\n * @property {string|number|Date|TZDate} [end] - End time of the event.\n * @property {number} [goingDuration] - Travel time which is taken to go in minutes.\n * @property {number} [comingDuration] - Travel time which is taken to come back in minutes.\n * @property {string} [location] - Location of the event.\n * @property {Array.<string>} [attendees] - Attendees of the event.\n * @property {string} [category] - Category of the event. Available categories are 'milestone', 'task', 'time' and 'allday'.\n * @property {string} [dueDateClass] - Classification of work events. (before work, before lunch, before work)\n * @property {string} [recurrenceRule] - Recurrence rule of the event.\n * @property {string} [state] - State of the event. Available states are 'Busy', 'Free'.\n * @property {boolean} [isVisible] - Whether the event is visible or not.\n * @property {boolean} [isPending] - Whether the event is pending or not.\n * @property {boolean} [isFocused] - Whether the event is focused or not.\n * @property {boolean} [isReadOnly] - Whether the event is read only or not.\n * @property {boolean} [isPrivate] - Whether the event is private or not.\n * @property {string} [color] - Text color of the event.\n * @property {string} [backgroundColor] - Background color of the event.\n * @property {string} [dragBackgroundColor] - Background color of the event during dragging.\n * @property {string} [borderColor] - Left border color of the event.\n * @property {object} [customStyle] - Custom style of the event. The key of CSS property should be camelCase (e.g. {'fontSize': '12px'})\n * @property {*} [raw] - Raw data of the event. it's an arbitrary property for anything.\n */\n\n/**\n * CalendarCore class\n *\n * @class CalendarCore\n * @mixes CustomEvents\n * @param {string|Element} container - container element or selector.\n * @param {object} options - calendar options. For more information, see {@link https://github.com/nhn/tui.calendar/blob/main/docs/en/apis/calendar.md|Calendar options} in guide.\n *   @param {string} [options.defaultView=\"week\"] - Initial view type. Available values are: 'day', 'week', 'month'.\n *   @param {boolean} [options.useFormPopup=false] - Whether to use the default form popup when creating/modifying events.\n *   @param {boolean} [options.useDetailPopup=false] - Whether to use the default detail popup when clicking events.\n *   @param {boolean} [options.isReadOnly=false] - Whether the calendar is read-only.\n *   @param {boolean} [options.usageStatistics=true] - Whether to allow collect hostname and send the information to google analytics.\n *                                              For more information, check out the {@link https://github.com/nhn/tui.calendar/blob/main/apps/calendar/README.md#collect-statistics-on-the-use-of-open-source|documentation}.\n *   @param {function} [options.eventFilter] - A function that returns true if the event should be displayed. The default filter checks if the event's `isVisible` property is true.\n *   @param {object} [options.week] - Week option of the calendar instance.\n *     @param {number} [options.week.startDayOfWeek=0] - Start day of the week. Available values are 0 (Sunday) to 6 (Saturday).\n *     @param {Array.<string>} [options.week.dayNames] - Names of days of the week. Should be 7 items starting from Sunday to Saturday. If not specified, the default names are used.\n *                                               Default values are ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].\n *     @param {boolean} [options.week.workweek=false] - Whether to exclude Saturday and Sunday.\n *     @param {boolean} [options.week.showTimezoneCollapseButton=true] - Whether to show the timezone collapse button.\n *     @param {boolean} [options.week.timezonesCollapsed=false] - Whether to collapse the timezones.\n *     @param {number} [options.week.hourStart=0] - Start hour of the day. Available values are 0 to 24.\n *     @param {number} [options.week.hourEnd=24] - End hour of the day. Available values are 0 to 24. Must be greater than `hourStart`.\n *     @param {boolean} [options.week.narrowWeekend=false] - Whether to narrow down width of weekends to half.\n *     @param {boolean|Array.<string>} [options.week.eventView=true] - Determine which view to display events. Available values are 'allday' and 'time'. set to `false` to disable event view.\n *     @param {boolean|Array.<string>} [options.week.taskView=true] - Determine which view to display tasks. Available values are 'milestone' and 'task'. set to `false` to disable task view.\n *     @param {boolean|object} [options.week.collapseDuplicateEvents=false] - Whether to collapse duplicate events. If you want to filter duplicate events and choose the main event based on your requirements, set `getDuplicateEvents` and `getMainEvent`. For more information, see {@link https://github.com/nhn/tui.calendar/blob/main/docs/en/apis/options.md#weekcollapseduplicateevents|Options} in guide.\n *   @param {object} options.month - Month option of the calendar instance.\n *     @param {number} [options.month.startDayOfWeek=0] - Start day of the week. Available values are 0 (Sunday) to 6 (Saturday).\n *     @param {Array.<string>} [options.month.dayNames] - Names of days of the week. Should be 7 items starting from Sunday to Saturday. If not specified, the default names are used.\n *                                                Default values are ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].\n *     @param {boolean} [options.month.workweek=false] - Whether to exclude Saturday and Sunday.\n *     @param {boolean} [options.month.narrowWeekend=false] - Whether to narrow down width of weekends to half.\n *     @param {number} [options.month.visibleWeeksCount=0] - Number of weeks to display. 0 means display all weeks.\n *   @param {Array.<CalendarInfo>} [options.calendars] - Calendars to group events.\n *   @param {boolean|object} [options.gridSelection=true] - Whether to enable grid selection. or it's option. it's enabled when the value is `true` and object and will be disabled when `isReadOnly` is true.\n *     @param {boolean} options.gridSelection.enableDbClick - Whether to enable double click to select area.\n *     @param {boolean} options.gridSelection.enableClick - Whether to enable click to select area.\n *   @param {TimezoneOptions} options.timezone - Timezone option of the calendar instance. For more information about timezone, check out the {@link https://github.com/nhn/tui.calendar/blob/main/docs/en/apis/options.md|Options} in guide.\n *   @param {Theme} options.theme - Theme option of the calendar instance. For more information, see {@link https://github.com/nhn/tui.calendar/blob/main/docs/en/apis/theme.md|Theme} in guide.\n *   @param {TemplateConfig} options.template - Template option of the calendar instance. For more information, see {@link https://github.com/nhn/tui.calendar/blob/main/docs/en/apis/template.md|Template} in guide.\n */\nexport default abstract class CalendarCore\n  implements EventBus<ExternalEventTypes & InternalEventTypes>\n{\n  protected container: Element | null;\n\n  /**\n   * start and end date of weekly, monthly\n   * @private\n   */\n  protected renderRange: {\n    start: TZDate;\n    end: TZDate;\n  };\n\n  protected eventBus: EventBus<ExternalEventTypes & InternalEventTypes>;\n\n  protected theme: InternalStoreAPI<ThemeStore>;\n\n  protected store: InternalStoreAPI<CalendarStore>;\n\n  constructor(container: string | Element, options: Options = {}) {\n    // NOTE: Handling server side rendering. When container is not specified,\n    this.container = isString(container) ? document?.querySelector(container) ?? null : container;\n\n    this.theme = initThemeStore(options.theme);\n    this.eventBus = new EventBusImpl<ExternalEventTypes & InternalEventTypes>();\n    this.store = initCalendarStore(options);\n\n    this.renderRange = this.calculateRenderRange(toStartOfDay());\n\n    addAttributeHooks();\n\n    // NOTE: To make sure the user really wants to do this. Ignore any invalid values.\n    if (this.getStoreState().options.usageStatistics === true) {\n      sendHostname('calendar', GA_TRACKING_ID);\n    }\n  }\n\n  protected abstract getComponent(): ComponentChild;\n\n  protected getStoreState(): CalendarState;\n\n  protected getStoreState<Group extends keyof CalendarState>(group: Group): CalendarState[Group];\n\n  protected getStoreState<Group extends keyof CalendarState>(group?: Group) {\n    const state = this.store.getState();\n\n    return group ? state[group] : state;\n  }\n\n  protected getStoreDispatchers(): Dispatchers;\n\n  protected getStoreDispatchers<Group extends keyof Dispatchers>(group: Group): Dispatchers[Group];\n\n  protected getStoreDispatchers<Group extends keyof Dispatchers>(group?: Group) {\n    const dispatchers = this.store.getState().dispatch;\n\n    return group ? dispatchers[group] : dispatchers;\n  }\n\n  /**\n   * Destroys the instance.\n   */\n  destroy() {\n    if (this.container) {\n      unmountComponentAtNode(this.container);\n    }\n\n    this.store.clearListeners();\n    this.theme.clearListeners();\n    this.eventBus.off();\n    removeAttributeHooks();\n\n    for (const key in this) {\n      if (this.hasOwnProperty(key)) {\n        delete this[key];\n      }\n    }\n  }\n\n  private calculateMonthRenderDate({\n    renderDate,\n    offset,\n    monthOptions,\n  }: {\n    renderDate: TZDate;\n    offset: number;\n    monthOptions: CalendarMonthOptions;\n  }) {\n    let newRenderDate = new TZDate(renderDate);\n    const { visibleWeeksCount } = monthOptions;\n\n    if (visibleWeeksCount > 0) {\n      newRenderDate = addDate(newRenderDate, offset * 7 * visibleWeeksCount);\n    } else {\n      newRenderDate = addMonths(newRenderDate, offset);\n    }\n    const dateMatrix = createDateMatrixOfMonth(newRenderDate, monthOptions);\n\n    const [[start]] = dateMatrix;\n    const end = last(last(dateMatrix));\n\n    return {\n      renderDate: newRenderDate,\n      renderRange: { start, end },\n    };\n  }\n\n  private calculateWeekRenderDate({\n    renderDate,\n    offset,\n    weekOptions,\n  }: {\n    renderDate: TZDate;\n    offset: number;\n    weekOptions: CalendarWeekOptions;\n  }) {\n    const newRenderDate = new TZDate(renderDate);\n    newRenderDate.addDate(offset * 7);\n    const weekDates = getWeekDates(newRenderDate, weekOptions);\n\n    const [start] = weekDates;\n    const end = last(weekDates);\n\n    return {\n      renderDate: newRenderDate,\n      renderRange: { start, end },\n    };\n  }\n\n  private calculateDayRenderDate({ renderDate, offset }: { renderDate: TZDate; offset: number }) {\n    const newRenderDate = new TZDate(renderDate);\n    newRenderDate.addDate(offset);\n\n    const start = toStartOfDay(newRenderDate);\n    const end = toEndOfDay(newRenderDate);\n\n    return {\n      renderDate: newRenderDate,\n      renderRange: { start, end },\n    };\n  }\n\n  /**\n   * Move the rendered date to the next/prev range.\n   *\n   * The range of movement differs depending on the current view, Basically:\n   *   - In month view, it moves to the next/prev month.\n   *   - In week view, it moves to the next/prev week.\n   *   - In day view, it moves to the next/prev day.\n   *\n   * Also, the range depends on the options like how many visible weeks/months should be rendered.\n   *\n   * @param {number} offset The offset to move by.\n   *\n   * @example\n   * // Move to the next month in month view.\n   * calendar.move(1);\n   *\n   * // Move to the next year in month view.\n   * calendar.move(12);\n   *\n   * // Move to yesterday in day view.\n   * calendar.move(-1);\n   */\n  move(offset: number) {\n    if (isNil(offset)) {\n      return;\n    }\n\n    const { currentView, renderDate } = this.getStoreState().view;\n    const { options } = this.getStoreState();\n    const { setRenderDate } = this.getStoreDispatchers().view;\n\n    const newRenderDate = new TZDate(renderDate);\n\n    let calculatedRenderDate = {\n      renderDate: newRenderDate,\n      renderRange: { start: new TZDate(newRenderDate), end: new TZDate(newRenderDate) },\n    };\n\n    if (currentView === 'month') {\n      calculatedRenderDate = this.calculateMonthRenderDate({\n        renderDate,\n        offset,\n        monthOptions: options.month as CalendarMonthOptions,\n      });\n    } else if (currentView === 'week') {\n      calculatedRenderDate = this.calculateWeekRenderDate({\n        renderDate,\n        offset,\n        weekOptions: options.week as CalendarWeekOptions,\n      });\n    } else if (currentView === 'day') {\n      calculatedRenderDate = this.calculateDayRenderDate({ renderDate, offset });\n    }\n\n    setRenderDate(calculatedRenderDate.renderDate);\n    this.renderRange = calculatedRenderDate.renderRange;\n  }\n\n  /**********\n   * CRUD Methods\n   **********/\n\n  /**\n   * Create events and render calendar.\n   * @param {Array.<EventObject>} events - list of {@link EventObject}\n   * @example\n   * calendar.createEvents([\n   *   {\n   *     id: '1',\n   *     calendarId: '1',\n   *     title: 'my event',\n   *     category: 'time',\n   *     dueDateClass: '',\n   *     start: '2018-01-18T22:30:00+09:00',\n   *     end: '2018-01-19T02:30:00+09:00',\n   *   },\n   *   {\n   *     id: '2',\n   *     calendarId: '1',\n   *     title: 'second event',\n   *     category: 'time',\n   *     dueDateClass: '',\n   *     start: '2018-01-18T17:30:00+09:00',\n   *     end: '2018-01-19T17:31:00+09:00',\n   *   },\n   * ]);\n   */\n  createEvents(events: EventObject[]) {\n    const { createEvents } = this.getStoreDispatchers('calendar');\n\n    createEvents(events);\n  }\n\n  protected getEventModel(eventId: string, calendarId: string) {\n    const { events } = this.getStoreState('calendar');\n\n    return events.find(\n      ({ id, calendarId: eventCalendarId }) => id === eventId && eventCalendarId === calendarId\n    );\n  }\n\n  /**\n   * Get an {@link EventObject} with event's id and calendar's id.\n   *\n   * @param {string} eventId - event's id\n   * @param {string} calendarId - calendar's id of the event\n   * @returns {EventObject|null} event. If the event can't be found, it returns null.\n   *\n   * @example\n   * const event = calendar.getEvent(eventId, calendarId);\n   *\n   * console.log(event.title);\n   */\n  getEvent(eventId: string, calendarId: string) {\n    return this.getEventModel(eventId, calendarId)?.toEventObject() ?? null;\n  }\n\n  /**\n   * Update an event.\n   *\n   * @param {string} eventId - ID of an event to update\n   * @param {string} calendarId - The calendarId of the event to update\n   * @param {EventObject} changes - The new {@link EventObject} data to apply to the event\n   *\n   * @example\n   * calendar.on('beforeUpdateEvent', function ({ event, changes }) {\n   *   const { id, calendarId } = event;\n   *\n   *   calendar.updateEvent(id, calendarId, changes);\n   * });\n   */\n  updateEvent(eventId: string, calendarId: string, changes: EventObject) {\n    const { updateEvent } = this.getStoreDispatchers('calendar');\n    const event = this.getEventModel(eventId, calendarId);\n\n    if (event) {\n      updateEvent({ event, eventData: changes });\n    }\n  }\n\n  /**\n   * Delete an event.\n   *\n   * @param {string} eventId - event's id to delete\n   * @param {string} calendarId - The CalendarId of the event to delete\n   */\n  deleteEvent(eventId: string, calendarId: string) {\n    const { deleteEvent } = this.getStoreDispatchers('calendar');\n    const event = this.getEventModel(eventId, calendarId);\n\n    if (event) {\n      deleteEvent(event);\n    }\n  }\n\n  /**********\n   * General Methods\n   **********/\n\n  /**\n   * Set events' visibility by calendar ID\n   *\n   * @param {string|Array.<string>} calendarId - The calendar id or ids to change visibility\n   * @param {boolean} isVisible - If set to true, show the events. If set to false, hide the events.\n   */\n  setCalendarVisibility(calendarId: string | string[], isVisible: boolean) {\n    const { setCalendarVisibility } = this.getStoreDispatchers('calendar');\n    const calendarIds = Array.isArray(calendarId) ? calendarId : [calendarId];\n\n    setCalendarVisibility(calendarIds, isVisible);\n  }\n\n  /**\n   * Render the calendar.\n   *\n   * @example\n   * calendar.render();\n   *\n   * @example\n   * // Re-render the calendar when resizing a window.\n   * window.addEventListener('resize', () => {\n   *   calendar.render();\n   * });\n   */\n  render() {\n    if (isPresent(this.container)) {\n      render(\n        <CalendarContainer theme={this.theme} store={this.store} eventBus={this.eventBus}>\n          {this.getComponent()}\n        </CalendarContainer>,\n        this.container\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * For SSR(Server Side Rendering), Return the HTML string of the whole calendar.\n   *\n   * @returns {string} HTML string\n   */\n  renderToString(): string {\n    return renderToString(\n      <CalendarContainer theme={this.theme} store={this.store} eventBus={this.eventBus}>\n        {this.getComponent()}\n      </CalendarContainer>\n    );\n  }\n\n  /**\n   * Delete all events and clear view\n   *\n   * @example\n   * calendar.clear();\n   */\n  clear() {\n    const { clearEvents } = this.getStoreDispatchers('calendar');\n\n    clearEvents();\n  }\n\n  /**\n   * Scroll to current time on today in case of daily, weekly view.\n   * Nothing happens in the monthly view.\n   *\n   * @example\n   * function onNewEvents(events) {\n   *   calendar.createEvents(events);\n   *   calendar.scrollToNow('smooth');\n   * }\n   */\n  scrollToNow(scrollBehavior: ScrollBehaviorOptions = 'auto') {\n    this.eventBus.fire('scrollToNow', scrollBehavior);\n  }\n\n  private calculateRenderRange(renderDate: TZDate) {\n    const { currentView } = this.getStoreState().view;\n    const { options } = this.getStoreState();\n\n    const newRenderDate = new TZDate(renderDate);\n\n    let newRenderRange = { start: new TZDate(newRenderDate), end: new TZDate(newRenderDate) };\n\n    if (currentView === 'month') {\n      newRenderRange = this.calculateMonthRenderDate({\n        renderDate,\n        offset: 0,\n        monthOptions: options.month as CalendarMonthOptions,\n      }).renderRange;\n    } else if (currentView === 'week') {\n      newRenderRange = this.calculateWeekRenderDate({\n        renderDate,\n        offset: 0,\n        weekOptions: options.week as CalendarWeekOptions,\n      }).renderRange;\n    } else if (currentView === 'day') {\n      newRenderRange = this.calculateDayRenderDate({ renderDate, offset: 0 }).renderRange;\n    }\n\n    return newRenderRange;\n  }\n\n  /**\n   * Move to today.\n   *\n   * @example\n   * function onClickTodayBtn() {\n   *   calendar.today();\n   * }\n   */\n  today() {\n    const { setRenderDate } = this.getStoreDispatchers().view;\n    const today = new TZDate();\n\n    setRenderDate(today);\n    this.renderRange = this.calculateRenderRange(today);\n  }\n\n  /**\n   * Move to specific date.\n   *\n   * @param {Date|string|number|TZDate} date - The date to move. it should be eligible parameter to create a `Date` instance if `date` is string or number.\n   * @example\n   * calendar.on('clickDayName', (event) => {\n   *   if (calendar.getViewName() === 'week') {\n   *     const dateToMove = new Date(event.date);\n   *\n   *     calendar.setDate(dateToMove);\n   *     calendar.changeView('day');\n   *   }\n   * });\n   */\n  setDate(date: DateType) {\n    const { setRenderDate } = this.getStoreDispatchers('view');\n    const dateToChange = new TZDate(date);\n\n    setRenderDate(dateToChange);\n    this.renderRange = this.calculateRenderRange(dateToChange);\n  }\n\n  /**\n   * Move the calendar forward to the next range.\n   *\n   * @example\n   * function moveToNextOrPrevRange(offset) {\n   *   if (offset === -1) {\n   *     calendar.prev();\n   *   } else if (offset === 1) {\n   *     calendar.next();\n   *   }\n   * }\n   */\n  next() {\n    this.move(1);\n  }\n\n  /**\n   * Move the calendar backward to the previous range.\n   *\n   * @example\n   * function moveToNextOrPrevRange(offset) {\n   *   if (offset === -1) {\n   *     calendar.prev();\n   *   } else if (offset === 1) {\n   *     calendar.next();\n   *   }\n   * }\n   */\n  prev() {\n    this.move(-1);\n  }\n\n  /**\n   * Change color values of events belong to a certain calendar.\n   *\n   * @param {string} calendarId - The calendar ID\n   * @param {object} colorOptions - The color values of the calendar\n   *   @param {string} colorOptions.color - The text color of the events\n   *   @param {string} colorOptions.borderColor - Left border color of events\n   *   @param {string} colorOptions.backgroundColor - Background color of events\n   *   @param {string} colorOptions.dragBackgroundColor - Background color of events during dragging\n   *\n   * @example\n   * calendar.setCalendarColor('1', {\n   *     color: '#e8e8e8',\n   *     backgroundColor: '#585858',\n   *     borderColor: '#a1b56c',\n   *     dragBackgroundColor: '#585858',\n   * });\n   * calendar.setCalendarColor('2', {\n   *     color: '#282828',\n   *     backgroundColor: '#dc9656',\n   *     borderColor: '#a1b56c',\n   *     dragBackgroundColor: '#dc9656',\n   * });\n   * calendar.setCalendarColor('3', {\n   *     color: '#a16946',\n   *     backgroundColor: '#ab4642',\n   *     borderColor: '#a1b56c',\n   *     dragBackgroundColor: '#ab4642',\n   * });\n   */\n  setCalendarColor(calendarId: string, colorOptions: CalendarColor) {\n    const { setCalendarColor } = this.getStoreDispatchers().calendar;\n\n    setCalendarColor(calendarId, colorOptions);\n  }\n\n  /**\n   * Change current view type.\n   *\n   * @param {string} viewName - The new view name to change to. Available values are 'month', 'week', 'day'.\n   *\n   * @example\n   * // change to daily view\n   * calendar.changeView('day');\n   *\n   * // change to weekly view\n   * calendar.changeView('week');\n   *\n   * // change to monthly view\n   * calendar.changeView('month');\n   */\n  changeView(viewName: ViewType) {\n    const { changeView } = this.getStoreDispatchers('view');\n\n    changeView(viewName);\n    this.renderRange = this.calculateRenderRange(this.getDate());\n  }\n\n  /**\n   * Get the DOM element of the event by event id and calendar id\n   *\n   * @param {string} eventId - ID of event\n   * @param {string} calendarId - calendarId of event\n   * @returns {HTMLElement} event element if found or null\n   *\n   * @example\n   * const element = calendar.getElement(eventId, calendarId);\n   *\n   * console.log(element);\n   */\n  getElement(eventId: string, calendarId: string) {\n    const event = this.getEvent(eventId, calendarId);\n\n    if (event && this.container) {\n      return this.container.querySelector(\n        `[data-event-id=\"${eventId}\"][data-calendar-id=\"${calendarId}\"]`\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Set the theme of the calendar.\n   *\n   * @param {Theme} theme - The theme object to apply. For more information, see {@link https://github.com/nhn/tui.calendar/blob/main/docs/en/apis/theme.md|Theme} in guide.\n   *\n   * @example\n   * calendar.setTheme({\n   *   common: {\n   *     gridSelection: {\n   *       backgroundColor: '#333',\n   *     },\n   *   },\n   *   week: {\n   *     nowIndicatorLabel: {\n   *       color: '#00FF00',\n   *     },\n   *   },\n   *   month: {\n   *     dayName: {\n   *       borderLeft: '1px solid #e5e5e5',\n   *     },\n   *   },\n   * });\n   */\n  setTheme(theme: DeepPartial<ThemeState>) {\n    const { setTheme } = this.theme.getState().dispatch;\n\n    setTheme(theme);\n  }\n\n  /**\n   * Get current options.\n   *\n   * @returns {Options} - The current options of the instance\n   */\n  getOptions() {\n    const { options, template } = this.getStoreState();\n    const { dispatch, ...theme } = this.theme.getState();\n\n    return {\n      ...options,\n      template,\n      theme,\n    };\n  }\n\n  /**\n   * Set options of calendar. For more information, see {@link https://github.com/nhn/tui.calendar/blob/main/docs/en/apis/options.md|Options} in guide.\n   *\n   * @param {Options} options - The options to set\n   */\n  setOptions(options: Options) {\n    // destructure options here for tui.doc to generate docs correctly\n    const { theme, template, ...restOptions } = options;\n    const { setTheme } = this.theme.getState().dispatch;\n    const {\n      options: { setOptions },\n      template: { setTemplate },\n    } = this.getStoreDispatchers();\n\n    if (isPresent(theme)) {\n      setTheme(theme);\n    }\n\n    if (isPresent(template)) {\n      setTemplate(template);\n    }\n    \n    setOptions(restOptions);\n  }\n\n  /**\n   * Get current rendered date. (see {@link TZDate} for further information)\n   *\n   * @returns {TZDate}\n   */\n  getDate(): TZDate {\n    const { renderDate } = this.getStoreState().view;\n\n    return renderDate;\n  }\n\n  /**\n   * Start time of rendered date range. (see {@link TZDate} for further information)\n   *\n   * @returns {TZDate}\n   */\n  getDateRangeStart() {\n    return this.renderRange.start;\n  }\n\n  /**\n   * End time of rendered date range. (see {@link TZDate} for further information)\n   *\n   * @returns {TZDate}\n   */\n  getDateRangeEnd() {\n    return this.renderRange.end;\n  }\n\n  /**\n   * Get current view name('day', 'week', 'month').\n   *\n   * @returns {string} current view name ('day', 'week', 'month')\n   */\n  getViewName(): ViewType {\n    const { currentView } = this.getStoreState('view');\n\n    return currentView;\n  }\n\n  /**\n   * Set calendar list.\n   *\n   * @param {CalendarInfo[]} calendars - list of calendars\n   */\n  setCalendars(calendars: CalendarInfo[]) {\n    const { setCalendars } = this.getStoreDispatchers().calendar;\n\n    setCalendars(calendars);\n  }\n\n  // TODO: specify position of popup\n  /**\n   * Open event form popup with predefined form values.\n   *\n   * @param {EventObject} event - The predefined {@link EventObject} data to show in form.\n   */\n  openFormPopup(event: EventObject) {\n    const { showFormPopup } = this.getStoreDispatchers().popup;\n\n    const eventModel = new EventModel(event);\n    const { title, location, start, end, isAllday, isPrivate, state: eventState } = eventModel;\n\n    showFormPopup({\n      isCreationPopup: true,\n      event: eventModel,\n      title,\n      location,\n      start,\n      end,\n      isAllday,\n      isPrivate,\n      eventState,\n    });\n  }\n\n  clearGridSelections() {\n    const { clearAll } = this.getStoreDispatchers().gridSelection;\n\n    clearAll();\n  }\n\n  fire<EventName extends keyof ExternalEventTypes>(\n    eventName: EventName,\n    ...args: Parameters<ExternalEventTypes[EventName]>\n  ): EventBus<ExternalEventTypes> {\n    this.eventBus.fire(eventName, ...args);\n\n    return this;\n  }\n\n  off<EventName extends keyof ExternalEventTypes>(\n    eventName?: EventName,\n    handler?: ExternalEventTypes[EventName]\n  ): EventBus<ExternalEventTypes> {\n    this.eventBus.off(eventName, handler);\n\n    return this;\n  }\n\n  on<EventName extends keyof ExternalEventTypes>(\n    eventName: EventName,\n    handler: ExternalEventTypes[EventName]\n  ): EventBus<ExternalEventTypes> {\n    this.eventBus.on(eventName, handler);\n\n    return this;\n  }\n\n  once<EventName extends keyof ExternalEventTypes>(\n    eventName: EventName,\n    handler: ExternalEventTypes[EventName]\n  ): EventBus<ExternalEventTypes> {\n    this.eventBus.once(eventName, handler);\n\n    return this;\n  }\n}\n","import { DEFAULT_EVENT_COLORS } from '@src/constants/style';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { isString } from '@src/utils/type';\n\nimport type { CalendarColor } from '@t/options';\n\nexport const CSS_PREFIX = 'toastui-calendar-';\n\ninterface ClassNameDictionary {\n  [id: string]: boolean | undefined | null;\n}\n\ntype ClassNameValue = string | ClassNameDictionary | undefined | null;\n\nexport function cls(...args: ClassNameValue[]): string {\n  const result: string[] = [];\n\n  args.forEach((arg) => {\n    if (!arg) {\n      return;\n    }\n\n    if (isString(arg)) {\n      result.push(arg);\n    } else {\n      Object.keys(arg).forEach((className) => {\n        if (arg[className]) {\n          result.push(className);\n        }\n      });\n    }\n  });\n\n  return result.map((str: string) => `${CSS_PREFIX}${str}`).join(' ');\n}\n\nexport function toPercent(value: number) {\n  return `${value}%`;\n}\n\nexport function toPx(value: number) {\n  return `${value}px`;\n}\n\n/**\n * ex)\n * extractPercentPx('calc(100% - 22px)') // { percent: 100, px: -22 }\n * extractPercentPx('100%') // { percent: 100, px: 0 }\n * extractPercentPx('-22px') // { percent: 0, px: -22 }\n */\nexport function extractPercentPx(value: string) {\n  const percentRegexp = /(\\d+)%/;\n  const percentResult = value.match(percentRegexp);\n  const pxRegexp = /(-?)\\s?(\\d+)px/;\n  const pxResult = value.match(pxRegexp);\n\n  return {\n    percent: percentResult ? parseInt(percentResult[1], 10) : 0,\n    px: pxResult ? parseInt(`${pxResult[1]}${pxResult[2]}`, 10) : 0,\n  };\n}\n\nexport function getEventColors(uiModel: EventUIModel, calendarColor: CalendarColor) {\n  const eventColors = uiModel.model.getColors();\n\n  return Object.keys(DEFAULT_EVENT_COLORS).reduce<CalendarColor>((colors, _key) => {\n    const key = _key as keyof CalendarColor;\n    colors[key] = eventColors[key] ?? calendarColor[key] ?? DEFAULT_EVENT_COLORS[key];\n\n    return colors;\n  }, {});\n}\n","import type TZDate from '@src/time/date';\nimport { capitalize } from '@src/utils/string';\n\nimport type { WeekOptions } from '@t/options';\nimport type { TemplateWeekDayName } from '@t/template';\n\nexport const DEFAULT_DAY_NAMES = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n\nexport const getDayName = (dayIndex: number) => {\n  return DEFAULT_DAY_NAMES[dayIndex];\n};\n\nexport function getDayNames(\n  days: TZDate[],\n  weekDayNamesOption: Required<WeekOptions>['dayNames'] | []\n) {\n  return days.map<TemplateWeekDayName>((day) => {\n    const dayIndex = day.getDay();\n    const dayName =\n      weekDayNamesOption.length > 0\n        ? weekDayNamesOption[dayIndex]\n        : capitalize(getDayName(dayIndex));\n\n    return {\n      date: day.getDate(),\n      day: day.getDay(),\n      dayName,\n      isToday: true,\n      renderDate: 'date',\n      dateInstance: day,\n    };\n  });\n}\n","import type { GridSelectionType } from '@src/slices/gridSelection';\n\nimport type { DraggingTypes, EventDraggingArea } from '@t/drag';\n\nexport const DRAGGING_TYPE_CONSTANTS: {\n  [K in Extract<DraggingTypes, 'panelResizer'>]: DraggingTypes;\n} = {\n  panelResizer: 'panelResizer',\n};\n\nexport const DRAGGING_TYPE_CREATORS = {\n  resizeEvent: (area: EventDraggingArea, id: string) => `event/${area}/resize/${id}` as const,\n  moveEvent: (area: EventDraggingArea, id: string) => `event/${area}/move/${id}` as const,\n  gridSelection: (type: GridSelectionType) => `gridSelection/${type}` as const,\n};\n","import type EventModel from '@src/model/eventModel';\nimport { millisecondsFrom, MS_EVENT_MIN_DURATION } from '@src/time/datetime';\n\ntype CollisionParam = {\n  start: number;\n  end: number;\n  targetStart: number;\n  targetEnd: number;\n  goingDuration: number;\n  comingDuration: number;\n  targetGoingDuration: number;\n  targetComingDuration: number;\n  usingTravelTime: boolean;\n};\n\nfunction hasCollision(start: number, end: number, targetStart: number, targetEnd: number) {\n  return (\n    (targetStart > start && targetStart < end) ||\n    (targetEnd > start && targetEnd < end) ||\n    (targetStart <= start && targetEnd >= end)\n  );\n}\n\nexport function collidesWith({\n  start,\n  end,\n  targetStart,\n  targetEnd,\n  goingDuration,\n  comingDuration,\n  targetGoingDuration,\n  targetComingDuration,\n  usingTravelTime,\n}: CollisionParam) {\n  if (Math.abs(end - start) < MS_EVENT_MIN_DURATION) {\n    end += MS_EVENT_MIN_DURATION;\n  }\n\n  if (Math.abs(end - start) < MS_EVENT_MIN_DURATION) {\n    end += MS_EVENT_MIN_DURATION;\n  }\n\n  if (usingTravelTime) {\n    start -= millisecondsFrom('minute', goingDuration);\n    end += millisecondsFrom('minute', comingDuration);\n    targetStart -= millisecondsFrom('minute', targetGoingDuration);\n    targetEnd += millisecondsFrom('minute', targetComingDuration);\n  }\n\n  return hasCollision(start, end, targetStart, targetEnd);\n}\n\nexport function isSameEvent(event: EventModel, eventId: string, calendarId: string) {\n  return event.id === eventId && event.calendarId === calendarId;\n}\n\nexport function isVisibleEvent(event: EventModel) {\n  return event.isVisible;\n}\n","import range from 'tui-code-snippet/array/range';\n\nimport { DEFAULT_VISIBLE_WEEKS } from '@src/constants/grid';\nimport { findByDateRange } from '@src/controller/month';\nimport { findByDateRange as findByDateRangeForWeek } from '@src/controller/week';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport TZDate from '@src/time/date';\nimport {\n  addDate,\n  Day,\n  getDateDifference,\n  isWeekend,\n  subtractDate,\n  toEndOfDay,\n  toEndOfMonth,\n  toStartOfDay,\n  toStartOfMonth,\n  WEEK_DAYS,\n} from '@src/time/datetime';\nimport { findLastIndex } from '@src/utils/array';\nimport { limit, ratio } from '@src/utils/math';\nimport { isNil } from '@src/utils/type';\n\nimport type {\n  CalendarData,\n  DayGridEventMatrix,\n  EventModelMap,\n  Matrix3d,\n  TimeGridEventMatrix,\n} from '@t/events';\nimport type { CommonGridColumn, GridPositionFinder, TimeGridData } from '@t/grid';\nimport type { ClientMousePosition } from '@t/mouse';\nimport type { MonthOptions, WeekOptions } from '@t/options';\nimport type { Panel } from '@t/panel';\nimport type { FormattedTimeString } from '@t/time/datetime';\n\nexport const EVENT_HEIGHT = 22;\nexport const TOTAL_WIDTH = 100;\n\nfunction forEachMatrix3d<T>(matrices: Matrix3d<T>, iteratee: (target: T, index?: number) => void) {\n  matrices.forEach((matrix) => {\n    matrix.forEach((row) => {\n      row.forEach((value, index) => {\n        iteratee(value, index);\n      });\n    });\n  });\n}\n\nexport function isWithinHeight(containerHeight: number, eventHeight: number) {\n  return ({ top }: EventUIModel) => containerHeight >= top * eventHeight;\n}\n\nexport function isExceededHeight(containerHeight: number, eventHeight: number) {\n  return ({ top }: EventUIModel) => containerHeight < top * eventHeight;\n}\n\nexport function getExceedCount(\n  uiModel: EventUIModel[],\n  containerHeight: number,\n  eventHeight: number\n) {\n  return uiModel.filter(isExceededHeight(containerHeight, eventHeight)).length;\n}\n\nconst getWeekendCount = (row: TZDate[]) => row.filter((cell) => isWeekend(cell.getDay())).length;\n\nexport function getGridWidthAndLeftPercentValues(\n  row: TZDate[],\n  narrowWeekend: boolean,\n  totalWidth: number\n) {\n  const weekendCount = getWeekendCount(row);\n  const gridCellCount = row.length;\n  const isAllWeekend = weekendCount === gridCellCount;\n  const widthPerDay =\n    totalWidth /\n    (narrowWeekend && !isAllWeekend ? gridCellCount * 2 - weekendCount : gridCellCount);\n\n  const widthList: number[] = row.map((cell) => {\n    const day = cell.getDay();\n\n    if (!narrowWeekend || isAllWeekend) {\n      return widthPerDay;\n    }\n\n    return isWeekend(day) ? widthPerDay : widthPerDay * 2;\n  });\n\n  const leftList = widthList.reduce<number[]>(\n    (acc, _, index) => (index ? [...acc, acc[index - 1] + widthList[index - 1]] : [0]),\n    []\n  );\n\n  return {\n    widthList,\n    leftList,\n  };\n}\n\nexport function getWidth(widthList: number[], start: number, end: number) {\n  return widthList.reduce((acc, width, index) => {\n    if (start <= index && index <= end) {\n      return acc + width;\n    }\n\n    return acc;\n  }, 0);\n}\n\nexport const isInGrid = (gridDate: TZDate) => {\n  return (uiModel: EventUIModel) => {\n    const eventStart = toStartOfDay(uiModel.getStarts());\n    const eventEnd = toStartOfDay(uiModel.getEnds());\n\n    return eventStart <= gridDate && gridDate <= eventEnd;\n  };\n};\n\nexport function getGridDateIndex(date: TZDate, row: TZDate[]) {\n  return row.findIndex((cell) => date >= toStartOfDay(cell) && date <= toEndOfDay(cell));\n}\n\nexport const getLeftAndWidth = (\n  startIndex: number,\n  endIndex: number,\n  row: TZDate[],\n  narrowWeekend: boolean\n) => {\n  const { widthList } = getGridWidthAndLeftPercentValues(row, narrowWeekend, TOTAL_WIDTH);\n\n  return {\n    left: !startIndex ? 0 : getWidth(widthList, 0, startIndex - 1),\n    width: getWidth(widthList, startIndex ?? 0, endIndex < 0 ? row.length - 1 : endIndex),\n  };\n};\n\nexport const getEventLeftAndWidth = (\n  start: TZDate,\n  end: TZDate,\n  row: TZDate[],\n  narrowWeekend: boolean\n) => {\n  const { widthList } = getGridWidthAndLeftPercentValues(row, narrowWeekend, TOTAL_WIDTH);\n\n  let gridStartIndex = 0;\n  let gridEndIndex = row.length - 1;\n\n  row.forEach((cell, index) => {\n    if (cell <= start) {\n      gridStartIndex = index;\n    }\n    if (cell <= end) {\n      gridEndIndex = index;\n    }\n  });\n\n  return {\n    width: getWidth(widthList, gridStartIndex, gridEndIndex),\n    left: !gridStartIndex ? 0 : getWidth(widthList, 0, gridStartIndex - 1),\n  };\n};\n\nfunction getEventUIModelWithPosition(\n  uiModel: EventUIModel,\n  row: TZDate[],\n  narrowWeekend = false\n): EventUIModel {\n  const modelStart = uiModel.getStarts();\n  const modelEnd = uiModel.getEnds();\n  const { width, left } = getEventLeftAndWidth(modelStart, modelEnd, row, narrowWeekend);\n\n  uiModel.width = width;\n  uiModel.left = left;\n\n  return uiModel;\n}\n\nexport function getRenderedEventUIModels(\n  row: TZDate[],\n  calendarData: CalendarData,\n  narrowWeekend: boolean\n) {\n  const { idsOfDay } = calendarData;\n  const eventUIModels = findByDateRange(calendarData, {\n    start: row[0],\n    end: toEndOfDay(row[row.length - 1]),\n  });\n  const idEventModelMap: Record<number, EventUIModel> = [];\n\n  forEachMatrix3d(eventUIModels, (uiModel) => {\n    const cid = uiModel.model.cid();\n    idEventModelMap[cid] = getEventUIModelWithPosition(uiModel, row, narrowWeekend);\n  });\n\n  const gridDateEventModelMap = Object.keys(idsOfDay).reduce<Record<string, EventUIModel[]>>(\n    (acc, ymd) => {\n      const ids = idsOfDay[ymd];\n\n      acc[ymd] = ids.map((cid) => idEventModelMap[cid]).filter((vm) => !!vm);\n\n      return acc;\n    },\n    {}\n  );\n\n  return {\n    uiModels: Object.values(idEventModelMap),\n    gridDateEventModelMap,\n  };\n}\n\nconst getDayGridEventModels = (\n  eventModels: DayGridEventMatrix,\n  row: TZDate[],\n  narrowWeekend = false\n): EventUIModel[] => {\n  forEachMatrix3d(eventModels, (uiModel) => {\n    const modelStart = uiModel.getStarts();\n    const modelEnd = uiModel.getEnds();\n    const { width, left } = getEventLeftAndWidth(modelStart, modelEnd, row, narrowWeekend);\n\n    uiModel.width = width;\n    uiModel.left = left;\n    uiModel.top += 1;\n  });\n\n  return flattenMatrix3d(eventModels);\n};\n\nconst getModels = (models: EventUIModel[]) => models.filter((model) => !!model);\n\nfunction flattenMatrix3d(matrices: DayGridEventMatrix): EventUIModel[] {\n  return matrices.flatMap((matrix) => matrix.flatMap((models) => getModels(models)));\n}\n\n// TODO: Check it works well when the `narrowWeekend` option is true\nconst getTimeGridEventModels = (eventMatrix: TimeGridEventMatrix): EventUIModel[] =>\n  // NOTE: there are same ui models in different rows. so we need to get unique ui models.\n  Array.from(\n    new Set(\n      Object.values(eventMatrix).reduce<EventUIModel[]>(\n        (result, matrix3d) => result.concat(...flattenMatrix3d(matrix3d)),\n        []\n      )\n    )\n  );\n\nexport const getWeekViewEvents = (\n  row: TZDate[],\n  calendarData: CalendarData,\n  {\n    narrowWeekend,\n    hourStart,\n    hourEnd,\n    weekStartDate,\n    weekEndDate,\n  }: WeekOptions & {\n    weekStartDate: TZDate;\n    weekEndDate: TZDate;\n  }\n): EventModelMap => {\n  const panels: Panel[] = [\n    {\n      name: 'milestone',\n      type: 'daygrid',\n      show: true,\n    },\n    {\n      name: 'task',\n      type: 'daygrid',\n      show: true,\n    },\n    {\n      name: 'allday',\n      type: 'daygrid',\n      show: true,\n    },\n    {\n      name: 'time',\n      type: 'timegrid',\n      show: true,\n    },\n  ];\n  const eventModels = findByDateRangeForWeek(calendarData, {\n    start: weekStartDate,\n    end: weekEndDate,\n    panels,\n    andFilters: [],\n    options: {\n      hourStart,\n      hourEnd,\n    },\n  });\n\n  return Object.keys(eventModels).reduce<EventModelMap>(\n    (acc, cur) => {\n      const events = eventModels[cur as keyof EventModelMap];\n\n      return {\n        ...acc,\n        [cur]: Array.isArray(events)\n          ? getDayGridEventModels(events, row, narrowWeekend)\n          : getTimeGridEventModels(events),\n      };\n    },\n    {\n      milestone: [],\n      allday: [],\n      task: [],\n      time: [],\n    }\n  );\n};\n\nexport function createDateMatrixOfMonth(\n  renderTargetDate: Date | TZDate,\n  {\n    workweek = false,\n    visibleWeeksCount = 0,\n    startDayOfWeek = 0,\n    isAlways6Weeks = true,\n  }: MonthOptions\n) {\n  const targetDate = new TZDate(renderTargetDate);\n  const shouldApplyVisibleWeeksCount = visibleWeeksCount > 0;\n  const baseDate = shouldApplyVisibleWeeksCount ? targetDate : toStartOfMonth(targetDate);\n  const firstDateOfMatrix = subtractDate(\n    baseDate,\n    baseDate.getDay() - startDayOfWeek + (baseDate.getDay() < startDayOfWeek ? WEEK_DAYS : 0)\n  );\n  const dayOfFirstDateOfMatrix = firstDateOfMatrix.getDay();\n\n  const totalDatesCountOfMonth = toEndOfMonth(targetDate).getDate();\n  const initialDifference = getDateDifference(firstDateOfMatrix, baseDate);\n  const totalDatesOfMatrix = totalDatesCountOfMonth + Math.abs(initialDifference);\n\n  let totalWeeksOfMatrix = DEFAULT_VISIBLE_WEEKS;\n  if (shouldApplyVisibleWeeksCount) {\n    totalWeeksOfMatrix = visibleWeeksCount;\n  } else if (isAlways6Weeks === false) {\n    totalWeeksOfMatrix = Math.ceil(totalDatesOfMatrix / WEEK_DAYS);\n  }\n\n  return range(0, totalWeeksOfMatrix).map((weekIndex) =>\n    range(0, WEEK_DAYS).reduce((weekRow, dayOfWeek) => {\n      const steps = weekIndex * WEEK_DAYS + dayOfWeek;\n      const currentDay = (steps + dayOfFirstDateOfMatrix) % WEEK_DAYS;\n      if (!workweek || (workweek && !isWeekend(currentDay))) {\n        const date = addDate(firstDateOfMatrix, steps);\n        weekRow.push(date);\n      }\n\n      return weekRow;\n    }, [] as TZDate[])\n  );\n}\n\nexport function getWeekDates(\n  renderDate: TZDate,\n  { startDayOfWeek = Day.SUN, workweek }: WeekOptions\n): TZDate[] {\n  const now = toStartOfDay(renderDate);\n  const nowDay = now.getDay();\n  const prevDateCount = nowDay - startDayOfWeek;\n\n  const weekDayList =\n    prevDateCount >= 0\n      ? range(-prevDateCount, WEEK_DAYS - prevDateCount)\n      : range(-WEEK_DAYS - prevDateCount, -prevDateCount);\n\n  return weekDayList.reduce<TZDate[]>((acc, day) => {\n    const date = addDate(now, day);\n\n    if (workweek && isWeekend(date.getDay())) {\n      return acc;\n    }\n    acc.push(date);\n\n    return acc;\n  }, []);\n}\n\n// @TODO: replace `getRowStyleInfo` to this function\nexport function getColumnsData(\n  datesOfWeek: TZDate[], // 5 or 7 dates\n  narrowWeekend = false\n): CommonGridColumn[] {\n  const datesCount = datesOfWeek.length;\n  const shouldApplyNarrowWeekend = datesCount > 5 && narrowWeekend;\n  const defaultWidthByColumns = shouldApplyNarrowWeekend\n    ? 100 / (datesCount - 1)\n    : 100 / datesCount;\n\n  return datesOfWeek\n    .map((date) => {\n      const width =\n        shouldApplyNarrowWeekend && isWeekend(date.getDay())\n          ? defaultWidthByColumns / 2\n          : defaultWidthByColumns;\n\n      return {\n        date,\n        width,\n      };\n    })\n    .reduce<CommonGridColumn[]>((result, currentDateAndWidth, index) => {\n      const prev = result[index - 1];\n\n      result.push({\n        ...currentDateAndWidth,\n        left: index === 0 ? 0 : prev.left + prev.width,\n      });\n\n      return result;\n    }, []);\n}\n\nexport function createTimeGridData(\n  datesOfWeek: TZDate[],\n  options: {\n    hourStart: number;\n    hourEnd: number;\n    narrowWeekend?: boolean;\n  }\n): TimeGridData {\n  const columns = getColumnsData(datesOfWeek, options.narrowWeekend ?? false);\n\n  const steps = (options.hourEnd - options.hourStart) * 2;\n  const baseHeight = 100 / steps;\n  const rows = range(steps).map((step, index) => {\n    const isOdd = index % 2 === 1;\n    const hour = options.hourStart + Math.floor(step / 2);\n    const startTime = `${hour}:${isOdd ? '30' : '00'}`.padStart(5, '0') as FormattedTimeString;\n    const endTime = (isOdd ? `${hour + 1}:00` : `${hour}:30`).padStart(\n      5,\n      '0'\n    ) as FormattedTimeString;\n\n    return {\n      top: baseHeight * index,\n      height: baseHeight,\n      startTime,\n      endTime,\n    };\n  });\n\n  return {\n    columns,\n    rows,\n  };\n}\n\ninterface ContainerPosition {\n  left: number;\n  top: number;\n  clientLeft: number;\n  clientTop: number;\n}\n\nfunction getRelativeMousePosition(\n  { clientX, clientY }: ClientMousePosition,\n  { left, top, clientLeft, clientTop }: ContainerPosition\n) {\n  return [clientX - left - clientLeft, clientY - top - clientTop];\n}\n\nfunction getIndexFromPosition(arrayLength: number, maxRange: number, currentPosition: number) {\n  const calculatedIndex = Math.floor(ratio(maxRange, arrayLength, currentPosition));\n\n  return limit(calculatedIndex, [0], [arrayLength - 1]);\n}\n\nexport function createGridPositionFinder({\n  rowsCount,\n  columnsCount,\n  container,\n  narrowWeekend = false,\n  startDayOfWeek = Day.SUN,\n}: {\n  rowsCount: number;\n  columnsCount: number;\n  container: HTMLElement | null;\n  narrowWeekend?: boolean;\n  startDayOfWeek?: Day;\n}): GridPositionFinder {\n  if (isNil(container)) {\n    return (() => null) as GridPositionFinder;\n  }\n\n  const dayRange = range(startDayOfWeek, startDayOfWeek + columnsCount).map(\n    (day) => day % WEEK_DAYS\n  );\n  const narrowColumnCount = narrowWeekend ? dayRange.filter((day) => isWeekend(day)).length : 0;\n\n  return function gridPositionFinder(mousePosition) {\n    const {\n      left: containerLeft,\n      top: containerTop,\n      width: containerWidth,\n      height: containerHeight,\n    } = container.getBoundingClientRect();\n    const [left, top] = getRelativeMousePosition(mousePosition, {\n      left: containerLeft,\n      top: containerTop,\n      clientLeft: container.clientLeft,\n      clientTop: container.clientTop,\n    });\n\n    if (left < 0 || top < 0 || left > containerWidth || top > containerHeight) {\n      return null;\n    }\n\n    const unitWidth = narrowWeekend\n      ? containerWidth / (columnsCount - narrowColumnCount + 1)\n      : containerWidth / columnsCount;\n    const columnWidthList = dayRange.map((dayOfWeek) =>\n      narrowWeekend && isWeekend(dayOfWeek) ? unitWidth / 2 : unitWidth\n    );\n    const columnLeftList: number[] = [];\n    columnWidthList.forEach((width, index) => {\n      if (index === 0) {\n        columnLeftList.push(0);\n      } else {\n        columnLeftList.push(columnLeftList[index - 1] + columnWidthList[index - 1]);\n      }\n    });\n    const columnIndex = findLastIndex(columnLeftList, (columnLeft) => left >= columnLeft);\n\n    return {\n      columnIndex,\n      rowIndex: getIndexFromPosition(rowsCount, containerHeight, top),\n    };\n  };\n}\n","import type { useGridSelection } from '@src/hooks/gridSelection/useGridSelection';\nimport type TZDate from '@src/time/date';\nimport { setTimeStrToDate } from '@src/time/datetime';\nimport { isBetween, isBetween as isBetweenValue } from '@src/utils/math';\nimport { isNil, isPresent } from '@src/utils/type';\n\nimport type {\n  GridSelectionData,\n  GridSelectionDataByRow,\n  TimeGridSelectionDataByCol,\n} from '@t/components/gridSelection';\nimport type { GridPosition, TimeGridData } from '@t/grid';\n\ntype RequiredGridSelectionHookParams = Pick<\n  Parameters<typeof useGridSelection>[0],\n  'selectionSorter' | 'dateGetter'\n>;\ntype GridSelectionHelper<\n  SelectionCalculator extends (\n    gridSelection: GridSelectionData | null,\n    ...rest: any[]\n  ) => (TimeGridSelectionDataByCol | null) | (GridSelectionDataByRow | null)\n> = {\n  sortSelection: RequiredGridSelectionHookParams['selectionSorter'];\n  getDateFromCollection: RequiredGridSelectionHookParams['dateGetter'];\n  calculateSelection: SelectionCalculator;\n};\n\nfunction createSortedGridSelection(\n  initPos: GridPosition,\n  currentPos: GridPosition,\n  isReversed: boolean\n) {\n  return {\n    startColumnIndex: isReversed ? currentPos.columnIndex : initPos.columnIndex,\n    startRowIndex: isReversed ? currentPos.rowIndex : initPos.rowIndex,\n    endColumnIndex: isReversed ? initPos.columnIndex : currentPos.columnIndex,\n    endRowIndex: isReversed ? initPos.rowIndex : currentPos.rowIndex,\n  };\n}\n\nfunction calculateTimeGridSelectionByCurrentIndex(\n  timeGridSelection: GridSelectionData | null,\n  columnIndex: number,\n  maxRowIndex: number // maxRowIndex is the last row index of the `timeGridData.row`\n) {\n  if (isNil(timeGridSelection)) {\n    return null;\n  }\n\n  const { startColumnIndex, endColumnIndex, endRowIndex, startRowIndex } = timeGridSelection;\n\n  if (!isBetweenValue(columnIndex, startColumnIndex, endColumnIndex)) {\n    return null;\n  }\n\n  const hasMultipleColumns = startColumnIndex !== endColumnIndex;\n  const isStartingColumn = columnIndex === startColumnIndex;\n  const resultGridSelection: TimeGridSelectionDataByCol = {\n    startRowIndex,\n    endRowIndex,\n    isSelectingMultipleColumns: hasMultipleColumns,\n    isStartingColumn,\n  };\n\n  if (startColumnIndex < columnIndex && columnIndex < endColumnIndex) {\n    resultGridSelection.startRowIndex = 0;\n    resultGridSelection.endRowIndex = maxRowIndex;\n  } else if (startColumnIndex !== endColumnIndex) {\n    if (startColumnIndex === columnIndex) {\n      resultGridSelection.endRowIndex = maxRowIndex;\n    } else if (endColumnIndex === columnIndex) {\n      resultGridSelection.startRowIndex = 0;\n    }\n  }\n\n  return resultGridSelection;\n}\n\nexport const timeGridSelectionHelper: GridSelectionHelper<\n  typeof calculateTimeGridSelectionByCurrentIndex\n> = {\n  sortSelection: (initPos, currentPos) => {\n    const isReversed =\n      initPos.columnIndex > currentPos.columnIndex ||\n      (initPos.columnIndex === currentPos.columnIndex && initPos.rowIndex > currentPos.rowIndex);\n\n    return createSortedGridSelection(initPos, currentPos, isReversed);\n  },\n  getDateFromCollection: (dateCollection, gridSelection) => {\n    const timeGridData = dateCollection as TimeGridData;\n\n    const startDate = setTimeStrToDate(\n      timeGridData.columns[gridSelection.startColumnIndex].date,\n      timeGridData.rows[gridSelection.startRowIndex].startTime\n    );\n    const endDate = setTimeStrToDate(\n      timeGridData.columns[gridSelection.endColumnIndex].date,\n      timeGridData.rows[gridSelection.endRowIndex].endTime\n    );\n\n    return [startDate, endDate];\n  },\n  calculateSelection: calculateTimeGridSelectionByCurrentIndex,\n};\n\nfunction calculateDayGridMonthSelectionByCurrentIndex(\n  gridSelection: GridSelectionData | null,\n  currentIndex: number,\n  weekLength: number\n) {\n  if (!(isPresent(gridSelection) && isPresent(currentIndex) && isPresent(weekLength))) {\n    return null;\n  }\n\n  const { startRowIndex, startColumnIndex, endRowIndex, endColumnIndex } = gridSelection;\n\n  if (\n    !isBetween(\n      currentIndex,\n      Math.min(startRowIndex, endRowIndex),\n      Math.max(startRowIndex, endRowIndex)\n    )\n  ) {\n    return null;\n  }\n\n  let startCellIndex = startColumnIndex;\n  let endCellIndex = endColumnIndex;\n\n  if (startRowIndex < currentIndex) {\n    startCellIndex = 0;\n  }\n\n  if (endRowIndex > currentIndex) {\n    endCellIndex = weekLength - 1;\n  }\n\n  return { startCellIndex, endCellIndex };\n}\n\nexport const dayGridMonthSelectionHelper: GridSelectionHelper<\n  typeof calculateDayGridMonthSelectionByCurrentIndex\n> = {\n  sortSelection: (initPos, currentPos) => {\n    const isReversed =\n      initPos.rowIndex > currentPos.rowIndex ||\n      (initPos.rowIndex === currentPos.rowIndex && initPos.columnIndex > currentPos.columnIndex);\n\n    return createSortedGridSelection(initPos, currentPos, isReversed);\n  },\n  getDateFromCollection: (dateCollection, gridSelection) => {\n    const dateMatrix = dateCollection as TZDate[][];\n\n    return [\n      dateMatrix[gridSelection.startRowIndex][gridSelection.startColumnIndex],\n      dateMatrix[gridSelection.endRowIndex][gridSelection.endColumnIndex],\n    ];\n  },\n  calculateSelection: calculateDayGridMonthSelectionByCurrentIndex,\n};\n\nfunction calculateAlldayGridRowSelectionByCurrentIndex(gridSelection: GridSelectionData | null) {\n  return isPresent(gridSelection)\n    ? {\n        startCellIndex: gridSelection.startColumnIndex,\n        endCellIndex: gridSelection.endColumnIndex,\n      }\n    : null;\n}\n\nexport const alldayGridRowSelectionHelper: GridSelectionHelper<\n  typeof calculateAlldayGridRowSelectionByCurrentIndex\n> = {\n  sortSelection: (initPos, currentPos) => {\n    const isReversed = initPos.columnIndex > currentPos.columnIndex;\n\n    return createSortedGridSelection(initPos, currentPos, isReversed);\n  },\n  getDateFromCollection: (dateCollection, gridSelection) => {\n    const weekDates = dateCollection as TZDate[];\n\n    return [weekDates[gridSelection.startColumnIndex], weekDates[gridSelection.endColumnIndex]];\n  },\n  calculateSelection: calculateAlldayGridRowSelectionByCurrentIndex,\n};\n","import type { Rect } from '@t/store';\n\nexport function isTopOutOfLayout(top: number, layoutRect: Rect, popupRect: Rect): boolean {\n  return top + popupRect.height > layoutRect.top + layoutRect.height;\n}\n\nexport function isLeftOutOfLayout(left: number, layoutRect: Rect, popupRect: Rect): boolean {\n  return left + popupRect.width > layoutRect.left + layoutRect.width;\n}\n","import { DEFAULT_EVENT_PANEL, DEFAULT_TASK_PANEL } from '@src/constants/view';\n\nimport type { EventView, TaskView, WeekOptions } from '@t/options';\n\nexport function getActivePanels(\n  taskView: Required<WeekOptions>['taskView'],\n  eventView: Required<WeekOptions>['eventView']\n): (TaskView | EventView)[] {\n  const activePanels: (TaskView | EventView)[] = [];\n\n  if (taskView === true) {\n    activePanels.push(...DEFAULT_TASK_PANEL);\n  } else if (Array.isArray(taskView)) {\n    activePanels.push(...taskView);\n  }\n\n  if (eventView === true) {\n    activePanels.push(...DEFAULT_EVENT_PANEL);\n  } else if (Array.isArray(eventView)) {\n    activePanels.push(...eventView);\n  }\n\n  return activePanels;\n}\n","import { useCallback } from 'preact/hooks';\n\nimport { useStore } from '@src/contexts/calendarStore';\n\nexport function useCalendarById(calendarId: string | null) {\n  return useStore(\n    useCallback(\n      (state) => state.calendar.calendars.find((cal) => cal.id === calendarId),\n      [calendarId]\n    )\n  );\n}\n","import { useMemo } from 'preact/hooks';\n\nimport { useCalendarById } from '@src/hooks/calendar/useCalendarById';\nimport type EventModel from '@src/model/eventModel';\n\nimport type { CalendarColor } from '@t/options';\n\nexport function useCalendarColor(model?: EventModel): CalendarColor {\n  const calendar = useCalendarById(model?.calendarId ?? null);\n\n  return useMemo(\n    () => ({\n      color: calendar?.color,\n      borderColor: calendar?.borderColor,\n      backgroundColor: calendar?.backgroundColor,\n      dragBackgroundColor: calendar?.dragBackgroundColor,\n    }),\n    [calendar]\n  );\n}\n","import { useMemo } from 'preact/hooks';\n\nimport { useEventsWithTimezone } from '@src/hooks/timezone/useEventsWithTimezone';\nimport type EventModel from '@src/model/eventModel';\nimport type { Filter } from '@src/utils/collection';\nimport Collection from '@src/utils/collection';\n\nimport type { CalendarData } from '@t/events';\n\nexport function useCalendarData(calendar: CalendarData, ...filters: Filter<EventModel>[]) {\n  const filteredEvents = useMemo(\n    () => calendar.events.filter(Collection.and<EventModel>(...filters)),\n    [calendar.events, filters]\n  );\n\n  const filteredEventsWithTimezone = useEventsWithTimezone(filteredEvents);\n\n  return useMemo(\n    () => ({\n      ...calendar,\n      events: filteredEventsWithTimezone,\n    }),\n    [calendar, filteredEventsWithTimezone]\n  );\n}\n","import { useEffect, useRef } from 'preact/hooks';\n\nimport { noop } from '@src/utils/noop';\nimport { requestTimeout } from '@src/utils/requestTimeout';\n\n// Reference: https://medium.com/trabe/preventing-click-events-on-double-click-with-react-the-performant-way-1416ab03b835\nexport function useClickPrevention({\n  onClick,\n  onDblClick,\n  delay = 300,\n}: {\n  onClick: (e: MouseEvent) => void;\n  onDblClick: (e: MouseEvent) => void;\n  delay?: number;\n}) {\n  const cancelCallback = useRef<Function>(noop);\n  const registerCancel = (fn: Function) => {\n    cancelCallback.current = fn;\n  };\n  const cancelScheduledWork = () => {\n    cancelCallback.current();\n  };\n\n  // Cancels the current scheduled work before the \"unmount\"\n  useEffect(() => cancelScheduledWork, []);\n\n  const handleClick = (e: MouseEvent) => {\n    cancelScheduledWork();\n    requestTimeout(onClick.bind(null, e), delay, registerCancel);\n  };\n\n  const handleDblClick = (e: MouseEvent) => {\n    cancelScheduledWork();\n    onDblClick(e);\n  };\n\n  return [handleClick, handleDblClick];\n}\n","import type { RefCallback } from 'preact';\nimport { useCallback, useState } from 'preact/hooks';\n\nexport function useDOMNode<Node extends HTMLElement>(): [Node | null, RefCallback<Node>] {\n  const [node, setNode] = useState<Node | null>(null);\n  const setNodeRef: RefCallback<Node> = useCallback((ref) => {\n    if (ref) {\n      setNode(ref);\n    }\n  }, []);\n\n  return [node, setNodeRef];\n}\n","import { useCallback, useEffect, useRef, useState } from 'preact/hooks';\n\nimport { KEY } from '@src/constants/keyboard';\nimport { MINIMUM_DRAG_MOUSE_DISTANCE } from '@src/constants/mouse';\nimport { useDispatch, useInternalStore } from '@src/contexts/calendarStore';\nimport { useTransientUpdate } from '@src/hooks/common/useTransientUpdate';\nimport { dndSelector } from '@src/selectors';\nimport type { DndSlice } from '@src/slices/dnd';\nimport { DraggingState } from '@src/slices/dnd';\nimport { isKeyPressed } from '@src/utils/keyboard';\nimport { noop } from '@src/utils/noop';\nimport { isPresent } from '@src/utils/type';\n\nimport type { DraggingTypes } from '@t/drag';\nimport type { KeyboardEventListener, MouseEventListener } from '@t/util';\n\ntype MouseListener = (e: MouseEvent, dndSlice: DndSlice['dnd']) => void;\ntype KeyboardListener = (e: KeyboardEvent, dndSlice: DndSlice['dnd']) => void;\n\nexport interface DragListeners {\n  // when press the mouse button\n  onInit?: MouseListener;\n  // when the mouse moving is recognized as a drag\n  onDragStart?: MouseListener;\n  // while dragging\n  onDrag?: MouseListener;\n  // when the mouse button is released while dragging or just after onInit\n  onMouseUp?: MouseListener;\n  // when press the escape key while dragging\n  onPressESCKey?: KeyboardListener;\n}\n\nfunction isLeftClick(buttonNum: number) {\n  return buttonNum === 0;\n}\n\nfunction isMouseMoved(initX: number, initY: number, x: number, y: number) {\n  return (\n    Math.abs(initX - x) >= MINIMUM_DRAG_MOUSE_DISTANCE ||\n    Math.abs(initY - y) >= MINIMUM_DRAG_MOUSE_DISTANCE\n  );\n}\n\nexport function useDrag(\n  draggingItemType: DraggingTypes,\n  { onInit, onDragStart, onDrag, onMouseUp, onPressESCKey }: DragListeners = {}\n) {\n  const { initDrag, setDragging, cancelDrag, reset } = useDispatch('dnd');\n\n  const store = useInternalStore();\n  const dndSliceRef = useRef(store.getState().dnd);\n  useTransientUpdate(dndSelector, (dndState) => {\n    dndSliceRef.current = dndState;\n  });\n\n  const [isStarted, setStarted] = useState(false);\n\n  const handleMouseMoveRef = useRef<MouseEventListener | null>(null);\n  const handleMouseUpRef = useRef<MouseEventListener | null>(null);\n  const handleKeyDownRef = useRef<KeyboardEventListener | null>(null);\n\n  const handleMouseDown = useCallback<MouseEventListener>(\n    (e) => {\n      if (!isLeftClick(e.button)) {\n        return;\n      }\n\n      if (e.currentTarget) {\n        (e.currentTarget as HTMLElement).ondragstart = function () {\n          return false;\n        };\n      }\n\n      // prevent text selection on dragging\n      e.preventDefault();\n\n      setStarted(true);\n      initDrag({\n        draggingItemType,\n        initX: e.clientX,\n        initY: e.clientY,\n      });\n      onInit?.(e, dndSliceRef.current);\n    },\n    [onInit, draggingItemType, initDrag]\n  );\n\n  const handleMouseMove = useCallback<MouseEventListener>(\n    (e) => {\n      const {\n        initX,\n        initY,\n        draggingState,\n        draggingItemType: currentDraggingItemType,\n      } = dndSliceRef.current;\n\n      if (currentDraggingItemType !== draggingItemType) {\n        setStarted(false);\n        reset();\n\n        return;\n      }\n\n      if (\n        isPresent(initX) &&\n        isPresent(initY) &&\n        !isMouseMoved(initX, initY, e.clientX, e.clientY)\n      ) {\n        return;\n      }\n\n      if (draggingState <= DraggingState.INIT) {\n        setDragging({ x: e.clientX, y: e.clientY });\n        onDragStart?.(e, dndSliceRef.current);\n\n        return;\n      }\n\n      setDragging({ x: e.clientX, y: e.clientY });\n      onDrag?.(e, dndSliceRef.current);\n    },\n    [draggingItemType, onDrag, onDragStart, setDragging, reset]\n  );\n\n  const handleMouseUp = useCallback<MouseEventListener>(\n    (e) => {\n      e.stopPropagation();\n\n      if (isStarted) {\n        onMouseUp?.(e, dndSliceRef.current);\n        setStarted(false);\n        reset();\n      }\n    },\n    [isStarted, onMouseUp, reset]\n  );\n\n  const handleKeyDown = useCallback<KeyboardEventListener>(\n    (e) => {\n      if (isKeyPressed(e, KEY.ESCAPE)) {\n        setStarted(false);\n        cancelDrag();\n        onPressESCKey?.(e, dndSliceRef.current);\n      }\n    },\n    [onPressESCKey, cancelDrag]\n  );\n\n  useEffect(() => {\n    handleMouseMoveRef.current = handleMouseMove;\n    handleMouseUpRef.current = handleMouseUp;\n    handleKeyDownRef.current = handleKeyDown;\n  }, [handleKeyDown, handleMouseMove, handleMouseUp]);\n\n  useEffect(() => {\n    const wrappedHandleMouseMove: MouseEventListener = (e) => handleMouseMoveRef.current?.(e);\n    const wrappedHandleMouseUp: MouseEventListener = (e) => handleMouseUpRef.current?.(e);\n    const wrappedHandleKeyDown: KeyboardEventListener = (e) => handleKeyDownRef.current?.(e);\n\n    if (isStarted) {\n      document.addEventListener('mousemove', wrappedHandleMouseMove);\n      document.addEventListener('mouseup', wrappedHandleMouseUp);\n      document.addEventListener('keydown', wrappedHandleKeyDown);\n\n      return () => {\n        document.removeEventListener('mousemove', wrappedHandleMouseMove);\n        document.removeEventListener('mouseup', wrappedHandleMouseUp);\n        document.removeEventListener('keydown', wrappedHandleKeyDown);\n      };\n    }\n\n    return noop;\n  }, [isStarted, reset]);\n\n  return handleMouseDown;\n}\n","import { useState } from 'preact/hooks';\n\nexport function useDropdownState() {\n  const [isOpened, setOpened] = useState(false);\n  const toggleDropdown = () => setOpened((prev) => !prev);\n\n  return { isOpened, setOpened, toggleDropdown };\n}\n","import { useEffect, useRef } from 'preact/hooks';\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef<() => void>(callback);\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    const tick = () => savedCallback.current();\n    const intervalDelay = delay ?? -1;\n\n    if (intervalDelay > 0) {\n      const id = setInterval(tick, intervalDelay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import { useCallback, useEffect, useRef } from 'preact/hooks';\n\nexport function useIsMounted(): () => boolean {\n  const isMountedRef = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  return useCallback(() => isMountedRef.current, []);\n}\n","import { useEffect, useRef } from 'preact/hooks';\n\nimport { useInternalStore } from '@src/contexts/calendarStore';\n\nimport type { CalendarState } from '@t/store';\n\ntype Slice<S> = S extends (state: CalendarState) => infer T ? T : never;\n\n// Transient Updates for better performance\n// Reference: https://github.com/pmndrs/zustand#transient-updates-for-often-occuring-state-changes\nexport function useTransientUpdate<\n  Selector extends (state: CalendarState) => any,\n  Subscriber extends (slice: Slice<Selector>) => void\n>(selector: Selector, subscriber: Subscriber) {\n  const store = useInternalStore();\n  const selectorRef = useRef(selector);\n  const subscriberRef = useRef(subscriber);\n\n  useEffect(() => {\n    selectorRef.current = selector;\n    subscriberRef.current = subscriber;\n  }, [selector, subscriber]);\n\n  useEffect(\n    () =>\n      store.subscribe(\n        (slice) => subscriberRef.current(slice as any),\n        (state) => selectorRef.current(state)\n      ),\n    [selector, store]\n  );\n}\n","import { useEffect, useRef } from 'preact/hooks';\n\n/**\n * Check the condition and call the callback if the condition is true.\n * callback is always referencing the latest value\n * so that it doesn't have to register all values in the callback as deps to useEffect.\n * But it's not suitable when you need to keep tracking the value related to condition.\n *\n * @example\n * // when the condition is true, the callback is called.\n * useWhen(() => {\n *   if (shouldUpdateEvent) {\n *     // update event\n *   }\n * }, isDraggingEnd)\n *\n * @example\n * // avoid this when you need to keep updating `setGridDiff` by `currentGridPos` and `initGridPosition`.\n * useWhen(() => {\n *   // it will fire once.\n *   setGridDiff({\n *     columnIndex: currentGridPos.columnIndex - initGridPosition.columnIndex,\n *     rowIndex: currentGridPos.rowIndex - initGridPosition.rowIndex,\n *   });\n * }, isPresent(currentGridPos) && isPresent(initGridPosition));\n *\n * // You need to use `useEffect` this time.\n * useEffect(() => {\n *   setGridDiff({\n *     columnIndex: currentGridPos.columnIndex - initGridPosition.columnIndex,\n *     rowIndex: currentGridPos.rowIndex - initGridPosition.rowIndex,\n *   });\n * }, [currentGridPos, initGridPosition]);\n */\nexport function useWhen(callback: () => void, condition: boolean) {\n  const callbackRef = useRef(callback);\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const invoke = () => callbackRef.current();\n\n    if (condition) {\n      invoke();\n    }\n  }, [condition]);\n}\n","import type { ComponentProps } from 'preact';\nimport { useMemo } from 'preact/hooks';\n\nimport type { MovingEventShadow } from '@src/components/dayGridMonth/movingEventShadow';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useWhen } from '@src/hooks/common/useWhen';\nimport { useCurrentPointerPositionInGrid } from '@src/hooks/event/useCurrentPointerPositionInGrid';\nimport { useDraggingEvent } from '@src/hooks/event/useDraggingEvent';\nimport TZDate from '@src/time/date';\nimport { getDateDifference, MS_PER_DAY } from '@src/time/datetime';\nimport { isPresent } from '@src/utils/type';\n\nexport function useDayGridMonthEventMove({\n  dateMatrix,\n  rowInfo,\n  gridPositionFinder,\n  rowIndex,\n}: ComponentProps<typeof MovingEventShadow>) {\n  const eventBus = useEventBus();\n  const {\n    isDraggingEnd,\n    isDraggingCanceled,\n    draggingEvent: movingEvent,\n    clearDraggingEvent,\n  } = useDraggingEvent('dayGrid', 'move');\n\n  const [currentGridPos, clearCurrentGridPos] = useCurrentPointerPositionInGrid(gridPositionFinder);\n\n  const movingEventUIModel = useMemo(() => {\n    let shadowEventUIModel = null;\n\n    if (movingEvent && currentGridPos?.rowIndex === rowIndex) {\n      shadowEventUIModel = movingEvent;\n      shadowEventUIModel.left = rowInfo[currentGridPos?.columnIndex ?? 0].left;\n      shadowEventUIModel.width = rowInfo[currentGridPos?.columnIndex ?? 0].width;\n    }\n\n    return shadowEventUIModel;\n  }, [movingEvent, currentGridPos?.rowIndex, currentGridPos?.columnIndex, rowIndex, rowInfo]);\n\n  useWhen(() => {\n    const shouldUpdate =\n      !isDraggingCanceled && isPresent(movingEventUIModel) && isPresent(currentGridPos);\n    if (shouldUpdate) {\n      const preStartDate = movingEventUIModel.model.getStarts();\n      const eventDuration = movingEventUIModel.duration();\n      const currentDate = dateMatrix[currentGridPos.rowIndex][currentGridPos.columnIndex];\n\n      const timeOffsetPerDay = getDateDifference(currentDate, preStartDate) * MS_PER_DAY;\n\n      const newStartDate = new TZDate(preStartDate.getTime() + timeOffsetPerDay);\n      const newEndDate = new TZDate(newStartDate.getTime() + eventDuration);\n\n      eventBus.fire('beforeUpdateEvent', {\n        event: movingEventUIModel.model.toEventObject(),\n        changes: {\n          start: newStartDate,\n          end: newEndDate,\n        },\n      });\n    }\n\n    clearDraggingEvent();\n    clearCurrentGridPos();\n  }, isDraggingEnd);\n\n  return movingEventUIModel;\n}\n","import { useCallback, useEffect, useMemo, useState } from 'preact/hooks';\n\nimport { useEventBus } from '@src/contexts/eventBus';\nimport type { getRenderedEventUIModels } from '@src/helpers/grid';\nimport { getGridDateIndex } from '@src/helpers/grid';\nimport { useWhen } from '@src/hooks/common/useWhen';\nimport { useCurrentPointerPositionInGrid } from '@src/hooks/event/useCurrentPointerPositionInGrid';\nimport { useDraggingEvent } from '@src/hooks/event/useDraggingEvent';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\nimport { findLastIndex } from '@src/utils/array';\nimport { isNil, isPresent } from '@src/utils/type';\n\nimport type { GridPositionFinder } from '@t/grid';\n\nfunction getRowPosOfUIModel(uiModel: EventUIModel, dateRow: TZDate[]) {\n  const startColumnIndex = Math.max(getGridDateIndex(uiModel.getStarts(), dateRow), 0);\n  const endColumnIndex = getGridDateIndex(uiModel.getEnds(), dateRow);\n\n  return {\n    startColumnIndex,\n    endColumnIndex,\n  };\n}\n\ninterface EventResizeHookParams {\n  dateMatrix: TZDate[][];\n  renderedUIModels: ReturnType<typeof getRenderedEventUIModels>[];\n  cellWidthMap: string[][];\n  gridPositionFinder: GridPositionFinder;\n  rowIndex: number;\n}\n\ntype FilteredUIModelRow = [] | [EventUIModel];\n\nexport function useDayGridMonthEventResize({\n  dateMatrix,\n  gridPositionFinder,\n  renderedUIModels,\n  cellWidthMap,\n  rowIndex,\n}: EventResizeHookParams) {\n  const eventBus = useEventBus();\n  const {\n    isDraggingEnd,\n    isDraggingCanceled,\n    draggingEvent: resizingStartUIModel,\n    clearDraggingEvent,\n  } = useDraggingEvent('dayGrid', 'resize');\n  const [currentGridPos, clearCurrentGridPos] = useCurrentPointerPositionInGrid(gridPositionFinder);\n  const [guideProps, setGuideProps] = useState<[EventUIModel, string] | null>(null); // Shadow -> Guide\n\n  const clearStates = useCallback(() => {\n    setGuideProps(null);\n    clearCurrentGridPos();\n    clearDraggingEvent();\n  }, [clearCurrentGridPos, clearDraggingEvent]);\n\n  const baseResizingInfo = useMemo(() => {\n    if (isNil(resizingStartUIModel)) {\n      return null;\n    }\n    /**\n     * Filter UIModels that are made from the target event.\n     */\n    const resizeTargetUIModelRows = renderedUIModels.map(\n      ({ uiModels }) =>\n        uiModels.filter(\n          (uiModel) => uiModel.cid() === resizingStartUIModel.cid()\n        ) as FilteredUIModelRow\n    );\n\n    const eventStartDateRowIndex = resizeTargetUIModelRows.findIndex((row) => row.length > 0);\n    const eventEndDateRowIndex = findLastIndex(resizeTargetUIModelRows, (row) => row.length > 0);\n    const eventStartUIModelPos = getRowPosOfUIModel(\n      resizeTargetUIModelRows[eventStartDateRowIndex][0] as EventUIModel,\n      dateMatrix[eventStartDateRowIndex]\n    );\n    const eventEndUIModelPos = getRowPosOfUIModel(\n      resizeTargetUIModelRows[eventEndDateRowIndex][0] as EventUIModel,\n      dateMatrix[eventEndDateRowIndex]\n    );\n\n    return {\n      eventStartDateColumnIndex: eventStartUIModelPos.startColumnIndex,\n      eventStartDateRowIndex,\n      eventEndDateColumnIndex: eventEndUIModelPos.endColumnIndex,\n      eventEndDateRowIndex,\n      resizeTargetUIModelRows,\n    };\n  }, [dateMatrix, renderedUIModels, resizingStartUIModel]);\n\n  const canCalculateProps =\n    isPresent(baseResizingInfo) && isPresent(resizingStartUIModel) && isPresent(currentGridPos);\n\n  // Calculate the first row of the dragging event\n  useEffect(() => {\n    if (canCalculateProps && rowIndex === baseResizingInfo.eventStartDateRowIndex) {\n      const { eventStartDateRowIndex, eventStartDateColumnIndex } = baseResizingInfo;\n      const clonedUIModel = (\n        baseResizingInfo.resizeTargetUIModelRows[eventStartDateRowIndex][0] as EventUIModel\n      ).clone();\n\n      let height: string;\n      if (eventStartDateRowIndex === currentGridPos.rowIndex) {\n        height =\n          cellWidthMap[eventStartDateColumnIndex][\n            Math.max(eventStartDateColumnIndex, currentGridPos.columnIndex)\n          ];\n      } else if (eventStartDateRowIndex > currentGridPos.rowIndex) {\n        height = cellWidthMap[eventStartDateColumnIndex][eventStartDateColumnIndex];\n      } else {\n        height = cellWidthMap[eventStartDateColumnIndex][dateMatrix[rowIndex].length - 1];\n        clonedUIModel.setUIProps({ exceedRight: true });\n      }\n\n      setGuideProps([clonedUIModel, height]);\n    }\n  }, [baseResizingInfo, canCalculateProps, cellWidthMap, currentGridPos, dateMatrix, rowIndex]);\n\n  // Calculate middle rows of the dragging event\n  useEffect(() => {\n    if (\n      canCalculateProps &&\n      baseResizingInfo.eventStartDateRowIndex < rowIndex &&\n      rowIndex < currentGridPos.rowIndex\n    ) {\n      const clonedUIModel = resizingStartUIModel.clone();\n      clonedUIModel.setUIProps({ left: 0, exceedLeft: true, exceedRight: true });\n      setGuideProps([clonedUIModel, '100%']);\n    }\n  }, [baseResizingInfo, canCalculateProps, currentGridPos, resizingStartUIModel, rowIndex]);\n\n  // Calculate the last row of the dragging event\n  useEffect(() => {\n    if (\n      canCalculateProps &&\n      baseResizingInfo.eventStartDateRowIndex < currentGridPos.rowIndex &&\n      rowIndex === currentGridPos.rowIndex\n    ) {\n      const clonedUIModel = resizingStartUIModel.clone();\n      clonedUIModel.setUIProps({ left: 0, exceedLeft: true });\n      setGuideProps([clonedUIModel, cellWidthMap[0][currentGridPos.columnIndex]]);\n    }\n  }, [\n    baseResizingInfo,\n    canCalculateProps,\n    cellWidthMap,\n    currentGridPos,\n    resizingStartUIModel,\n    rowIndex,\n  ]);\n\n  // Reset props on out of bound\n  useEffect(() => {\n    if (\n      canCalculateProps &&\n      rowIndex > baseResizingInfo.eventStartDateRowIndex &&\n      rowIndex > currentGridPos.rowIndex\n    ) {\n      setGuideProps(null);\n    }\n  }, [canCalculateProps, currentGridPos, baseResizingInfo, rowIndex]);\n\n  useWhen(() => {\n    if (canCalculateProps) {\n      /**\n       * Is current grid position is the same or later comparing to the position of the start date?\n       */\n      const { eventStartDateColumnIndex, eventStartDateRowIndex } = baseResizingInfo;\n      const shouldUpdate =\n        !isDraggingCanceled &&\n        ((currentGridPos.rowIndex === eventStartDateRowIndex &&\n          currentGridPos.columnIndex >= eventStartDateColumnIndex) ||\n          currentGridPos.rowIndex > eventStartDateRowIndex);\n\n      if (shouldUpdate) {\n        const targetEndDate = dateMatrix[currentGridPos.rowIndex][currentGridPos.columnIndex];\n\n        eventBus.fire('beforeUpdateEvent', {\n          event: resizingStartUIModel.model.toEventObject(),\n          changes: {\n            end: targetEndDate,\n          },\n        });\n      }\n    }\n\n    clearStates();\n  }, isDraggingEnd);\n\n  return guideProps;\n}\n","import { useEffect, useMemo, useRef } from 'preact/hooks';\n\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useWhen } from '@src/hooks/common/useWhen';\nimport { useCurrentPointerPositionInGrid } from '@src/hooks/event/useCurrentPointerPositionInGrid';\nimport { useDraggingEvent } from '@src/hooks/event/useDraggingEvent';\nimport TZDate from '@src/time/date';\nimport { isNil, isPresent } from '@src/utils/type';\n\nimport type { GridPositionFinder } from '@t/grid';\nimport type { CellStyle } from '@t/time/datetime';\n\ninterface Params {\n  rowStyleInfo: CellStyle[];\n  gridPositionFinder: GridPositionFinder;\n}\n\nexport function useAlldayGridRowEventMove({ rowStyleInfo, gridPositionFinder }: Params) {\n  const eventBus = useEventBus();\n  const {\n    isDraggingEnd,\n    isDraggingCanceled,\n    draggingEvent: movingEvent,\n    clearDraggingEvent,\n  } = useDraggingEvent('dayGrid', 'move');\n  const startGridXRef = useRef<number | null>(null);\n\n  const [currentGridPos, clearCurrentGridPos] = useCurrentPointerPositionInGrid(gridPositionFinder);\n  const { columnIndex } = currentGridPos ?? {};\n\n  const targetEventStartGridX = useMemo(\n    () =>\n      isNil(movingEvent) ? null : rowStyleInfo.findIndex(({ left }) => left === movingEvent.left),\n    [rowStyleInfo, movingEvent]\n  );\n\n  const currentMovingLeft = useMemo(() => {\n    if (isNil(columnIndex) || isNil(startGridXRef.current) || isNil(targetEventStartGridX)) {\n      return null;\n    }\n\n    const newColumnIndex = targetEventStartGridX + columnIndex - startGridXRef.current;\n\n    return newColumnIndex < 0\n      ? -rowStyleInfo[-newColumnIndex].left\n      : rowStyleInfo[newColumnIndex].left;\n  }, [columnIndex, rowStyleInfo, targetEventStartGridX]);\n\n  useEffect(() => {\n    if (isNil(startGridXRef.current) && isPresent(columnIndex)) {\n      startGridXRef.current = columnIndex;\n    }\n  }, [columnIndex]);\n\n  useWhen(() => {\n    const shouldUpdate =\n      !isDraggingCanceled &&\n      isPresent(movingEvent) &&\n      isPresent(columnIndex) &&\n      isPresent(currentMovingLeft) &&\n      columnIndex !== startGridXRef.current;\n\n    if (shouldUpdate && isPresent(startGridXRef.current)) {\n      const dateOffset = columnIndex - startGridXRef.current;\n      const newStartDate = new TZDate(movingEvent.model.getStarts());\n      const newEndDate = new TZDate(movingEvent.model.getEnds());\n      newStartDate.addDate(dateOffset);\n      newEndDate.addDate(dateOffset);\n\n      eventBus.fire('beforeUpdateEvent', {\n        event: movingEvent.model.toEventObject(),\n        changes: {\n          start: newStartDate,\n          end: newEndDate,\n        },\n      });\n    }\n\n    clearDraggingEvent();\n    clearCurrentGridPos();\n    startGridXRef.current = null;\n  }, isDraggingEnd);\n\n  return useMemo(\n    () => ({\n      movingEvent,\n      movingLeft: currentMovingLeft,\n    }),\n    [currentMovingLeft, movingEvent]\n  );\n}\n","import { useMemo } from 'preact/hooks';\n\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { getGridDateIndex } from '@src/helpers/grid';\nimport { useWhen } from '@src/hooks/common/useWhen';\nimport { useCurrentPointerPositionInGrid } from '@src/hooks/event/useCurrentPointerPositionInGrid';\nimport { useDraggingEvent } from '@src/hooks/event/useDraggingEvent';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\nimport { isPresent } from '@src/utils/type';\n\nimport type { GridPositionFinder } from '@t/grid';\n\nfunction getEventColIndex(uiModel: EventUIModel, row: TZDate[]) {\n  const start = getGridDateIndex(uiModel.getStarts(), row);\n  const end = getGridDateIndex(uiModel.getEnds(), row);\n\n  return { start, end };\n}\n\ninterface Params {\n  weekDates: TZDate[];\n  gridColWidthMap: string[][];\n  gridPositionFinder: GridPositionFinder;\n}\n\nexport function useAlldayGridRowEventResize({\n  weekDates,\n  gridColWidthMap,\n  gridPositionFinder,\n}: Params) {\n  const eventBus = useEventBus();\n  const {\n    isDraggingEnd,\n    isDraggingCanceled,\n    draggingEvent: resizingEvent,\n    clearDraggingEvent,\n  } = useDraggingEvent('dayGrid', 'resize');\n\n  const [currentGridPos, clearCurrentGridPos] = useCurrentPointerPositionInGrid(gridPositionFinder);\n  const { columnIndex } = currentGridPos ?? {};\n\n  const targetEventGridIndices = useMemo(() => {\n    if (resizingEvent) {\n      return getEventColIndex(resizingEvent, weekDates);\n    }\n\n    return { start: -1, end: -1 };\n  }, [weekDates, resizingEvent]);\n\n  const resizingWidth = useMemo(() => {\n    if (targetEventGridIndices.start > -1 && isPresent(columnIndex)) {\n      return gridColWidthMap[targetEventGridIndices.start][columnIndex];\n    }\n\n    return null;\n  }, [columnIndex, gridColWidthMap, targetEventGridIndices.start]);\n\n  useWhen(() => {\n    const shouldUpdateEvent =\n      !isDraggingCanceled &&\n      isPresent(resizingEvent) &&\n      isPresent(columnIndex) &&\n      targetEventGridIndices.start <= columnIndex &&\n      targetEventGridIndices.end !== columnIndex;\n\n    if (shouldUpdateEvent) {\n      const targetDate = weekDates[columnIndex];\n\n      eventBus.fire('beforeUpdateEvent', {\n        event: resizingEvent.model.toEventObject(),\n        changes: { end: targetDate },\n      });\n    }\n\n    clearCurrentGridPos();\n    clearDraggingEvent();\n  }, isDraggingEnd);\n\n  return useMemo(\n    () => ({\n      resizingEvent,\n      resizingWidth,\n    }),\n    [resizingWidth, resizingEvent]\n  );\n}\n","import { useCallback, useState } from 'preact/hooks';\n\nimport { DEFAULT_PANEL_HEIGHT } from '@src/constants/style';\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport { EVENT_HEIGHT } from '@src/helpers/grid';\nimport type { WeekGridRows } from '@src/slices/layout';\n\nimport type { AlldayEventCategory } from '@t/panel';\n\nexport function useGridRowHeightController(maxTop: number, category: AlldayEventCategory) {\n  const [clickedIndex, setClickedIndex] = useState(0);\n  const [isClickedCount, setClickedCount] = useState(false);\n  const { updateDayGridRowHeight } = useDispatch('weekViewLayout');\n\n  const onClickExceedCount = useCallback(\n    (index: number) => {\n      setClickedCount(true);\n      setClickedIndex(index);\n      updateDayGridRowHeight({\n        rowName: category as WeekGridRows,\n        height: (maxTop + 1) * EVENT_HEIGHT,\n      });\n    },\n    [category, maxTop, updateDayGridRowHeight]\n  );\n\n  const onClickCollapseButton = useCallback(() => {\n    setClickedCount(false);\n    updateDayGridRowHeight({\n      rowName: category as WeekGridRows,\n      height: DEFAULT_PANEL_HEIGHT,\n    });\n  }, [category, updateDayGridRowHeight]);\n\n  return {\n    clickedIndex,\n    isClickedCount,\n    onClickExceedCount,\n    onClickCollapseButton,\n  };\n}\n","import { useCallback, useState } from 'preact/hooks';\n\nimport { useTransientUpdate } from '@src/hooks/common/useTransientUpdate';\nimport { dndSelector } from '@src/selectors';\nimport { isPresent } from '@src/utils/type';\n\nimport type { GridPosition, GridPositionFinder } from '@t/grid';\n\nexport function useCurrentPointerPositionInGrid(\n  gridPositionFinder: GridPositionFinder\n): [GridPosition | null, () => void] {\n  const [currentGridPos, setCurrentGridPos] = useState<GridPosition | null>(null);\n\n  useTransientUpdate(dndSelector, (dndState) => {\n    if (isPresent(dndState.x) && isPresent(dndState.y)) {\n      const gridPosition = gridPositionFinder({\n        clientX: dndState.x,\n        clientY: dndState.y,\n      });\n      if (gridPosition) {\n        setCurrentGridPos(gridPosition);\n      }\n    }\n  });\n\n  const clearCurrentGridPos = useCallback(() => setCurrentGridPos(null), []);\n\n  return [currentGridPos, clearCurrentGridPos];\n}\n","import { useState } from 'preact/hooks';\n\nimport { useTransientUpdate } from '@src/hooks/common/useTransientUpdate';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport { dndSelector } from '@src/selectors';\nimport { DraggingState } from '@src/slices/dnd';\nimport { last } from '@src/utils/array';\nimport { isNil, isPresent } from '@src/utils/type';\n\nimport type { EventDragging, EventDraggingArea, EventDraggingBehavior } from '@t/drag';\n\nconst getTargetEventId = (\n  itemType: string | null,\n  area: EventDraggingArea,\n  behavior: EventDraggingBehavior\n) => {\n  function isEventDraggingType(_itemType: string): _itemType is EventDragging {\n    return new RegExp(`^event/${area}/${behavior}/\\\\d+$`).test(_itemType);\n  }\n\n  if (isNil(itemType)) {\n    return null;\n  }\n\n  return isEventDraggingType(itemType) ? last(itemType.split('/')) : null;\n};\n\nexport function useDraggingEvent(area: EventDraggingArea, behavior: EventDraggingBehavior) {\n  const [isDraggingEnd, setIsDraggingEnd] = useState(false);\n  const [isDraggingCanceled, setIsDraggingCanceled] = useState(false);\n  const [draggingEvent, setDraggingEvent] = useState<EventUIModel | null>(null);\n\n  useTransientUpdate(dndSelector, ({ draggingItemType, draggingEventUIModel, draggingState }) => {\n    const targetEventId = getTargetEventId(draggingItemType, area, behavior);\n    const hasMatchingTargetEvent = Number(targetEventId) === draggingEventUIModel?.cid();\n    const isIdle = draggingState === DraggingState.IDLE;\n    const isCanceled = draggingState === DraggingState.CANCELED;\n\n    if (isNil(draggingEvent) && hasMatchingTargetEvent) {\n      setDraggingEvent(draggingEventUIModel);\n    }\n\n    if (isPresent(draggingEvent) && (isIdle || isCanceled)) {\n      setIsDraggingEnd(true);\n      setIsDraggingCanceled(isCanceled);\n    }\n  });\n\n  const clearDraggingEvent = () => {\n    setDraggingEvent(null);\n    setIsDraggingEnd(false);\n    setIsDraggingCanceled(false);\n  };\n\n  return {\n    isDraggingEnd,\n    isDraggingCanceled,\n    draggingEvent,\n    clearDraggingEvent,\n  };\n}\n","import { useCallback, useEffect, useRef, useState } from 'preact/hooks';\n\nimport { useDispatch, useStore } from '@src/contexts/calendarStore';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useLayoutContainer } from '@src/contexts/layoutContainer';\nimport { cls } from '@src/helpers/css';\nimport { DRAGGING_TYPE_CREATORS } from '@src/helpers/drag';\nimport { useClickPrevention } from '@src/hooks/common/useClickPrevention';\nimport { useDrag } from '@src/hooks/common/useDrag';\nimport { useTransientUpdate } from '@src/hooks/common/useTransientUpdate';\nimport { dndSelector, optionsSelector } from '@src/selectors';\nimport { DraggingState } from '@src/slices/dnd';\nimport type { GridSelectionType } from '@src/slices/gridSelection';\nimport type TZDate from '@src/time/date';\nimport { isPresent } from '@src/utils/type';\n\nimport type { GridSelectionData } from '@t/components/gridSelection';\nimport type { GridPosition, GridPositionFinder } from '@t/grid';\nimport type { Coordinates } from '@t/mouse';\nimport type { CalendarState } from '@t/store';\n\nconst GRID_SELECTION_TYPE_MAP = {\n  dayGridMonth: 'month',\n  dayGridWeek: 'allday',\n  timeGrid: 'time',\n};\n\nfunction sortDates(a: TZDate, b: TZDate) {\n  const isIncreased = a < b;\n\n  return isIncreased ? [a, b] : [b, a];\n}\n\nexport function useGridSelection<DateCollection>({\n  type,\n  selectionSorter,\n  dateGetter,\n  dateCollection,\n  gridPositionFinder,\n}: {\n  type: GridSelectionType;\n  selectionSorter: (initPos: GridPosition, currentPos: GridPosition) => GridSelectionData;\n  dateGetter: (\n    dateCollection: DateCollection,\n    gridSelection: GridSelectionData\n  ) => [TZDate, TZDate];\n  dateCollection: DateCollection;\n  gridPositionFinder: GridPositionFinder;\n}) {\n  const { useFormPopup, gridSelection: gridSelectionOptions } = useStore(optionsSelector);\n  const { enableDblClick, enableClick } = gridSelectionOptions;\n\n  const { setGridSelection, addGridSelection, clearAll } = useDispatch('gridSelection');\n  const { hideAllPopup, showFormPopup } = useDispatch('popup');\n  const eventBus = useEventBus();\n  const layoutContainer = useLayoutContainer();\n\n  const [initMousePosition, setInitMousePosition] = useState<Coordinates | null>(null);\n  const [initGridPosition, setInitGridPosition] = useState<GridPosition | null>(null);\n  const isSelectingGridRef = useRef(false);\n  const gridSelectionRef = useRef<GridSelectionData | null>(null);\n\n  useTransientUpdate(\n    useCallback((state: CalendarState) => state.gridSelection[type], [type]),\n    (gridSelection) => {\n      gridSelectionRef.current = gridSelection;\n    }\n  );\n\n  useTransientUpdate(dndSelector, ({ draggingState, draggingItemType }) => {\n    isSelectingGridRef.current =\n      draggingItemType === currentGridSelectionType && draggingState >= DraggingState.INIT;\n  });\n\n  const currentGridSelectionType = DRAGGING_TYPE_CREATORS.gridSelection(type);\n\n  const setGridSelectionByPosition = (e: MouseEvent) => {\n    const gridPosition = gridPositionFinder(e);\n\n    if (isPresent(initGridPosition) && isPresent(gridPosition)) {\n      setGridSelection(type, selectionSorter(initGridPosition, gridPosition));\n    }\n  };\n\n  const [handleClickWithDebounce, handleDblClickPreventingClick] = useClickPrevention({\n    onClick: (e: MouseEvent) => {\n      if (enableClick) {\n        onMouseUp(e, true);\n      }\n    },\n    onDblClick: (e: MouseEvent) => {\n      if (enableDblClick) {\n        onMouseUp(e, true);\n      }\n    },\n    delay: 250, // heuristic value\n  });\n\n  const onMouseUpWithClick = (e: MouseEvent) => {\n    const isClick = e.detail <= 1;\n\n    if (!enableClick && (!enableDblClick || isClick)) {\n      return;\n    }\n\n    if (enableClick) {\n      if (isClick) {\n        handleClickWithDebounce(e);\n      } else {\n        handleDblClickPreventingClick(e);\n      }\n\n      return;\n    }\n\n    onMouseUp(e, true);\n  };\n\n  const onMouseUp = (e: MouseEvent, isClickEvent: boolean) => {\n    // The grid selection is created on mouseup in case of the click event.\n    if (isClickEvent) {\n      setGridSelectionByPosition(e);\n    }\n\n    if (isPresent(gridSelectionRef.current)) {\n      const [startDate, endDate] = sortDates(\n        ...dateGetter(dateCollection, gridSelectionRef.current)\n      );\n\n      if (useFormPopup && isPresent(initMousePosition)) {\n        const popupArrowPointPosition = {\n          top: (e.clientY + initMousePosition.y) / 2,\n          left: (e.clientX + initMousePosition.x) / 2,\n        };\n\n        showFormPopup({\n          isCreationPopup: true,\n          title: '',\n          location: '',\n          start: startDate,\n          end: endDate,\n          isAllday: type !== 'timeGrid',\n          isPrivate: false,\n          popupArrowPointPosition,\n          close: clearAll,\n        });\n      }\n\n      const gridSelectionSelector = `.${cls(GRID_SELECTION_TYPE_MAP[type])}.${cls(\n        'grid-selection'\n      )}`;\n      const gridSelectionElements = Array.from(\n        layoutContainer?.querySelectorAll(gridSelectionSelector) ?? []\n      );\n\n      eventBus.fire('selectDateTime', {\n        start: startDate.toDate(),\n        end: endDate.toDate(),\n        isAllday: type !== 'timeGrid',\n        nativeEvent: e,\n        gridSelectionElements,\n      });\n    }\n  };\n\n  const clearGridSelection = useCallback(() => {\n    setInitMousePosition(null);\n    setInitGridPosition(null);\n    setGridSelection(type, null);\n  }, [setGridSelection, type]);\n\n  const onMouseDown = useDrag(currentGridSelectionType, {\n    onInit: (e) => {\n      if (useFormPopup) {\n        setInitMousePosition({\n          x: e.clientX,\n          y: e.clientY,\n        });\n        hideAllPopup();\n      }\n\n      const gridPosition = gridPositionFinder(e);\n\n      if (isPresent(gridPosition)) {\n        setInitGridPosition(gridPosition);\n      }\n\n      if (!useFormPopup) {\n        addGridSelection(type, gridSelectionRef.current);\n      }\n    },\n    onDragStart: (e) => {\n      // The grid selection is created on mousemove in case of the drag event.\n      setGridSelectionByPosition(e);\n    },\n    onDrag: (e) => {\n      if (isSelectingGridRef.current) {\n        setGridSelectionByPosition(e);\n      }\n    },\n    onMouseUp: (e, { draggingState }) => {\n      e.stopPropagation();\n\n      const isClickEvent = draggingState <= DraggingState.INIT;\n\n      if (isClickEvent) {\n        onMouseUpWithClick(e);\n      } else {\n        onMouseUp(e, isClickEvent);\n      }\n    },\n    onPressESCKey: clearGridSelection,\n  });\n\n  useEffect(() => clearGridSelection, [clearGridSelection]);\n\n  return onMouseDown;\n}\n","import { useReducer } from 'preact/hooks';\n\nimport type { EventObject, EventState } from '@t/events';\n\nexport enum FormStateActionType {\n  init = 'init',\n  setCalendarId = 'setCalendarId',\n  setTitle = 'setTitle',\n  setLocation = 'setLocation',\n  setPrivate = 'setPrivate',\n  setAllday = 'setAllday',\n  setState = 'setState',\n  reset = 'reset',\n}\n\ntype FormStateAction =\n  | { type: FormStateActionType.init; event: EventObject }\n  | { type: FormStateActionType.setCalendarId; calendarId: string }\n  | { type: FormStateActionType.setTitle; title: string }\n  | { type: FormStateActionType.setLocation; location: string }\n  | { type: FormStateActionType.setPrivate; isPrivate: boolean }\n  | { type: FormStateActionType.setAllday; isAllday: boolean }\n  | { type: FormStateActionType.setState; state: EventState }\n  | { type: FormStateActionType.reset };\n\nexport type FormStateDispatcher = (action: FormStateAction) => void;\n\nconst defaultFormState: EventObject = {\n  title: '',\n  location: '',\n  isAllday: false,\n  isPrivate: false,\n  state: 'Busy',\n};\n\n// eslint-disable-next-line complexity\nfunction formStateReducer(state: EventObject, action: FormStateAction): EventObject {\n  switch (action.type) {\n    case FormStateActionType.init:\n      return { ...defaultFormState, ...action.event };\n    case FormStateActionType.setCalendarId:\n      return { ...state, calendarId: action.calendarId };\n    case FormStateActionType.setTitle:\n      return { ...state, title: action.title };\n    case FormStateActionType.setLocation:\n      return { ...state, location: action.location };\n    case FormStateActionType.setPrivate:\n      return { ...state, isPrivate: action.isPrivate };\n    case FormStateActionType.setAllday:\n      return { ...state, isAllday: action.isAllday };\n    case FormStateActionType.setState:\n      return { ...state, state: action.state };\n    case FormStateActionType.reset:\n      return { ...state, ...defaultFormState };\n\n    default:\n      return state;\n  }\n}\n\nexport function useFormState(initCalendarId?: string) {\n  return useReducer(formStateReducer, { calendarId: initCalendarId, ...defaultFormState });\n}\n","import { useStore } from '@src/contexts/calendarStore';\nimport { templateSelector } from '@src/selectors';\nimport type { TemplateName } from '@src/template/default';\nimport { isNil, isString } from '@src/utils/type';\n\nexport function useStringOnlyTemplate({\n  template,\n  model,\n  defaultValue = '',\n}: {\n  template: TemplateName;\n  model?: any;\n  defaultValue?: string;\n}) {\n  const templates = useStore(templateSelector);\n  const templateFunc: Function = templates[template];\n\n  if (isNil(templateFunc)) {\n    return defaultValue;\n  }\n\n  let result = templateFunc(model);\n  if (!isString(result)) {\n    result = defaultValue;\n  }\n\n  return result;\n}\n","import { useCallback, useEffect, useMemo, useRef } from 'preact/hooks';\n\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useWhen } from '@src/hooks/common/useWhen';\nimport { useCurrentPointerPositionInGrid } from '@src/hooks/event/useCurrentPointerPositionInGrid';\nimport { useDraggingEvent } from '@src/hooks/event/useDraggingEvent';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\nimport { addMilliseconds, addMinutes, MS_PER_DAY, MS_PER_THIRTY_MINUTES } from '@src/time/datetime';\nimport { isNil, isPresent } from '@src/utils/type';\n\nimport type { GridPosition, GridPositionFinder, TimeGridData } from '@t/grid';\nimport type { CalendarState } from '@t/store';\n\nconst THIRTY_MINUTES = 30;\n\nfunction getCurrentIndexByTime(time: TZDate, hourStart: number) {\n  const hour = time.getHours() - hourStart;\n  const minutes = time.getMinutes();\n\n  return hour * 2 + Math.floor(minutes / THIRTY_MINUTES);\n}\n\nfunction getMovingEventPosition({\n  draggingEvent,\n  columnDiff,\n  rowDiff,\n  timeGridDataRows,\n  currentDate,\n}: {\n  draggingEvent: EventUIModel;\n  columnDiff: number;\n  rowDiff: number;\n  timeGridDataRows: TimeGridData['rows'];\n  currentDate: TZDate;\n}) {\n  const rowHeight = timeGridDataRows[0].height;\n  const maxHeight = rowHeight * timeGridDataRows.length;\n  const millisecondsDiff = rowDiff * MS_PER_THIRTY_MINUTES + columnDiff * MS_PER_DAY;\n  const hourStart = Number(timeGridDataRows[0].startTime.split(':')[0]);\n\n  const { goingDuration = 0, comingDuration = 0 } = draggingEvent.model;\n  const goingStart = addMinutes(draggingEvent.getStarts(), -goingDuration);\n  const comingEnd = addMinutes(draggingEvent.getEnds(), comingDuration);\n  const nextStart = addMilliseconds(goingStart, millisecondsDiff);\n  const nextEnd = addMilliseconds(comingEnd, millisecondsDiff);\n  const startIndex = Math.max(getCurrentIndexByTime(nextStart, hourStart), 0);\n  const endIndex = Math.min(getCurrentIndexByTime(nextEnd, hourStart), timeGridDataRows.length - 1);\n\n  const isStartAtPrevDate =\n    nextStart.getFullYear() < currentDate.getFullYear() ||\n    nextStart.getMonth() < currentDate.getMonth() ||\n    nextStart.getDate() < currentDate.getDate();\n  const isEndAtNextDate =\n    nextEnd.getFullYear() > currentDate.getFullYear() ||\n    nextEnd.getMonth() > currentDate.getMonth() ||\n    nextEnd.getDate() > currentDate.getDate();\n  const indexDiff = endIndex - (isStartAtPrevDate ? 0 : startIndex);\n\n  const top = isStartAtPrevDate ? 0 : timeGridDataRows[startIndex].top;\n  const height = isEndAtNextDate ? maxHeight : Math.max(indexDiff, 1) * rowHeight;\n\n  return { top, height };\n}\n\nconst initXSelector = (state: CalendarState) => state.dnd.initX;\nconst initYSelector = (state: CalendarState) => state.dnd.initY;\n\nexport function useTimeGridEventMove({\n  gridPositionFinder,\n  timeGridData,\n}: {\n  gridPositionFinder: GridPositionFinder;\n  timeGridData: TimeGridData;\n}) {\n  const initX = useStore(initXSelector);\n  const initY = useStore(initYSelector);\n\n  const eventBus = useEventBus();\n  const { isDraggingEnd, isDraggingCanceled, draggingEvent, clearDraggingEvent } = useDraggingEvent(\n    'timeGrid',\n    'move'\n  );\n\n  const [currentGridPos, clearCurrentGridPos] = useCurrentPointerPositionInGrid(gridPositionFinder);\n  const initGridPosRef = useRef<GridPosition | null>(null);\n\n  useEffect(() => {\n    if (isPresent(initX) && isPresent(initY)) {\n      initGridPosRef.current = gridPositionFinder({\n        clientX: initX,\n        clientY: initY,\n      });\n    }\n  }, [gridPositionFinder, initX, initY]);\n\n  const gridDiff = useMemo(() => {\n    if (isNil(initGridPosRef.current) || isNil(currentGridPos)) {\n      return null;\n    }\n\n    return {\n      columnDiff: currentGridPos.columnIndex - initGridPosRef.current.columnIndex,\n      rowDiff: currentGridPos.rowIndex - initGridPosRef.current.rowIndex,\n    };\n  }, [currentGridPos]);\n  const startDateTime = useMemo(() => {\n    if (isNil(draggingEvent)) {\n      return null;\n    }\n\n    return draggingEvent.getStarts();\n  }, [draggingEvent]);\n\n  const clearState = useCallback(() => {\n    clearCurrentGridPos();\n    clearDraggingEvent();\n    initGridPosRef.current = null;\n  }, [clearCurrentGridPos, clearDraggingEvent]);\n\n  const nextStartTime = useMemo(() => {\n    if (isNil(gridDiff) || isNil(startDateTime)) {\n      return null;\n    }\n\n    return addMilliseconds(\n      startDateTime,\n      gridDiff.rowDiff * MS_PER_THIRTY_MINUTES + gridDiff.columnDiff * MS_PER_DAY\n    );\n  }, [gridDiff, startDateTime]);\n\n  const movingEvent = useMemo(() => {\n    if (isNil(draggingEvent) || isNil(currentGridPos) || isNil(gridDiff)) {\n      return null;\n    }\n\n    const clonedEvent = draggingEvent.clone();\n    const { top, height } = getMovingEventPosition({\n      draggingEvent: clonedEvent,\n      columnDiff: gridDiff.columnDiff,\n      rowDiff: gridDiff.rowDiff,\n      timeGridDataRows: timeGridData.rows,\n      currentDate: timeGridData.columns[currentGridPos.columnIndex].date,\n    });\n\n    clonedEvent.setUIProps({\n      left: timeGridData.columns[currentGridPos.columnIndex].left,\n      width: timeGridData.columns[currentGridPos.columnIndex].width,\n      top,\n      height,\n    });\n\n    return clonedEvent;\n  }, [currentGridPos, draggingEvent, gridDiff, timeGridData.columns, timeGridData.rows]);\n\n  useWhen(() => {\n    const shouldUpdate =\n      !isDraggingCanceled &&\n      isPresent(draggingEvent) &&\n      isPresent(currentGridPos) &&\n      isPresent(gridDiff) &&\n      isPresent(nextStartTime) &&\n      (gridDiff.rowDiff !== 0 || gridDiff.columnDiff !== 0);\n    if (shouldUpdate) {\n      const duration = draggingEvent.duration();\n      const nextEndTime = addMilliseconds(nextStartTime, duration);\n\n      eventBus.fire('beforeUpdateEvent', {\n        event: draggingEvent.model.toEventObject(),\n        changes: {\n          start: nextStartTime,\n          end: nextEndTime,\n        },\n      });\n    }\n\n    clearState();\n  }, isDraggingEnd);\n\n  return {\n    movingEvent,\n    nextStartTime,\n  };\n}\n","import type { ComponentProps } from 'preact';\nimport { useCallback, useEffect, useMemo, useState } from 'preact/hooks';\n\nimport type { ResizingGuideByColumn } from '@src/components/timeGrid/resizingGuideByColumn';\nimport { useEventBus } from '@src/contexts/eventBus';\nimport { useWhen } from '@src/hooks/common/useWhen';\nimport { useCurrentPointerPositionInGrid } from '@src/hooks/event/useCurrentPointerPositionInGrid';\nimport { useDraggingEvent } from '@src/hooks/event/useDraggingEvent';\nimport type EventUIModel from '@src/model/eventUIModel';\nimport type TZDate from '@src/time/date';\nimport { addMinutes, max, setTimeStrToDate } from '@src/time/datetime';\nimport { findLastIndex } from '@src/utils/array';\nimport { isNil, isPresent } from '@src/utils/type';\n\nimport type { TimeGridRow } from '@t/grid';\n\ntype FilteredUIModelRow = [] | [EventUIModel];\n\nexport function useTimeGridEventResize({\n  gridPositionFinder,\n  totalUIModels,\n  columnIndex,\n  timeGridData,\n}: ComponentProps<typeof ResizingGuideByColumn>) {\n  const eventBus = useEventBus();\n  const {\n    isDraggingEnd,\n    isDraggingCanceled,\n    draggingEvent: resizingStartUIModel,\n    clearDraggingEvent,\n  } = useDraggingEvent('timeGrid', 'resize');\n  const [currentGridPos, clearCurrentGridPos] = useCurrentPointerPositionInGrid(gridPositionFinder);\n  const [guideUIModel, setGuideUIModel] = useState<EventUIModel | null>(null);\n\n  const clearStates = useCallback(() => {\n    setGuideUIModel(null);\n    clearDraggingEvent();\n    clearCurrentGridPos();\n  }, [clearCurrentGridPos, clearDraggingEvent]);\n\n  const baseResizingInfo = useMemo(() => {\n    if (isNil(resizingStartUIModel)) {\n      return null;\n    }\n\n    const { columns, rows } = timeGridData;\n\n    /**\n     * Filter UIModels that are made from the target event.\n     */\n    const resizeTargetUIModelColumns = totalUIModels.map(\n      (uiModels) =>\n        uiModels.filter(\n          (uiModel) => uiModel.cid() === resizingStartUIModel.cid()\n        ) as FilteredUIModelRow\n    );\n\n    const findRowIndexOf =\n      (targetDate: TZDate, targetColumnIndex: number) => (row: TimeGridRow) => {\n        const rowStartTZDate = setTimeStrToDate(columns[targetColumnIndex].date, row.startTime);\n        const rowEndTZDate = setTimeStrToDate(\n          timeGridData.columns[targetColumnIndex].date,\n          row.endTime\n        );\n\n        return rowStartTZDate <= targetDate && targetDate < rowEndTZDate;\n      };\n\n    const eventStartDateColumnIndex = resizeTargetUIModelColumns.findIndex((row) => row.length > 0);\n    const resizingStartEventUIModel = resizeTargetUIModelColumns[\n      eventStartDateColumnIndex\n    ][0] as EventUIModel;\n    const { goingDuration = 0 } = resizingStartEventUIModel.model;\n    const renderStart = addMinutes(resizingStartEventUIModel.getStarts(), -goingDuration);\n    const eventStartDateRowIndex = Math.max(\n      rows.findIndex(findRowIndexOf(renderStart, eventStartDateColumnIndex)),\n      0\n    ); // when it is -1, the event starts before the current view.\n\n    const eventEndDateColumnIndex = findLastIndex(\n      resizeTargetUIModelColumns,\n      (row) => row.length > 0\n    );\n    const resizingEndEventUIModel = resizeTargetUIModelColumns[\n      eventEndDateColumnIndex\n    ][0] as EventUIModel;\n    const { comingDuration = 0 } = resizingEndEventUIModel.model;\n    const renderEnd = addMinutes(resizingEndEventUIModel.getStarts(), comingDuration);\n    let eventEndDateRowIndex = rows.findIndex(findRowIndexOf(renderEnd, eventEndDateColumnIndex)); // when it is -1, the event ends after the current view.\n    eventEndDateRowIndex = eventEndDateRowIndex >= 0 ? eventEndDateRowIndex : rows.length - 1;\n\n    return {\n      eventStartDateColumnIndex,\n      eventStartDateRowIndex,\n      eventEndDateColumnIndex,\n      eventEndDateRowIndex,\n      resizeTargetUIModelColumns,\n    };\n  }, [resizingStartUIModel, timeGridData, totalUIModels]);\n\n  const canCalculateGuideUIModel =\n    isPresent(baseResizingInfo) && isPresent(resizingStartUIModel) && isPresent(currentGridPos);\n\n  const oneRowHeight = useMemo(\n    () => (baseResizingInfo ? timeGridData.rows[0].height : 0),\n    [baseResizingInfo, timeGridData.rows]\n  );\n\n  // When drag an one-day event\n  useEffect(() => {\n    if (canCalculateGuideUIModel) {\n      const { eventStartDateRowIndex, eventStartDateColumnIndex, eventEndDateColumnIndex } =\n        baseResizingInfo;\n      if (\n        columnIndex === eventEndDateColumnIndex &&\n        eventStartDateColumnIndex === eventEndDateColumnIndex\n      ) {\n        const clonedUIModel = resizingStartUIModel.clone();\n        const { height, goingDurationHeight, comingDurationHeight } = clonedUIModel;\n        const newHeight = Math.max(\n          oneRowHeight +\n            (goingDurationHeight * height) / 100 +\n            (comingDurationHeight * height) / 100,\n          timeGridData.rows[currentGridPos.rowIndex].top -\n            timeGridData.rows[eventStartDateRowIndex].top +\n            oneRowHeight\n        );\n        const newGoingDurationHeight = (goingDurationHeight * height) / newHeight;\n        const newComingDurationHeight = (comingDurationHeight * height) / newHeight;\n\n        clonedUIModel.setUIProps({\n          height: newHeight,\n          goingDurationHeight: newGoingDurationHeight,\n          comingDurationHeight: newComingDurationHeight,\n          modelDurationHeight: 100 - (newGoingDurationHeight + newComingDurationHeight),\n        });\n        setGuideUIModel(clonedUIModel);\n      }\n    }\n  }, [\n    baseResizingInfo,\n    canCalculateGuideUIModel,\n    columnIndex,\n    currentGridPos,\n    resizingStartUIModel,\n    timeGridData.rows,\n    oneRowHeight,\n  ]);\n\n  // When drag a two-day event (but less than 24 hours)\n  useEffect(() => {\n    if (canCalculateGuideUIModel) {\n      const { resizeTargetUIModelColumns, eventStartDateColumnIndex, eventEndDateColumnIndex } =\n        baseResizingInfo;\n      if (\n        (columnIndex === eventStartDateColumnIndex || columnIndex === eventEndDateColumnIndex) &&\n        eventStartDateColumnIndex !== eventEndDateColumnIndex\n      ) {\n        let clonedUIModel;\n        if (columnIndex === eventStartDateColumnIndex) {\n          // first column\n          clonedUIModel = (resizeTargetUIModelColumns[columnIndex][0] as EventUIModel).clone();\n        } else {\n          // last column\n          clonedUIModel = resizingStartUIModel.clone();\n          clonedUIModel.setUIProps({\n            height: timeGridData.rows[currentGridPos.rowIndex].top + oneRowHeight,\n          });\n        }\n        setGuideUIModel(clonedUIModel);\n      }\n    }\n  }, [\n    baseResizingInfo,\n    canCalculateGuideUIModel,\n    columnIndex,\n    currentGridPos,\n    resizingStartUIModel,\n    timeGridData.rows,\n    oneRowHeight,\n  ]);\n\n  useWhen(() => {\n    const shouldUpdate =\n      !isDraggingCanceled &&\n      isPresent(baseResizingInfo) &&\n      isPresent(currentGridPos) &&\n      isPresent(resizingStartUIModel) &&\n      baseResizingInfo.eventEndDateColumnIndex === columnIndex;\n\n    if (shouldUpdate) {\n      const { comingDuration = 0 } = resizingStartUIModel.model;\n\n      const targetEndDate = addMinutes(\n        setTimeStrToDate(\n          timeGridData.columns[columnIndex].date,\n          timeGridData.rows[currentGridPos.rowIndex].endTime\n        ),\n        -comingDuration\n      );\n      const minEndDate = addMinutes(resizingStartUIModel.getStarts(), 30);\n\n      eventBus.fire('beforeUpdateEvent', {\n        event: resizingStartUIModel.model.toEventObject(),\n        changes: {\n          end: max(minEndDate, targetEndDate),\n        },\n      });\n    }\n\n    clearStates();\n  }, isDraggingEnd);\n\n  return guideUIModel;\n}\n","import { useTransientUpdate } from '@src/hooks/common/useTransientUpdate';\nimport { dndSelector } from '@src/selectors';\nimport { DraggingState } from '@src/slices/dnd';\nimport { isPresent } from '@src/utils/type';\n\nimport type { DraggingTypes } from '@t/drag';\n\nfunction isTimeGridDraggingType(draggingItemType: DraggingTypes | null) {\n  return /^(event|gridSelection)\\/timeGrid/.test(draggingItemType ?? '');\n}\n\nexport function useTimeGridScrollSync(scrollArea: HTMLDivElement | null, rowCount: number) {\n  useTransientUpdate(dndSelector, ({ y, draggingItemType, draggingState }) => {\n    if (\n      isPresent(scrollArea) &&\n      isTimeGridDraggingType(draggingItemType) &&\n      draggingState === DraggingState.DRAGGING &&\n      isPresent(y)\n    ) {\n      const { offsetTop, offsetHeight, scrollHeight } = scrollArea;\n      // Set minimum scroll boundary to the height of one row.\n      const scrollBoundary = Math.floor(scrollHeight / rowCount);\n      const layoutHeight = offsetTop + offsetHeight;\n\n      if (y < offsetTop + scrollBoundary) {\n        const scrollDiff = y - (offsetTop + scrollBoundary);\n        scrollArea.scrollTop = Math.max(0, scrollArea.scrollTop + scrollDiff);\n      } else if (y > layoutHeight - scrollBoundary) {\n        const scrollDiff = y - (layoutHeight - scrollBoundary);\n        scrollArea.scrollTop = Math.min(offsetHeight, scrollArea.scrollTop + scrollDiff);\n      }\n    }\n  });\n}\n","import { useLayoutEffect, useState } from 'preact/hooks';\n\nimport { useStore } from '@src/contexts/calendarStore';\nimport { isPresent } from '@src/utils/type';\n\nimport type { CalendarState } from '@t/store';\n\nfunction timegridHeightSelector(state: CalendarState) {\n  // TODO: change `dayGridRows` to `panels`\n  return state.weekViewLayout?.dayGridRows?.time?.height;\n}\n\nexport function useTimezoneLabelsTop(timePanel: HTMLDivElement | null): number | null {\n  const timeGridPanelHeight = useStore(timegridHeightSelector);\n  const [stickyTop, setStickyTop] = useState<number | null>(null);\n\n  useLayoutEffect(() => {\n    if (isPresent(timeGridPanelHeight) && timePanel) {\n      setStickyTop(timePanel.offsetTop);\n    }\n  }, [timeGridPanelHeight, timePanel]);\n\n  return stickyTop;\n}\n","import { useMemo } from 'preact/hooks';\n\nimport { useStore } from '@src/contexts/calendarStore';\nimport { createEventCollection } from '@src/controller/base';\nimport { useTZConverter } from '@src/hooks/timezone/useTZConverter';\nimport type EventModel from '@src/model/eventModel';\nimport { primaryTimezoneSelector } from '@src/selectors/timezone';\nimport TZDate from '@src/time/date';\nimport { isUsingDST } from '@src/time/timezone';\nimport type Collection from '@src/utils/collection';\nimport { clone } from '@src/utils/object';\n\nexport function useEventsWithTimezone(events: Collection<EventModel>) {\n  const primaryTimezoneName = useStore(primaryTimezoneSelector);\n  const tzConverter = useTZConverter();\n\n  return useMemo(() => {\n    if (primaryTimezoneName === 'Local') {\n      return events;\n    }\n\n    const isSystemUsingDST = isUsingDST(new TZDate());\n    const {\n      timedEvents = createEventCollection(),\n      totalEvents = createEventCollection(),\n    }: Record<'timedEvents' | 'totalEvents', Collection<EventModel>> = events.groupBy(\n      (eventModel) => (eventModel.category === 'time' ? 'timedEvents' : 'totalEvents')\n    );\n\n    timedEvents.each((eventModel) => {\n      const clonedEventModel = clone(eventModel);\n\n      let zonedStart = tzConverter(primaryTimezoneName, clonedEventModel.start);\n      let zonedEnd = tzConverter(primaryTimezoneName, clonedEventModel.end);\n\n      // Adjust the start and end time to the system timezone.\n      if (isSystemUsingDST) {\n        if (!isUsingDST(zonedStart)) {\n          zonedStart = zonedStart.addHours(1);\n        }\n        if (!isUsingDST(zonedEnd)) {\n          zonedEnd = zonedEnd.addHours(1);\n        }\n      } else {\n        if (isUsingDST(zonedStart)) {\n          zonedStart = zonedStart.addHours(-1);\n        }\n        if (isUsingDST(zonedEnd)) {\n          zonedEnd = zonedEnd.addHours(-1);\n        }\n      }\n\n      clonedEventModel.start = zonedStart;\n      clonedEventModel.end = zonedEnd;\n\n      totalEvents.add(clonedEventModel);\n    });\n\n    return totalEvents;\n  }, [events, primaryTimezoneName, tzConverter]);\n}\n","import { useCallback } from 'preact/hooks';\n\nimport { useStore } from '@src/contexts/calendarStore';\nimport { useTZConverter } from '@src/hooks/timezone/useTZConverter';\nimport { primaryTimezoneSelector } from '@src/selectors/timezone';\nimport type TZDate from '@src/time/date';\n\nexport function usePrimaryTimezone(): [string, () => TZDate] {\n  const primaryTimezoneName = useStore(primaryTimezoneSelector);\n  const tzConverter = useTZConverter();\n\n  const getNow = useCallback(\n    () => tzConverter(primaryTimezoneName),\n    [primaryTimezoneName, tzConverter]\n  );\n\n  return [primaryTimezoneName, getNow];\n}\n","import { useCallback } from 'preact/hooks';\n\nimport { useStore } from '@src/contexts/calendarStore';\nimport { customOffsetCalculatorSelector } from '@src/selectors/timezone';\nimport TZDate from '@src/time/date';\nimport { isPresent } from '@src/utils/type';\n\nexport function useTZConverter() {\n  const customOffsetCalculator = useStore(customOffsetCalculatorSelector);\n\n  const hasCustomOffsetCalculator = isPresent(customOffsetCalculator);\n\n  return useCallback(\n    (timezoneName: string, tzDate: TZDate = new TZDate()) =>\n      tzDate.tz(\n        hasCustomOffsetCalculator\n          ? customOffsetCalculator(timezoneName, tzDate.getTime())\n          : timezoneName\n      ),\n    [customOffsetCalculator, hasCustomOffsetCalculator]\n  );\n}\n","import { collidesWith } from '@src/helpers/events';\nimport EventUIModel from '@src/model/eventUIModel';\nimport TZDate from '@src/time/date';\nimport { compare, MS_PER_DAY, parse, toEndOfDay, toStartOfDay } from '@src/time/datetime';\nimport { stamp } from '@src/utils/stamp';\nimport { isString } from '@src/utils/type';\n\nimport type {\n  DateType,\n  EventCategory,\n  EventObject,\n  EventObjectWithDefaultValues,\n  EventState,\n} from '@t/events';\n\nexport default class EventModel implements Omit<EventObjectWithDefaultValues, '__cid'> {\n  id = '';\n\n  calendarId = '';\n\n  title = '';\n\n  body = '';\n\n  isAllday = false;\n\n  start: TZDate = new TZDate();\n\n  end: TZDate = new TZDate();\n\n  goingDuration = 0;\n\n  comingDuration = 0;\n\n  location = '';\n\n  attendees: string[] = [];\n\n  category: EventCategory = 'time';\n\n  dueDateClass = '';\n\n  recurrenceRule = '';\n\n  state: EventState = 'Busy';\n\n  isVisible = true;\n\n  isPending = false;\n\n  isFocused = false;\n\n  isReadOnly = false;\n\n  isPrivate = false;\n\n  color?: string;\n\n  backgroundColor?: string;\n\n  dragBackgroundColor?: string;\n\n  borderColor?: string;\n\n  customStyle = {};\n\n  raw: any = null;\n\n  userData?: any;\n\n  /**\n   * whether the event includes multiple dates\n   */\n  hasMultiDates = false;\n\n  constructor(event: EventObject = {}) {\n    // initialize model id\n    stamp(this);\n\n    this.init(event);\n  }\n\n  static schema = {\n    required: ['title'],\n    dateRange: ['start', 'end'],\n  };\n\n  init({\n    id = '',\n    calendarId = '',\n    title = '',\n    body = '',\n    isAllday = false,\n    start = new TZDate(),\n    end = new TZDate(),\n    goingDuration = 0,\n    comingDuration = 0,\n    location = '',\n    attendees = [],\n    category = 'time',\n    dueDateClass = '',\n    recurrenceRule = '',\n    state = 'Busy',\n    isVisible = true,\n    isPending = false,\n    isFocused = false,\n    isReadOnly = false,\n    isPrivate = false,\n    color,\n    backgroundColor,\n    dragBackgroundColor,\n    borderColor,\n    customStyle = {},\n    raw = null,\n  }: EventObject = {}) {\n    this.id = id;\n    this.calendarId = calendarId;\n    this.title = title;\n    this.body = body;\n    this.isAllday = category === 'allday' ? true : isAllday;\n    this.goingDuration = goingDuration;\n    this.comingDuration = comingDuration;\n    this.location = location;\n    this.attendees = attendees;\n    this.category = category;\n    this.dueDateClass = dueDateClass;\n    this.recurrenceRule = recurrenceRule;\n    this.state = state;\n    this.isVisible = isVisible;\n    this.isPending = isPending;\n    this.isFocused = isFocused;\n    this.isReadOnly = isReadOnly;\n    this.isPrivate = isPrivate;\n    this.color = color;\n    this.backgroundColor = backgroundColor;\n    this.dragBackgroundColor = dragBackgroundColor;\n    this.borderColor = borderColor;\n    this.customStyle = customStyle;\n    this.raw = raw;\n\n    if (this.isAllday) {\n      this.setAlldayPeriod(start, end);\n    } else {\n      this.setTimePeriod(start, end);\n    }\n\n    if (category === 'milestone' || category === 'task') {\n      this.start = new TZDate(this.end);\n    }\n  }\n\n  setAlldayPeriod(start?: DateType, end?: DateType) {\n    // If it is an all-day, only the date information of the string is used.\n    let startedAt: TZDate;\n    let endedAt: TZDate;\n\n    if (isString(start)) {\n      startedAt = parse(start.substring(0, 10));\n    } else {\n      startedAt = new TZDate(start || Date.now());\n    }\n\n    if (isString(end)) {\n      endedAt = parse(end.substring(0, 10));\n    } else {\n      endedAt = new TZDate(end || this.start);\n    }\n\n    this.start = startedAt;\n    this.start.setHours(0, 0, 0);\n    this.end = (endedAt as TZDate) || new TZDate(this.start);\n    this.end.setHours(23, 59, 59);\n  }\n\n  setTimePeriod(start?: DateType, end?: DateType) {\n    this.start = new TZDate(start || Date.now());\n    this.end = new TZDate(end || this.start);\n\n    if (!end) {\n      this.end.setMinutes(this.end.getMinutes() + 30);\n    }\n\n    // if over 24 hours\n    this.hasMultiDates = this.end.getTime() - this.start.getTime() > MS_PER_DAY;\n  }\n\n  /**\n   * @returns {TZDate} render start date.\n   */\n  getStarts() {\n    return this.start;\n  }\n\n  /**\n   * @returns {TZDate} render end date.\n   */\n  getEnds() {\n    return this.end;\n  }\n\n  /**\n   * @returns {number} instance unique id.\n   */\n  cid(): number {\n    return stamp(this);\n  }\n\n  /**\n   * Check two  are equals (means title, isAllday, start, end are same)\n   * @param {EventModel}  event model instance to compare.\n   * @returns {boolean} Return false when not same.\n   */\n  // eslint-disable-next-line complexity\n  equals(event: EventModel) {\n    if (this.id !== event.id) {\n      return false;\n    }\n\n    if (this.title !== event.title) {\n      return false;\n    }\n\n    if (this.body !== event.body) {\n      return false;\n    }\n\n    if (this.isAllday !== event.isAllday) {\n      return false;\n    }\n\n    if (compare(this.getStarts(), event.getStarts()) !== 0) {\n      return false;\n    }\n\n    if (compare(this.getEnds(), event.getEnds()) !== 0) {\n      return false;\n    }\n\n    if (this.color !== event.color) {\n      return false;\n    }\n\n    if (this.backgroundColor !== event.backgroundColor) {\n      return false;\n    }\n\n    if (this.dragBackgroundColor !== event.dragBackgroundColor) {\n      return false;\n    }\n\n    if (this.borderColor !== event.borderColor) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * return duration between start and end.\n   * @returns {number} duration milliseconds (UTC)\n   */\n  duration(): number {\n    const start = Number(this.getStarts());\n    const end = Number(this.getEnds());\n    let duration: number;\n\n    if (this.isAllday) {\n      duration = Number(toEndOfDay(end)) - Number(toStartOfDay(start));\n    } else {\n      duration = end - start;\n    }\n\n    return duration;\n  }\n\n  valueOf() {\n    return this;\n  }\n\n  /**\n   * Returns true if the given EventModel coincides with the same time as the\n   * calling EventModel.\n   * @param {EventModel | EventUIModel} event The other event to compare with this EventModel.\n   * @param {boolean = true} usingTravelTime When calculating collision, whether to calculate with travel time.\n   * @returns {boolean} If the other event occurs within the same time as the first object.\n   */\n  collidesWith(event: EventModel | EventUIModel, usingTravelTime = true) {\n    event = event instanceof EventUIModel ? event.model : event;\n\n    return collidesWith({\n      start: Number(this.getStarts()),\n      end: Number(this.getEnds()),\n      targetStart: Number(event.getStarts()),\n      targetEnd: Number(event.getEnds()),\n      goingDuration: this.goingDuration,\n      comingDuration: this.comingDuration,\n      targetGoingDuration: event.goingDuration,\n      targetComingDuration: event.comingDuration,\n      usingTravelTime, // Daygrid does not use travelTime, TimeGrid uses travelTime.\n    });\n  }\n\n  toEventObject(): EventObjectWithDefaultValues {\n    return {\n      id: this.id,\n      calendarId: this.calendarId,\n      __cid: this.cid(),\n      title: this.title,\n      body: this.body,\n      isAllday: this.isAllday,\n      start: this.start,\n      end: this.end,\n      goingDuration: this.goingDuration,\n      comingDuration: this.comingDuration,\n      location: this.location,\n      attendees: this.attendees,\n      category: this.category,\n      dueDateClass: this.dueDateClass,\n      recurrenceRule: this.recurrenceRule,\n      state: this.state,\n      isVisible: this.isVisible,\n      isPending: this.isPending,\n      isFocused: this.isFocused,\n      isReadOnly: this.isReadOnly,\n      isPrivate: this.isPrivate,\n      color: this.color,\n      backgroundColor: this.backgroundColor,\n      dragBackgroundColor: this.dragBackgroundColor,\n      borderColor: this.borderColor,\n      customStyle: this.customStyle,\n      raw: this.raw,\n    };\n  }\n\n  getColors() {\n    return {\n      color: this.color,\n      backgroundColor: this.backgroundColor,\n      dragBackgroundColor: this.dragBackgroundColor,\n      borderColor: this.borderColor,\n    };\n  }\n}\n\n// export function isBackgroundEvent({ model }: EventUIModel) {\n//   return model.category === 'background';\n// }\n\nexport function isTimeEvent({ model }: EventUIModel) {\n  const { category, isAllday, hasMultiDates } = model;\n\n  return category === 'time' && !isAllday && !hasMultiDates;\n}\n","import { collidesWith } from '@src/helpers/events';\nimport type EventModel from '@src/model/eventModel';\nimport TZDate from '@src/time/date';\nimport { pick } from '@src/utils/object';\n\ninterface EventUIProps {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  exceedLeft: boolean;\n  exceedRight: boolean;\n  croppedStart: boolean;\n  croppedEnd: boolean;\n  goingDurationHeight: number;\n  modelDurationHeight: number;\n  comingDurationHeight: number;\n  duplicateEvents: EventUIModel[];\n  duplicateEventIndex: number;\n  duplicateStarts?: TZDate;\n  duplicateEnds?: TZDate;\n  duplicateLeft: string;\n  duplicateWidth: string;\n  collapse: boolean;\n  isMain: boolean;\n}\n\nconst eventUIPropsKey: (keyof EventUIProps)[] = [\n  'top',\n  'left',\n  'width',\n  'height',\n  'exceedLeft',\n  'exceedRight',\n  'croppedStart',\n  'croppedEnd',\n  'goingDurationHeight',\n  'modelDurationHeight',\n  'comingDurationHeight',\n  'duplicateEvents',\n  'duplicateEventIndex',\n  'duplicateStarts',\n  'duplicateEnds',\n  'duplicateLeft',\n  'duplicateWidth',\n  'collapse',\n  'isMain',\n];\n\n/**\n * Set of UI-related properties for calendar event.\n * @class\n * @param {EventModel} event EventModel instance.\n */\nexport default class EventUIModel implements EventUIProps {\n  model: EventModel;\n\n  top = 0;\n\n  // If it is one of duplicate events, represents the left value of a group of duplicate events.\n  left = 0;\n\n  // If it is one of duplicate events, represents the width value of a group of duplicate events.\n  width = 0;\n\n  height = 0;\n\n  /**\n   * represent render start date used at rendering.\n   *\n   * if set null then use model's 'start' property.\n   * @type {TZDate}\n   */\n  renderStarts?: TZDate;\n\n  /**\n   * represent render end date used at rendering.\n   *\n   * if set null then use model's 'end' property.\n   * @type {TZDate}\n   */\n  renderEnds?: TZDate;\n\n  /**\n   * whether the actual start-date is before the render-start-date\n   * @type {boolean}\n   */\n  exceedLeft = false;\n\n  /**\n   * whether the actual end-date is after the render-end-date\n   * @type {boolean}\n   */\n  exceedRight = false;\n\n  /**\n   * whether the actual start-date is before the render-start-date for column\n   * @type {boolean}\n   */\n  croppedStart = false;\n\n  /**\n   * whether the actual end-date is after the render-end-date for column\n   * @type {boolean}\n   */\n  croppedEnd = false;\n\n  /**\n   * @type {number} percent\n   */\n  goingDurationHeight = 0;\n\n  /**\n   * @type {number} percent\n   */\n  modelDurationHeight = 100;\n\n  /**\n   * @type {number} percent\n   */\n  comingDurationHeight = 0;\n\n  /**\n   * the sorted list of duplicate events.\n   * @type {EventUIModel[]}\n   */\n  duplicateEvents: EventUIModel[] = [];\n\n  /**\n   * the index of this event among the duplicate events.\n   * @type {number}\n   */\n  duplicateEventIndex = -1;\n\n  /**\n   * represent the start date of a group of duplicate events.\n   *\n   * the earliest value among the duplicate events' starts and going durations.\n   * @type {TZDate}\n   */\n  duplicateStarts?: TZDate;\n\n  /**\n   * represent the end date of a group of duplicate events.\n   *\n   * the latest value among the duplicate events' ends and coming durations.\n   * @type {TZDate}\n   */\n  duplicateEnds?: TZDate;\n\n  /**\n   * represent the left value of a duplicate event.\n   * ex) calc(50% - 24px), calc(50%), ...\n   *\n   * @type {string}\n   */\n  duplicateLeft = '';\n\n  /**\n   * represent the width value of a duplicate event.\n   * ex) calc(50% - 24px), 9px, ...\n   *\n   * @type {string}\n   */\n  duplicateWidth = '';\n\n  /**\n   * whether the event is collapsed or not among the duplicate events.\n   * @type {boolean}\n   */\n  collapse = false;\n\n  /**\n   * whether the event is main or not.\n   * The main event is expanded on the initial rendering.\n   * @type {boolean}\n   */\n  isMain = false;\n\n  constructor(event: EventModel) {\n    this.model = event;\n  }\n\n  getUIProps(): EventUIProps {\n    return pick(this, ...eventUIPropsKey);\n  }\n\n  setUIProps(props: Partial<EventUIProps>) {\n    Object.assign(this, props);\n  }\n\n  /**\n   * return renderStarts property to render properly when specific event that exceed rendering date range.\n   *\n   * if renderStarts is not set. return model's start property.\n   */\n  getStarts(): TZDate {\n    if (this.renderStarts) {\n      return this.renderStarts;\n    }\n\n    return this.model.getStarts();\n  }\n\n  /**\n   * return renderStarts property to render properly when specific event that exceed rendering date range.\n   *\n   * if renderEnds is not set. return model's end property.\n   */\n  getEnds(): TZDate {\n    if (this.renderEnds) {\n      return this.renderEnds;\n    }\n\n    return this.model.getEnds();\n  }\n\n  /**\n   * @returns {number} unique number for model.\n   */\n  cid() {\n    return this.model.cid();\n  }\n\n  /**\n   * Shadowing valueOf method for event sorting.\n   */\n  valueOf(): EventModel {\n    return this.model;\n  }\n\n  /**\n   * Link duration method\n   * @returns {number} EventModel#duration result.\n   */\n  duration() {\n    return this.model.duration();\n  }\n\n  collidesWith(uiModel: EventModel | EventUIModel, usingTravelTime = true) {\n    const infos: { start: TZDate; end: TZDate; goingDuration: number; comingDuration: number }[] =\n      [];\n    [this, uiModel].forEach((event) => {\n      const isDuplicateEvent = event instanceof EventUIModel && event.duplicateEvents.length > 0;\n\n      if (isDuplicateEvent) {\n        infos.push({\n          start: event.duplicateStarts as TZDate,\n          end: event.duplicateEnds as TZDate,\n          goingDuration: 0,\n          comingDuration: 0,\n        });\n      } else {\n        infos.push({\n          start: event.getStarts(),\n          end: event.getEnds(),\n          goingDuration: event.valueOf().goingDuration,\n          comingDuration: event.valueOf().comingDuration,\n        });\n      }\n    });\n    const [thisInfo, targetInfo] = infos;\n\n    return collidesWith({\n      start: thisInfo.start.getTime(),\n      end: thisInfo.end.getTime(),\n      targetStart: targetInfo.start.getTime(),\n      targetEnd: targetInfo.end.getTime(),\n      goingDuration: thisInfo.goingDuration,\n      comingDuration: thisInfo.comingDuration,\n      targetGoingDuration: targetInfo.goingDuration,\n      targetComingDuration: targetInfo.comingDuration,\n      usingTravelTime, // Daygrid does not use travelTime, TimeGrid uses travelTime.\n    });\n  }\n\n  clone() {\n    const eventUIModelProps = this.getUIProps();\n    const clonedEventUIModel = new EventUIModel(this.model);\n    clonedEventUIModel.setUIProps(eventUIModelProps);\n\n    if (this.renderStarts) {\n      clonedEventUIModel.renderStarts = new TZDate(this.renderStarts);\n    }\n\n    if (this.renderEnds) {\n      clonedEventUIModel.renderEnds = new TZDate(this.renderEnds);\n    }\n\n    return clonedEventUIModel;\n  }\n}\n","import type { CalendarState } from '@t/store';\n\nexport function topLevelStateSelector<State, Group extends keyof State>(\n  group: Group\n): (state: State) => State[Group] {\n  return (state: State) => state[group];\n}\n\nexport const popupSelector = topLevelStateSelector<CalendarState, 'popup'>('popup');\nexport const calendarSelector = topLevelStateSelector<CalendarState, 'calendar'>('calendar');\nexport const weekViewLayoutSelector = topLevelStateSelector<CalendarState, 'weekViewLayout'>(\n  'weekViewLayout'\n);\nexport const templateSelector = topLevelStateSelector<CalendarState, 'template'>('template');\nexport const viewSelector = topLevelStateSelector<CalendarState, 'view'>('view');\nexport const optionsSelector = topLevelStateSelector<CalendarState, 'options'>('options');\nexport const dndSelector = topLevelStateSelector<CalendarState, 'dnd'>('dnd');\n","import type { CalendarState } from '@t/store';\n\nexport const monthVisibleEventCountSelector = (state: CalendarState) =>\n  state.options.month.visibleEventCount ?? 6;\n\nexport const showNowIndicatorOptionSelector = (state: CalendarState) =>\n  state.options.week.showNowIndicator;\n\nexport const showTimezoneCollapseButtonOptionSelector = (state: CalendarState) =>\n  state.options.week.showTimezoneCollapseButton ?? false;\n\nexport const timezonesCollapsedOptionSelector = (state: CalendarState) =>\n  state.options.week.timezonesCollapsed ?? false;\n\nexport const allOptionSelector = (state: CalendarState) => state;\n","import { PopupType } from '@src/slices/popup';\n\nimport type { CalendarState, PopupParamMap } from '@t/store';\n\nexport const eventFormPopupParamSelector = (state: CalendarState) => {\n  return state.popup[PopupType.Form] as PopupParamMap[PopupType.Form];\n};\n\nexport const eventDetailPopupParamSelector = (state: CalendarState) => {\n  return state.popup[PopupType.Detail] as PopupParamMap[PopupType.Detail];\n};\n\nexport const seeMorePopupParamSelector = (state: CalendarState) => {\n  return state.popup[PopupType.SeeMore] as PopupParamMap[PopupType.SeeMore];\n};\n\n","import { topLevelStateSelector } from '@src/selectors';\n\nimport type { ThemeState } from '@t/theme';\n\n/**\n * Selectors for the theme state.\n * Use selectors with `useTheme` hooks only.\n */\nexport const commonThemeSelector = topLevelStateSelector<ThemeState, 'common'>('common');\nexport const weekThemeSelector = topLevelStateSelector<ThemeState, 'week'>('week');\nexport const monthThemeSelector = topLevelStateSelector<ThemeState, 'month'>('month');\n\nexport const weekDayGridLeftSelector = (theme: ThemeState) => theme.week.dayGridLeft;\nexport const weekTimeGridLeftSelector = (theme: ThemeState) => theme.week.timeGridLeft;\n\nexport const monthMoreViewSelector = (theme: ThemeState) => theme.month.moreView;\nexport const monthGridCellSelector = (theme: ThemeState) => theme.month.gridCell;\n","import type { CalendarState } from '@t/store';\n\nexport const primaryTimezoneSelector = (state: CalendarState) =>\n  state.options?.timezone?.zones?.[0]?.timezoneName ?? 'Local';\n\nexport const customOffsetCalculatorSelector = (state: CalendarState) =>\n  state.options?.timezone?.customOffsetCalculator;\n\nexport const timezonesSelector = (state: CalendarState) => state.options.timezone.zones ?? [];\n","import produce from 'immer';\n\nimport {\n  clearEvents,\n  createEventCollection,\n  createEvents,\n  deleteEvent,\n  updateEvent,\n} from '@src/controller/base';\nimport type EventModel from '@src/model/eventModel';\n\nimport type { CalendarData, EventObject } from '@t/events';\nimport type { CalendarColor, CalendarInfo } from '@t/options';\nimport type { CalendarState, CalendarStore, SetState } from '@t/store';\n\nexport type CalendarSlice = { calendar: CalendarData };\n\ntype UpdateEventParams = { event: EventModel; eventData: EventObject };\n\nexport type CalendarDispatchers = {\n  createEvents: (events: EventObject[]) => void;\n  updateEvent: (params: UpdateEventParams) => void;\n  deleteEvent: (event: EventModel) => void;\n  clearEvents: () => void;\n  setCalendars: (calendars: CalendarInfo[]) => void;\n  setCalendarColor: (calendarId: string, colorOptions: CalendarColor) => void;\n  setCalendarVisibility: (calendarIds: string[], isVisible: boolean) => void;\n};\n\nexport function createCalendarSlice(calendars: CalendarInfo[] = []): CalendarSlice {\n  return {\n    calendar: {\n      calendars,\n      events: createEventCollection(),\n      idsOfDay: {},\n    },\n  };\n}\n\nexport function createCalendarDispatchers(set: SetState<CalendarStore>): CalendarDispatchers {\n  return {\n    createEvents: (events) =>\n      set(\n        produce<CalendarState>((state) => {\n          createEvents(state.calendar as Parameters<typeof createEvents>[0], events);\n        })\n      ),\n    updateEvent: ({ event, eventData }) =>\n      set(\n        produce<CalendarState>((state) => {\n          updateEvent(\n            state.calendar as Parameters<typeof updateEvent>[0],\n            event.id,\n            event.calendarId,\n            eventData\n          );\n        })\n      ),\n    deleteEvent: (event) =>\n      set(\n        produce<CalendarState>((state) => {\n          deleteEvent(state.calendar as Parameters<typeof deleteEvent>[0], event);\n        })\n      ),\n    clearEvents: () =>\n      set(\n        produce<CalendarState>((state) => {\n          clearEvents(state.calendar as Parameters<typeof clearEvents>[0]);\n        })\n      ),\n    setCalendars: (calendars) =>\n      set(\n        produce<CalendarState>((state) => {\n          state.calendar.calendars = calendars;\n        })\n      ),\n    setCalendarColor: (calendarId, colorOptions) =>\n      set(\n        produce<CalendarState>((state) => {\n          const calendars = state.calendar.calendars.map((calendar) => {\n            if (calendar.id === calendarId) {\n              return {\n                ...calendar,\n                ...colorOptions,\n              };\n            }\n\n            return calendar;\n          });\n          const events = state.calendar.events.toArray().map((event) => {\n            if (event.calendarId === calendarId) {\n              event.color = colorOptions.color ?? event.color;\n              event.backgroundColor = colorOptions.backgroundColor ?? event.backgroundColor;\n              event.borderColor = colorOptions.borderColor ?? event.borderColor;\n              event.dragBackgroundColor =\n                colorOptions.dragBackgroundColor ?? event.dragBackgroundColor;\n            }\n\n            return event;\n          });\n          const collection = createEventCollection<EventModel>(...events);\n\n          state.calendar.calendars = calendars;\n          state.calendar.events = collection;\n        })\n      ),\n    setCalendarVisibility: (calendarIds, isVisible) =>\n      set(\n        produce<CalendarState>((state) => {\n          const events = state.calendar.events.toArray();\n\n          state.calendar.events = createEventCollection<EventModel>(\n            ...events.map((event) => {\n              if (calendarIds.includes(event.calendarId)) {\n                event.isVisible = isVisible;\n              }\n\n              return event;\n            })\n          );\n        })\n      ),\n  };\n}\n","import produce from 'immer';\n\nimport type EventUIModel from '@src/model/eventUIModel';\n\nimport type { DraggingTypes } from '@t/drag';\nimport type { CalendarState, CalendarStore, SetState } from '@t/store';\n\nexport enum DraggingState {\n  IDLE,\n  INIT,\n  DRAGGING,\n  CANCELED,\n}\n\nexport interface DndSlice {\n  dnd: {\n    draggingItemType: DraggingTypes | null;\n    draggingState: DraggingState;\n    initX: number | null;\n    initY: number | null;\n    x: number | null;\n    y: number | null;\n    draggingEventUIModel: EventUIModel | null;\n  };\n}\n\nexport interface DndDispatchers {\n  initDrag: (initState: Pick<DndSlice['dnd'], 'initX' | 'initY' | 'draggingItemType'>) => void;\n  setDragging: (newState: Partial<Omit<DndSlice['dnd'], 'draggingState'>>) => void;\n  cancelDrag: () => void;\n  reset: () => void;\n  setDraggingEventUIModel: (eventUIModel: EventUIModel | null) => void;\n}\n\nexport function createDndSlice(): DndSlice {\n  return {\n    dnd: {\n      draggingItemType: null,\n      draggingState: DraggingState.IDLE,\n      initX: null,\n      initY: null,\n      x: null,\n      y: null,\n      draggingEventUIModel: null,\n    },\n  };\n}\n\nexport function createDndDispatchers(set: SetState<CalendarStore>): DndDispatchers {\n  return {\n    initDrag: (initState) => {\n      set(\n        produce<CalendarState>((state) => {\n          state.dnd = {\n            ...state.dnd,\n            ...initState,\n            draggingState: DraggingState.INIT,\n          };\n        })\n      );\n    },\n    setDragging: (newState) => {\n      set(\n        produce<CalendarState>((state) => {\n          state.dnd = {\n            ...state.dnd,\n            ...newState,\n            draggingState: DraggingState.DRAGGING,\n          };\n        })\n      );\n    },\n    cancelDrag: () => {\n      set(\n        produce<CalendarState>((state) => {\n          state.dnd = createDndSlice().dnd;\n          state.dnd.draggingState = DraggingState.CANCELED;\n        })\n      );\n    },\n    reset: () => {\n      set(\n        produce<CalendarState>((state) => {\n          state.dnd = createDndSlice().dnd;\n        })\n      );\n    },\n    setDraggingEventUIModel: (eventUIModel) => {\n      set(\n        produce<CalendarState>((state) => {\n          state.dnd.draggingEventUIModel = eventUIModel?.clone() ?? null;\n        })\n      );\n    },\n  };\n}\n","import produce from 'immer';\n\nimport type { GridSelectionData } from '@t/components/gridSelection';\nimport type { CalendarState, CalendarStore, SetState } from '@t/store';\n\nexport type GridSelectionSlice = {\n  gridSelection: {\n    dayGridMonth: GridSelectionData | null;\n    dayGridWeek: GridSelectionData | null;\n    timeGrid: GridSelectionData | null;\n    accumulated: {\n      dayGridMonth: GridSelectionData[] | [];\n    };\n  };\n};\n\nexport type GridSelectionType = Exclude<keyof GridSelectionSlice['gridSelection'], 'accumulated'>;\n\nexport type GridSelectionDispatchers = {\n  setGridSelection: (type: GridSelectionType, gridSelection: GridSelectionData | null) => void;\n  addGridSelection: (type: GridSelectionType, gridSelection: GridSelectionData | null) => void;\n  clearAll: () => void;\n};\n\nexport function createGridSelectionSlice(): GridSelectionSlice {\n  return {\n    gridSelection: {\n      dayGridMonth: null,\n      dayGridWeek: null,\n      timeGrid: null,\n      accumulated: {\n        dayGridMonth: [],\n      },\n    },\n  };\n}\n\nexport function createGridSelectionDispatchers(\n  set: SetState<CalendarStore>\n): GridSelectionDispatchers {\n  return {\n    setGridSelection: (type, gridSelection) => {\n      set(\n        produce<CalendarState>((state) => {\n          state.gridSelection[type] = gridSelection;\n        })\n      );\n    },\n    addGridSelection: (type, gridSelection) => {\n      set(\n        produce<CalendarState>((state) => {\n          if (type === 'dayGridMonth' && gridSelection) {\n            state.gridSelection.accumulated[type] = [\n              ...state.gridSelection.accumulated[type],\n              gridSelection,\n            ];\n            state.gridSelection.dayGridMonth = null;\n          }\n        })\n      );\n    },\n    clearAll: () =>\n      set(\n        produce<CalendarState>((state) => {\n          state.gridSelection = createGridSelectionSlice().gridSelection;\n        })\n      ),\n  };\n}\n","import produce from 'immer';\n\nimport { DEFAULT_DUPLICATE_EVENT_CID, DEFAULT_RESIZER_LENGTH } from '@src/constants/layout';\nimport { DEFAULT_PANEL_HEIGHT } from '@src/constants/style';\n\nimport type { CalendarState, CalendarStore, SetState } from '@t/store';\n\nexport type WeekGridRows = 'milestone' | 'task' | 'allday' | 'time' | string;\n\n// @TODO: Change name to layout & merge slice into layout\nexport type WeekViewLayoutSlice = {\n  layout: number;\n  weekViewLayout: {\n    lastPanelType: string | null;\n    dayGridRows: {\n      [row in WeekGridRows]: {\n        height: number;\n      };\n    };\n    selectedDuplicateEventCid: number;\n  };\n};\n\ntype UpdateGridRowHeightParams = { rowName: WeekGridRows; height: number };\ntype UpdateGridRowHeightByDiffParams = { rowName: WeekGridRows; diff: number };\n\nexport type WeekViewLayoutDispatchers = {\n  setLastPanelType: (type: string | null) => void;\n  updateLayoutHeight: (height: number) => void;\n  updateDayGridRowHeight: (params: UpdateGridRowHeightParams) => void;\n  updateDayGridRowHeightByDiff: (params: UpdateGridRowHeightByDiffParams) => void;\n  setSelectedDuplicateEventCid: (cid?: number) => void;\n};\n\nfunction getRestPanelHeight(\n  dayGridRowsState: WeekViewLayoutSlice['weekViewLayout']['dayGridRows'],\n  lastPanelType: string,\n  initHeight: number\n) {\n  return Object.keys(dayGridRowsState).reduce((acc, rowName) => {\n    if (rowName === lastPanelType) {\n      return acc;\n    }\n\n    return acc - dayGridRowsState[rowName].height - DEFAULT_RESIZER_LENGTH;\n  }, initHeight);\n}\n\nexport function createWeekViewLayoutSlice(): WeekViewLayoutSlice {\n  return {\n    layout: 500,\n    weekViewLayout: {\n      lastPanelType: null,\n      dayGridRows: {} as WeekViewLayoutSlice['weekViewLayout']['dayGridRows'],\n      selectedDuplicateEventCid: DEFAULT_DUPLICATE_EVENT_CID,\n    },\n  };\n}\n\nexport function createWeekViewLayoutDispatchers(\n  set: SetState<CalendarStore>\n): WeekViewLayoutDispatchers {\n  return {\n    setLastPanelType: (type) => {\n      set(\n        produce<CalendarState>((state) => {\n          state.weekViewLayout.lastPanelType = type;\n\n          if (type) {\n            state.weekViewLayout.dayGridRows[type].height = getRestPanelHeight(\n              state.weekViewLayout.dayGridRows,\n              type,\n              state.layout\n            );\n          }\n        })\n      );\n    },\n    updateLayoutHeight: (height) =>\n      set(\n        produce<CalendarState>((state) => {\n          const { lastPanelType } = state.weekViewLayout;\n\n          state.layout = height;\n          if (lastPanelType) {\n            state.weekViewLayout.dayGridRows[lastPanelType].height = getRestPanelHeight(\n              state.weekViewLayout.dayGridRows,\n              lastPanelType,\n              height\n            );\n          }\n        })\n      ),\n    updateDayGridRowHeight: ({ rowName, height }) =>\n      set(\n        produce<CalendarState>((state) => {\n          const { lastPanelType } = state.weekViewLayout;\n\n          state.weekViewLayout.dayGridRows[rowName] = { height };\n          if (lastPanelType) {\n            state.weekViewLayout.dayGridRows[lastPanelType].height = getRestPanelHeight(\n              state.weekViewLayout.dayGridRows,\n              lastPanelType,\n              state.layout\n            );\n          }\n        })\n      ),\n    updateDayGridRowHeightByDiff: ({ rowName, diff }) =>\n      set(\n        produce<CalendarState>((state) => {\n          const { lastPanelType } = state.weekViewLayout;\n          const height =\n            state.weekViewLayout.dayGridRows?.[rowName]?.height ?? DEFAULT_PANEL_HEIGHT;\n\n          state.weekViewLayout.dayGridRows[rowName] = { height: height + diff };\n          if (lastPanelType) {\n            state.weekViewLayout.dayGridRows[lastPanelType].height = getRestPanelHeight(\n              state.weekViewLayout.dayGridRows,\n              lastPanelType,\n              state.layout\n            );\n          }\n        })\n      ),\n    setSelectedDuplicateEventCid: (cid) =>\n      set(\n        produce<CalendarState>((state) => {\n          state.weekViewLayout.selectedDuplicateEventCid = cid ?? DEFAULT_DUPLICATE_EVENT_CID;\n        })\n      ),\n  };\n}\n","import produce from 'immer';\n\nimport { DEFAULT_DAY_NAMES } from '@src/helpers/dayName';\nimport { compare, Day } from '@src/time/datetime';\nimport { last } from '@src/utils/array';\nimport { mergeObject } from '@src/utils/object';\nimport { isBoolean } from '@src/utils/type';\n\nimport type { EventObject, EventObjectWithDefaultValues } from '@t/events';\nimport type {\n  CollapseDuplicateEventsOptions,\n  GridSelectionOptions,\n  Options,\n  TimezoneOptions,\n} from '@t/options';\nimport type {\n  CalendarMonthOptions,\n  CalendarState,\n  CalendarStore,\n  CalendarWeekOptions,\n  SetState,\n} from '@t/store';\n\nfunction initializeCollapseDuplicateEvents(\n  options: boolean | Partial<CollapseDuplicateEventsOptions>\n): boolean | CollapseDuplicateEventsOptions {\n  if (!options) {\n    return false;\n  }\n\n  const initialCollapseDuplicateEvents = {\n    getDuplicateEvents: (\n      targetEvent: EventObjectWithDefaultValues,\n      events: EventObjectWithDefaultValues[]\n    ) =>\n      events\n        .filter(\n          (event: EventObjectWithDefaultValues) =>\n            event.title === targetEvent.title &&\n            compare(event.start, targetEvent.start) === 0 &&\n            compare(event.end, targetEvent.end) === 0\n        )\n        .sort((a, b) => (a.calendarId > b.calendarId ? 1 : -1)),\n    getMainEvent: (events: EventObjectWithDefaultValues[]) => last(events),\n  };\n\n  if (isBoolean(options)) {\n    return initialCollapseDuplicateEvents;\n  }\n\n  return { ...initialCollapseDuplicateEvents, ...options };\n}\n\nfunction initializeWeekOptions(weekOptions: Options['week'] = {}): CalendarWeekOptions {\n  const week: CalendarWeekOptions = {\n    startDayOfWeek: Day.SUN,\n    dayNames: [],\n    narrowWeekend: false,\n    workweek: false,\n    showNowIndicator: true,\n    showTimezoneCollapseButton: false,\n    timezonesCollapsed: false,\n    hourStart: 0,\n    hourEnd: 24,\n    eventView: true,\n    taskView: true,\n    collapseDuplicateEvents: false,\n    ...weekOptions,\n  };\n\n  week.collapseDuplicateEvents = initializeCollapseDuplicateEvents(week.collapseDuplicateEvents);\n\n  return week;\n}\n\nfunction initializeTimezoneOptions(timezoneOptions: Options['timezone'] = {}): TimezoneOptions {\n  return {\n    zones: [],\n    ...timezoneOptions,\n  };\n}\n\nfunction initializeMonthOptions(monthOptions: Options['month'] = {}): CalendarMonthOptions {\n  const month: CalendarMonthOptions = {\n    dayNames: [],\n    visibleWeeksCount: 0,\n    workweek: false,\n    narrowWeekend: false,\n    startDayOfWeek: Day.SUN,\n    isAlways6Weeks: true,\n    visibleEventCount: 6,\n    ...monthOptions,\n  };\n\n  if (month.dayNames.length === 0) {\n    month.dayNames = DEFAULT_DAY_NAMES.slice() as Exclude<CalendarMonthOptions['dayNames'], []>;\n  }\n\n  return month;\n}\n\nexport function initializeGridSelectionOptions(\n  options: Options['gridSelection']\n): GridSelectionOptions {\n  if (isBoolean(options)) {\n    return {\n      enableDblClick: options,\n      enableClick: options,\n    };\n  }\n\n  return {\n    enableDblClick: true,\n    enableClick: true,\n    ...options,\n  };\n}\n\nconst initialEventFilter = (event: EventObject) => !!event.isVisible;\n\n// TODO: some of options has default values. so it should be `Required` type.\n// But it needs a complex type such as `DeepRequired`.\n// maybe leveraging library like `ts-essential` might be helpful.\nexport type OptionsSlice = {\n  options: Omit<Required<Options>, 'template' | 'calendars' | 'theme'> & {\n    gridSelection: GridSelectionOptions;\n  };\n};\n\nexport type OptionsDispatchers = {\n  setOptions: (newOptions: Partial<OptionsSlice['options']>) => void;\n};\n\n// eslint-disable-next-line complexity\nexport function createOptionsSlice(options: Options = {}): OptionsSlice {\n  \n  return {\n    options: {\n      defaultView: options.defaultView ?? 'week',\n      useFormPopup: options.useFormPopup ?? false,\n      useDetailPopup: options.useDetailPopup ?? false,\n      isReadOnly: options.isReadOnly ?? false,\n      week: initializeWeekOptions(options.week),\n      month: initializeMonthOptions(options.month),\n      gridSelection: initializeGridSelectionOptions(options.gridSelection),\n      usageStatistics: options.usageStatistics ?? true,\n      eventFilter: options.eventFilter ?? initialEventFilter,\n      timezone: initializeTimezoneOptions(options.timezone),\n      allOptions: options,\n    },\n  };\n}\n\nexport function createOptionsDispatchers(set: SetState<CalendarStore>): OptionsDispatchers {\n  return {\n    setOptions: (newOptions: Partial<OptionsSlice['options']> = {}) =>\n      set(\n        produce<CalendarState>((state) => {\n          if (newOptions.gridSelection) {\n            newOptions.gridSelection = initializeGridSelectionOptions(newOptions.gridSelection);\n          }\n\n          if (newOptions.week?.collapseDuplicateEvents) {\n            newOptions.week.collapseDuplicateEvents = initializeCollapseDuplicateEvents(\n              newOptions.week.collapseDuplicateEvents\n            );\n          }\n\n          mergeObject(state.options, newOptions);\n        })\n      ),\n  };\n}\n","import produce from 'immer';\n\nimport type { CalendarState, CalendarStore, PopupParamMap, SetState } from '@t/store';\n\nexport enum PopupType {\n  SeeMore = 'seeMore',\n  Form = 'form',\n  Detail = 'detail',\n}\n\nexport type PopupSlice = {\n  popup: {\n    [PopupType.SeeMore]: PopupParamMap[PopupType.SeeMore] | null;\n    [PopupType.Form]: PopupParamMap[PopupType.Form] | null;\n    [PopupType.Detail]: PopupParamMap[PopupType.Detail] | null;\n  };\n};\n\nexport type PopupDispatchers = {\n  showSeeMorePopup: (param: PopupParamMap[PopupType.SeeMore]) => void;\n  showFormPopup: (param: PopupParamMap[PopupType.Form]) => void;\n  showDetailPopup: (\n    param: PopupParamMap[PopupType.Detail],\n    isOpenedInSeeMorePopup: boolean\n  ) => void;\n  hideSeeMorePopup: () => void;\n  hideFormPopup: () => void;\n  hideDetailPopup: () => void;\n  hideAllPopup: () => void;\n};\n\nexport function createPopupSlice(): PopupSlice {\n  return {\n    popup: {\n      [PopupType.SeeMore]: null,\n      [PopupType.Form]: null,\n      [PopupType.Detail]: null,\n    },\n  };\n}\n\nexport function createPopupDispatchers(set: SetState<CalendarStore>): PopupDispatchers {\n  return {\n    showSeeMorePopup: (param: PopupParamMap[PopupType.SeeMore]) =>\n      set(\n        produce<CalendarState>((state) => {\n          state.popup[PopupType.SeeMore] = param;\n          state.popup[PopupType.Form] = null;\n          state.popup[PopupType.Detail] = null;\n        })\n      ),\n    showFormPopup: (param: PopupParamMap[PopupType.Form]) =>\n      set(\n        produce<CalendarState>((state) => {\n          state.popup[PopupType.Form] = param;\n          state.popup[PopupType.SeeMore] = null;\n          state.popup[PopupType.Detail] = null;\n        })\n      ),\n    showDetailPopup: (param: PopupParamMap[PopupType.Detail], isOpenedInSeeMorePopup) =>\n      set(\n        produce<CalendarState>((state) => {\n          state.popup[PopupType.Detail] = param;\n          state.popup[PopupType.Form] = null;\n          if (!isOpenedInSeeMorePopup) {\n            state.popup[PopupType.SeeMore] = null;\n          }\n        })\n      ),\n    hideSeeMorePopup: () =>\n      set(\n        produce<CalendarState>((state) => {\n          state.popup[PopupType.SeeMore] = null;\n        })\n      ),\n    hideFormPopup: () =>\n      set(\n        produce<CalendarState>((state) => {\n          state.popup[PopupType.Form] = null;\n        })\n      ),\n    hideDetailPopup: () =>\n      set(\n        produce<CalendarState>((state) => {\n          state.popup[PopupType.Detail] = null;\n        })\n      ),\n    hideAllPopup: () =>\n      set(\n        produce<CalendarState>((state) => {\n          state.popup[PopupType.SeeMore] = null;\n          state.popup[PopupType.Form] = null;\n          state.popup[PopupType.Detail] = null;\n        })\n      ),\n  };\n}\n","import produce from 'immer';\n\nimport { templates } from '@src/template/default';\n\nimport type { CalendarState, CalendarStore, SetState } from '@t/store';\nimport type { Template, TemplateConfig } from '@t/template';\n\nexport type TemplateSlice = { template: Template };\n\nexport type TemplateDispatchers = {\n  setTemplate: (template: TemplateConfig) => void;\n};\n\nexport function createTemplateSlice(templateConfig: TemplateConfig = {}): TemplateSlice {\n  return {\n    template: {\n      ...templates,\n      ...templateConfig,\n    },\n  };\n}\n\nexport function createTemplateDispatchers(set: SetState<CalendarStore>): TemplateDispatchers {\n  return {\n    setTemplate: (template: TemplateConfig) =>\n      set(\n        produce<CalendarState>((state) => {\n          state.template = {\n            ...state.template,\n            ...template,\n          };\n        })\n      ),\n  };\n}\n","import produce from 'immer';\n\nimport TZDate from '@src/time/date';\nimport { toStartOfDay } from '@src/time/datetime';\n\nimport type { ViewType } from '@t/options';\nimport type { CalendarState, CalendarStore, SetState } from '@t/store';\n\nexport type ViewSlice = {\n  view: {\n    currentView: ViewType;\n    renderDate: TZDate;\n  };\n};\n\nexport type ViewDispatchers = {\n  changeView: (view: ViewType) => void;\n  setRenderDate: (date: TZDate) => void;\n};\n\nexport function createViewSlice(initialView: ViewType = 'week'): ViewSlice {\n  const renderDate = new TZDate();\n  renderDate.setHours(0, 0, 0, 0);\n\n  return {\n    view: {\n      currentView: initialView,\n      renderDate,\n    },\n  };\n}\n\nexport function createViewDispatchers(set: SetState<CalendarStore>): ViewDispatchers {\n  return {\n    changeView: (nextView: ViewType) =>\n      set(\n        produce<CalendarState>((state) => {\n          state.view.currentView = nextView;\n        })\n      ),\n    setRenderDate: (date: TZDate) =>\n      set(\n        produce<CalendarState>((state) => {\n          state.view.renderDate = toStartOfDay(date);\n        })\n      ),\n  };\n}\n","import { createContext, createElement } from 'preact';\nimport { useContext, useEffect, useLayoutEffect, useMemo, useReducer, useRef } from 'preact/hooks';\n\nimport { isNil, isUndefined } from '@src/utils/type';\n\nimport type { PropsWithChildren } from '@t/components/common';\nimport type { EqualityChecker, InternalStoreAPI, StateSelector, StateWithActions } from '@t/store';\n\n/**\n * Inspired by Zustand\n *\n * See more: https://github.com/pmndrs/zustand\n */\n\nconst isSSR = isUndefined(window) || !window.navigator;\nconst useIsomorphicLayoutEffect = isSSR ? useEffect : useLayoutEffect;\n\nexport function createStoreContext<State extends StateWithActions>() {\n  const StoreContext = createContext<InternalStoreAPI<State> | null>(null);\n\n  function StoreProvider({\n    children,\n    store,\n  }: PropsWithChildren<{ store: InternalStoreAPI<State> }>) {\n    return createElement(StoreContext.Provider, { value: store, children });\n  }\n\n  const useStore = <StateSlice>(\n    selector: StateSelector<State, StateSlice>,\n    equalityFn: EqualityChecker<StateSlice> = Object.is\n  ) => {\n    const storeCtx = useContext(StoreContext);\n\n    if (isNil(storeCtx)) {\n      throw new Error('StoreProvider is not found');\n    }\n\n    // a little trick to invoke re-render to notify hook consumers(usually components)\n    const [, notify] = useReducer((notifyCount) => notifyCount + 1, 0) as [never, () => void];\n\n    const state = storeCtx.getState();\n    const stateRef = useRef(state);\n    const selectorRef = useRef(selector);\n    const equalityFnRef = useRef(equalityFn);\n    const hasErrorRef = useRef(false);\n    // `null` can be a valid state slice.\n    const currentSliceRef = useRef<StateSlice | undefined>();\n\n    if (isUndefined(currentSliceRef.current)) {\n      currentSliceRef.current = selector(state);\n    }\n\n    let newStateSlice: StateSlice | undefined;\n    let hasNewStateSlice = false;\n\n    const shouldGetNewSlice =\n      stateRef.current !== state ||\n      selectorRef.current !== selector ||\n      equalityFnRef.current !== equalityFn ||\n      hasErrorRef.current;\n    if (shouldGetNewSlice) {\n      newStateSlice = selector(state);\n      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);\n    }\n\n    useIsomorphicLayoutEffect(() => {\n      if (hasNewStateSlice) {\n        currentSliceRef.current = newStateSlice as StateSlice;\n      }\n\n      stateRef.current = state;\n      selectorRef.current = selector;\n      equalityFnRef.current = equalityFn;\n      hasErrorRef.current = false;\n    });\n\n    // NOTE: There is edge case that state is changed before subscription\n    const stateBeforeSubscriptionRef = useRef(state);\n    useIsomorphicLayoutEffect(() => {\n      const listener = () => {\n        try {\n          const nextState = storeCtx.getState();\n          const nextStateSlice = selectorRef.current(nextState);\n\n          const shouldUpdateState = !equalityFnRef.current(\n            currentSliceRef.current as StateSlice,\n            nextStateSlice\n          );\n          if (shouldUpdateState) {\n            stateRef.current = nextState;\n            currentSliceRef.current = newStateSlice;\n\n            notify();\n          }\n        } catch (e: unknown) {\n          // This will be rarely happened, unless we don't pass the arguments to actions properly.\n          // eslint-disable-next-line no-console\n          console.error('[toastui-calendar] failed to update state', (e as Error)?.message);\n          hasErrorRef.current = true;\n          notify();\n        }\n      };\n\n      const unsubscribe = storeCtx.subscribe(listener);\n      if (storeCtx.getState() !== stateBeforeSubscriptionRef.current) {\n        listener();\n      }\n\n      return unsubscribe;\n    }, []);\n\n    return hasNewStateSlice ? (newStateSlice as StateSlice) : currentSliceRef.current;\n  };\n\n  /**\n   * For handling often occurring state changes (Transient updates)\n   * See more: https://github.com/pmndrs/zustand/blob/master/readme.md#transient-updates-for-often-occuring-state-changes\n   */\n  const useInternalStore = () => {\n    const storeCtx = useContext(StoreContext);\n\n    if (isNil(storeCtx)) {\n      throw new Error('StoreProvider is not found');\n    }\n\n    return useMemo(() => storeCtx, [storeCtx]);\n  };\n\n  return {\n    StoreProvider,\n    useStore,\n    useInternalStore,\n  };\n}\n","import type {\n  EqualityChecker,\n  GetState,\n  InternalStoreAPI,\n  SetState,\n  StateListener,\n  StateSelector,\n  StateSliceListener,\n  StateWithActions,\n  StoreCreator,\n  Subscribe,\n} from '@t/store';\n\nexport function createStore<State extends StateWithActions>(\n  storeCreator: StoreCreator<State>\n): InternalStoreAPI<State> {\n  let state: State;\n  const listeners = new Set<StateListener<State>>();\n\n  const setState: SetState<State> = (partialStateCreator) => {\n    const nextState = partialStateCreator(state);\n\n    if (nextState !== state) {\n      const previousState = state;\n      state = { ...state, ...nextState };\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n\n  const getState: GetState<State> = () => state;\n\n  const subscribe: Subscribe<State> = <StateSlice>(\n    listener: StateListener<State> | StateSliceListener<StateSlice>,\n    selector?: StateSelector<State, StateSlice>,\n    equalityFn?: EqualityChecker<StateSlice>\n  ) => {\n    let _listener = listener;\n\n    if (selector) {\n      let currentSlice: StateSlice = selector(state);\n      const _equalityFn = equalityFn ?? Object.is;\n      _listener = () => {\n        const nextSlice = selector(state);\n        if (!_equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          currentSlice = nextSlice;\n          (listener as StateSliceListener<StateSlice>)(currentSlice, previousSlice);\n        }\n      };\n    }\n\n    listeners.add(_listener as StateListener<State>);\n\n    // eslint-disable-next-line dot-notation\n    return () => listeners.delete(_listener as StateListener<State>);\n  };\n\n  const clearListeners = () => listeners.clear();\n\n  const internal = { setState, getState, subscribe, clearListeners };\n  state = storeCreator(setState, getState, internal);\n\n  return internal;\n}\n","import { Fragment, h } from 'preact';\n\nimport { cls } from '@src/helpers/css';\nimport { getDayName } from '@src/helpers/dayName';\nimport { isSameDate, leadingZero, toFormat } from '@src/time/datetime';\nimport { stripTags } from '@src/utils/dom';\nimport { capitalize } from '@src/utils/string';\nimport { isNil, isPresent } from '@src/utils/type';\n\nimport type { EventObjectWithDefaultValues } from '@t/events';\nimport type {\n  Template,\n  TemplateMonthDayName,\n  TemplateMonthGrid,\n  TemplateMoreTitleDate,\n  TemplateNow,\n  TemplateTimezone,\n  TemplateWeekDayName,\n} from '@t/template';\n\nconst SIXTY_MINUTES = 60;\n\nexport const templates: Template = {\n  milestone(model: EventObjectWithDefaultValues) {\n    const classNames = cls('icon', 'ic-milestone');\n\n    return (\n      <Fragment>\n        <span className={classNames} />\n        <span\n          style={{\n            backgroundColor: model.backgroundColor,\n          }}\n        >\n          {stripTags(model.title)}\n        </span>\n      </Fragment>\n    );\n  },\n\n  milestoneTitle() {\n    return <span className={cls('left-content')}>Milestone</span>;\n  },\n\n  task(model: EventObjectWithDefaultValues) {\n    return `#${model.title}`;\n  },\n\n  taskTitle() {\n    return <span className={cls('left-content')}>Task</span>;\n  },\n\n  alldayTitle() {\n    return <span className={cls('left-content')}>All Day</span>;\n  },\n\n  allday(model: EventObjectWithDefaultValues) {\n    return stripTags(model.title);\n  },\n\n  time(model: EventObjectWithDefaultValues) {\n    const { start, title } = model;\n\n    if (start) {\n      return (\n        <span>\n          <strong>{toFormat(start, 'HH:mm')}</strong>&nbsp;<span>{stripTags(title)}</span>\n        </span>\n      );\n    }\n\n    return stripTags(title);\n  },\n\n  goingDuration(model: EventObjectWithDefaultValues) {\n    const { goingDuration } = model;\n    const hour = Math.floor(goingDuration / SIXTY_MINUTES);\n    const minutes = goingDuration % SIXTY_MINUTES;\n\n    return `GoingTime ${leadingZero(hour, 2)}:${leadingZero(minutes, 2)}`;\n  },\n\n  comingDuration(model: EventObjectWithDefaultValues) {\n    const { comingDuration } = model;\n    const hour = Math.floor(comingDuration / SIXTY_MINUTES);\n    const minutes = comingDuration % SIXTY_MINUTES;\n\n    return `ComingTime ${leadingZero(hour, 2)}:${leadingZero(minutes, 2)}`;\n  },\n\n  monthMoreTitleDate(moreTitle: TemplateMoreTitleDate) {\n    const { date, day } = moreTitle;\n\n    const classNameDay = cls('more-title-date');\n    const classNameDayLabel = cls('more-title-day');\n    const dayName = capitalize(getDayName(day));\n\n    return (\n      <Fragment>\n        <span className={classNameDay}>{date}</span>\n        <span className={classNameDayLabel}>{dayName}</span>\n      </Fragment>\n    );\n  },\n\n  monthMoreClose() {\n    return '';\n  },\n\n  monthGridHeader(model: TemplateMonthGrid) {\n    const date = parseInt(model.date.split('-')[2], 10);\n    const classNames = cls('weekday-grid-date', { 'weekday-grid-date-decorator': model.isToday });\n\n    return <span className={classNames}>{date}</span>;\n  },\n\n  monthGridHeaderExceed(hiddenEvents: number) {\n    const className = cls('weekday-grid-more-events');\n\n    return <span className={className}>{hiddenEvents} more</span>;\n  },\n\n  monthGridFooter(_model: TemplateMonthGrid) {\n    return '';\n  },\n\n  monthGridFooterExceed(_hiddenEvents: number) {\n    return '';\n  },\n\n  monthDayName(model: TemplateMonthDayName) {\n    return model.label;\n  },\n\n  weekDayName(model: TemplateWeekDayName) {\n    const classDate = cls('day-name__date');\n    const className = cls('day-name__name');\n\n    return (\n      <Fragment>\n        <span className={classDate}>{model.date}</span>&nbsp;&nbsp;\n        <span className={className}>{model.dayName}</span>\n      </Fragment>\n    );\n  },\n\n  weekGridFooterExceed(hiddenEvents: number) {\n    return `+${hiddenEvents}`;\n  },\n\n  collapseBtnTitle() {\n    const className = cls('collapse-btn-icon');\n\n    return <span className={className} />;\n  },\n\n  timezoneDisplayLabel({ displayLabel, timezoneOffset }: TemplateTimezone) {\n    if (isNil(displayLabel) && isPresent(timezoneOffset)) {\n      const sign = timezoneOffset < 0 ? '-' : '+';\n      const hours = Math.abs(timezoneOffset / SIXTY_MINUTES);\n      const minutes = Math.abs(timezoneOffset % SIXTY_MINUTES);\n\n      return `GMT${sign}${leadingZero(hours, 2)}:${leadingZero(minutes, 2)}`;\n    }\n\n    return displayLabel as string;\n  },\n\n  timegridDisplayPrimaryTime(props: TemplateNow) {\n    const { time } = props;\n\n    return toFormat(time, 'hh tt');\n  },\n\n  timegridDisplayTime(props: TemplateNow) {\n    const { time } = props;\n\n    return toFormat(time, 'HH:mm');\n  },\n\n  timegridNowIndicatorLabel(timezone: TemplateNow) {\n    const { time, format = 'HH:mm' } = timezone;\n\n    return toFormat(time, format);\n  },\n\n  popupIsAllday() {\n    return 'All day';\n  },\n\n  popupStateFree() {\n    return 'Free';\n  },\n\n  popupStateBusy() {\n    return 'Busy';\n  },\n\n  titlePlaceholder() {\n    return 'Subject';\n  },\n\n  locationPlaceholder() {\n    return 'Location';\n  },\n\n  startDatePlaceholder() {\n    return 'Start date';\n  },\n\n  endDatePlaceholder() {\n    return 'End date';\n  },\n\n  popupSave() {\n    return 'Save';\n  },\n\n  popupUpdate() {\n    return 'Update';\n  },\n\n  popupEdit() {\n    return 'Edit';\n  },\n\n  popupDelete() {\n    return 'Delete';\n  },\n\n  popupDetailTitle({ title }: EventObjectWithDefaultValues) {\n    return title;\n  },\n\n  popupDetailDate({ isAllday, start, end }: EventObjectWithDefaultValues) {\n    const dayFormat = 'YYYY.MM.DD';\n    const timeFormat = 'hh:mm tt';\n    const detailFormat = `${dayFormat} ${timeFormat}`;\n    const startDate = toFormat(start, isAllday ? dayFormat : timeFormat);\n    const endDateFormat = isSameDate(start, end) ? timeFormat : detailFormat;\n\n    if (isAllday) {\n      return `${startDate}${isSameDate(start, end) ? '' : ` - ${toFormat(end, dayFormat)}`}`;\n    }\n\n    return `${toFormat(start, detailFormat)} - ${toFormat(end, endDateFormat)}`;\n  },\n\n  popupDetailLocation({ location }: EventObjectWithDefaultValues) {\n    return location;\n  },\n\n  popupDetailAttendees({ attendees = [] }: EventObjectWithDefaultValues) {\n    return attendees.join(', ');\n  },\n\n  popupDetailState({ state }: EventObjectWithDefaultValues) {\n    return state || 'Busy';\n  },\n\n  popupDetailRecurrenceRule({ recurrenceRule }: EventObjectWithDefaultValues) {\n    return recurrenceRule;\n  },\n\n  popupDetailBody({ body }: EventObjectWithDefaultValues) {\n    return body;\n  },\n};\n\nexport type TemplateName = keyof Template;\n","export const TEST_IDS = {\n  NOW_INDICATOR: 'timegrid-now-indicator',\n  NOW_INDICATOR_LABEL: 'timegrid-now-indicator-label',\n};\n","import type { DeepPartial } from 'ts-essentials';\n\nimport { DEFAULT_COMMON_THEME } from '@src/constants/theme';\nimport { mergeObject } from '@src/utils/object';\n\nimport type { CommonTheme, ThemeState } from '@t/theme';\n\nexport function createCommonTheme(commonTheme: DeepPartial<CommonTheme> = {}): {\n  common: Required<ThemeState['common']>;\n} {\n  return {\n    common: mergeObject(DEFAULT_COMMON_THEME, commonTheme),\n  };\n}\n","import produce from 'immer';\n\nimport { mergeObject } from '@src/utils/object';\n\nimport type { SetState } from '@t/store';\nimport type { ThemeDispatchers, ThemeState, ThemeStore } from '@t/theme';\n\nexport function createThemeDispatch(set: SetState<ThemeStore>): ThemeDispatchers {\n  return {\n    setTheme: (theme) => {\n      set(\n        produce((state: ThemeState) => {\n          state.common = mergeObject(state.common, theme.common);\n          state.week = mergeObject(state.week, theme.week);\n          state.month = mergeObject(state.month, theme.month);\n        })\n      );\n    },\n    setCommonTheme: (commonTheme) => {\n      set(\n        produce((state: ThemeState) => {\n          state.common = mergeObject(state.common, commonTheme);\n        })\n      );\n    },\n    setWeekTheme: (weekTheme) => {\n      set(\n        produce((state: ThemeState) => {\n          state.week = mergeObject(state.week, weekTheme);\n        })\n      );\n    },\n    setMonthTheme: (monthTheme) => {\n      set(\n        produce((state: ThemeState) => {\n          state.month = mergeObject(state.month, monthTheme);\n        })\n      );\n    },\n  };\n}\n","import type { DeepPartial } from 'ts-essentials';\n\nimport { DEFAULT_MONTH_THEME } from '@src/constants/theme';\nimport { mergeObject } from '@src/utils/object';\n\nimport type { MonthTheme, ThemeState } from '@t/theme';\n\nexport function createMonthTheme(monthTheme: DeepPartial<MonthTheme> = {}): {\n  month: Required<ThemeState>['month'];\n} {\n  return {\n    month: mergeObject(DEFAULT_MONTH_THEME, monthTheme),\n  };\n}\n","import type { DeepPartial } from 'ts-essentials';\n\nimport { DEFAULT_WEEK_THEME } from '@src/constants/theme';\nimport { mergeObject } from '@src/utils/object';\n\nimport type { ThemeState, WeekTheme } from '@t/theme';\n\nexport function createWeekTheme(weekTheme: DeepPartial<WeekTheme> = {}): {\n  week: Required<ThemeState>['week'];\n} {\n  return {\n    week: mergeObject(DEFAULT_WEEK_THEME, weekTheme),\n  };\n}\n","import type { DateInterface } from '@toast-ui/date';\n\nimport { MS_PER_MINUTES } from '@src/time/datetime';\nimport {\n  calculateTimezoneOffset,\n  date as createDate,\n  getLocalTimezoneOffset,\n} from '@src/time/timezone';\nimport { isPresent, isString } from '@src/utils/type';\n\nfunction getTZOffsetMSDifference(offset: number) {\n  return (getLocalTimezoneOffset() - offset) * MS_PER_MINUTES;\n}\n\n/**\n * Custom Date Class to handle timezone offset.\n *\n * For more information, see {@link https://github.com/nhn/tui.calendar/blob/main/docs/en/apis/tzdate.md|TZDate} in guide.\n *\n * @class TZDate\n * @param {number|TZDate|Date|string} date - date value to be converted. If date is number or string, it should be eligible to parse by Date constructor.\n */\nexport default class TZDate {\n  private tzOffset: number | null = null;\n\n  private d: DateInterface;\n\n  constructor(...args: any[]) {\n    if (args[0] instanceof TZDate) {\n      this.d = createDate(args[0].getTime());\n    } else {\n      this.d = createDate(...args);\n    }\n  }\n\n  /**\n   * Get the string representation of the date.\n   * @returns {string} string representation of the date.\n   */\n  toString() {\n    return this.d.toString();\n  }\n\n  /**\n   * Add years to the instance.\n   * @param {number} y - number of years to be added.\n   * @returns {TZDate} - returns the instance itself.\n   */\n  addFullYear(y: number): TZDate {\n    this.setFullYear(this.getFullYear() + y);\n\n    return this;\n  }\n\n  /**\n   * Add months to the instance.\n   * @param {number} m - number of months to be added.\n   * @returns {TZDate} - returns the instance itself.\n   */\n  addMonth(m: number): TZDate {\n    this.setMonth(this.getMonth() + m);\n\n    return this;\n  }\n\n  /**\n   * Add dates to the instance.\n   * @param {number} d - number of days to be added.\n   * @returns {TZDate} - returns the instance itself.\n   */\n  addDate(d: number): TZDate {\n    this.setDate(this.getDate() + d);\n\n    return this;\n  }\n\n  /**\n   * Add hours to the instance.\n   * @param {number} h - number of hours to be added.\n   * @returns {TZDate} - returns the instance itself.\n   */\n  addHours(h: number): TZDate {\n    this.setHours(this.getHours() + h);\n\n    return this;\n  }\n\n  /**\n   * Add minutes to the instance.\n   * @param {number} M - number of minutes to be added.\n   * @returns {TZDate} - returns the instance itself.\n   */\n  addMinutes(M: number): TZDate {\n    this.setMinutes(this.getMinutes() + M);\n\n    return this;\n  }\n\n  /**\n   * Add seconds to the instance.\n   * @param {number} s - number of seconds to be added.\n   * @returns {TZDate} - returns the instance itself.\n   */\n  addSeconds(s: number): TZDate {\n    this.setSeconds(this.getSeconds() + s);\n\n    return this;\n  }\n\n  /**\n   * Add milliseconds to the instance.\n   * @param {number} ms - number of milliseconds to be added.\n   * @returns {TZDate} - returns the instance itself.\n   */\n  addMilliseconds(ms: number): TZDate {\n    this.setMilliseconds(this.getMilliseconds() + ms);\n\n    return this;\n  }\n\n  /* eslint-disable max-params*/\n  /**\n   * Set the date and time all at once.\n   * @param {number} y - year\n   * @param {number} m - month\n   * @param {number} d - date\n   * @param {number} h - hours\n   * @param {number} M - minutes\n   * @param {number} s - seconds\n   * @param {number} ms - milliseconds\n   * @returns {TZDate} - returns the instance itself.\n   */\n  setWithRaw(y: number, m: number, d: number, h: number, M: number, s: number, ms: number): TZDate {\n    this.setFullYear(y, m, d);\n    this.setHours(h, M, s, ms);\n\n    return this;\n  }\n\n  /**\n   * Convert the instance to the native `Date` object.\n   * @returns {Date} - The native `Date` object.\n   */\n  toDate(): Date {\n    return this.d.toDate();\n  }\n\n  /**\n   * Get the value of the date. (milliseconds since 1970-01-01 00:00:00 (UTC+0))\n   * @returns {number} - value of the date.\n   */\n  valueOf(): number {\n    return this.getTime();\n  }\n\n  /**\n   * Get the timezone offset from UTC in minutes.\n   * @returns {number} - timezone offset in minutes.\n   */\n  getTimezoneOffset() {\n    return this.tzOffset ?? this.d.getTimezoneOffset();\n  }\n\n  // Native properties\n  /**\n   * Get milliseconds which is converted by timezone\n   * @returns {number} milliseconds\n   */\n  getTime(): number {\n    return this.d.getTime();\n  }\n\n  /**\n   * Get the year of the instance.\n   * @returns {number} - full year\n   */\n  getFullYear(): number {\n    return this.d.getFullYear();\n  }\n\n  /**\n   * Get the month of the instance. (zero-based)\n   * @returns {number} - month\n   */\n  getMonth(): number {\n    return this.d.getMonth();\n  }\n\n  /**\n   * Get the date of the instance.\n   * @returns {number} - date\n   */\n  getDate(): number {\n    return this.d.getDate();\n  }\n\n  /**\n   * Get the hours of the instance.\n   * @returns {number} - hours\n   */\n  getHours(): number {\n    return this.d.getHours();\n  }\n\n  /**\n   * Get the minutes of the instance.\n   * @returns {number} - minutes\n   */\n  getMinutes(): number {\n    return this.d.getMinutes();\n  }\n\n  /**\n   * Get the seconds of the instance.\n   * @returns {number} - seconds\n   */\n  getSeconds(): number {\n    return this.d.getSeconds();\n  }\n\n  /**\n   * Get the milliseconds of the instance.\n   * @returns {number} - milliseconds\n   */\n  getMilliseconds(): number {\n    return this.d.getMilliseconds();\n  }\n\n  /**\n   * Get the day of the week of the instance.\n   * @returns {number} - day of the week\n   */\n  getDay(): number {\n    return this.d.getDay();\n  }\n\n  /**\n   * Sets the instance to the time represented by a number of milliseconds since 1970-01-01 00:00:00 (UTC+0).\n   * @param {number} t - number of milliseconds\n   * @returns {number} - Passed milliseconds of the instance since 1970-01-01 00:00:00 (UTC+0).\n   */\n  setTime(t: number): number {\n    return this.d.setTime(t);\n  }\n\n  /**\n   * Sets the year-month-date of the instance. Equivalent to calling `setFullYear` of `Date` object.\n   * @param {number} y - year\n   * @param {number} m - month (zero-based)\n   * @param {number} d - date\n   * @returns {number} - Passed milliseconds of the instance since 1970-01-01 00:00:00 (UTC+0).\n   */\n  setFullYear(y: number, m = this.getMonth(), d = this.getDate()): number {\n    return this.d.setFullYear(y, m, d);\n  }\n\n  /**\n   * Sets the month of the instance. Equivalent to calling `setMonth` of `Date` object.\n   * @param {number} m - month (zero-based)\n   * @param {number} d - date\n   * @returns {number} - Passed milliseconds of the instance since 1970-01-01 00:00:00 (UTC+0).\n   */\n  setMonth(m: number, d = this.getDate()): number {\n    return this.d.setMonth(m, d);\n  }\n\n  /**\n   * Sets the date of the instance. Equivalent to calling `setDate` of `Date` object.\n   * @param {number} d - date\n   * @returns {number} - Passed milliseconds of the instance since 1970-01-01 00:00:00 (UTC+0).\n   */\n  setDate(d: number): number {\n    return this.d.setDate(d);\n  }\n\n  /**\n   * Sets the hours of the instance. Equivalent to calling `setHours` of `Date` object.\n   * @param {number} h - hours\n   * @param {number} M - minutes\n   * @param {number} s - seconds\n   * @param {number} ms - milliseconds\n   * @returns {number} - Passed milliseconds of the instance since 1970-01-01 00:00:00 (UTC+0).\n   */\n  setHours(\n    h: number,\n    M = this.getMinutes(),\n    s = this.getSeconds(),\n    ms = this.getMilliseconds()\n  ): number {\n    return this.d.setHours(h, M, s, ms);\n  }\n\n  /**\n   * Sets the minutes of the instance. Equivalent to calling `setMinutes` of `Date` object.\n   * @param {number} M - minutes\n   * @param {number} s - seconds\n   * @param {number} ms - milliseconds\n   * @returns {number} - Passed milliseconds of the instance since 1970-01-01 00:00:00 (UTC+0).\n   */\n  setMinutes(M: number, s = this.getSeconds(), ms = this.getMilliseconds()): number {\n    return this.d.setMinutes(M, s, ms);\n  }\n\n  /**\n   * Sets the seconds of the instance. Equivalent to calling `setSeconds` of `Date` object.\n   * @param {number} s - seconds\n   * @param {number} ms - milliseconds\n   * @returns {number} - Passed milliseconds of the instance since 1970-01-01 00:00:00 (UTC+0).\n   */\n  setSeconds(s: number, ms = this.getMilliseconds()): number {\n    return this.d.setSeconds(s, ms);\n  }\n\n  /**\n   * Sets the milliseconds of the instance. Equivalent to calling `setMilliseconds` of `Date` object.\n   * @param {number} ms - milliseconds\n   * @returns {number} - Passed milliseconds of the instance since 1970-01-01 00:00:00 (UTC+0).\n   */\n  setMilliseconds(ms: number): number {\n    return this.d.setMilliseconds(ms);\n  }\n\n  /**\n   * Set the timezone offset of the instance.\n   * @param {string|number} tzValue - The name of timezone(IANA name) or timezone offset(in minutes).\n   * @returns {TZDate} - New instance with the timezone offset.\n   */\n  tz(tzValue: string | 'Local' | number) {\n    if (tzValue === 'Local') {\n      return new TZDate(this.getTime());\n    }\n\n    const tzOffset = isString(tzValue) ? calculateTimezoneOffset(tzValue, this) : tzValue;\n\n    const newTZDate = new TZDate(this.getTime() - getTZOffsetMSDifference(tzOffset));\n    newTZDate.tzOffset = tzOffset;\n\n    return newTZDate;\n  }\n\n  /**\n   * Get the new instance following the system's timezone.\n   * If the system timezone is different from the timezone of the instance,\n   * the instance is converted to the system timezone.\n   *\n   * Instance's `tzOffset` property will be ignored if there is a `tzValue` parameter.\n   *\n   * @param {string|number} tzValue - The name of timezone(IANA name) or timezone offset(in minutes).\n   * @returns {TZDate} - New instance with the system timezone.\n   */\n  local(tzValue?: string | number) {\n    if (isPresent(tzValue)) {\n      const tzOffset = isString(tzValue) ? calculateTimezoneOffset(tzValue, this) : tzValue;\n      return new TZDate(this.getTime() + getTZOffsetMSDifference(tzOffset));\n    }\n\n    return new TZDate(\n      this.getTime() + (isPresent(this.tzOffset) ? getTZOffsetMSDifference(this.tzOffset) : 0)\n    );\n  }\n}\n","import range from 'tui-code-snippet/array/range';\n\nimport { toPercent } from '@src/helpers/css';\nimport TZDate from '@src/time/date';\nimport { fill } from '@src/utils/array';\nimport { InvalidDateTimeFormatError } from '@src/utils/error';\n\nimport type { TimeUnit } from '@t/events';\nimport type { CellStyle, FormattedTimeString } from '@t/time/datetime';\n\nexport enum Day {\n  SUN,\n  MON,\n  TUE,\n  WED,\n  THU,\n  FRI,\n  SAT,\n}\n\nexport const WEEK_DAYS = 7;\n\ninterface ReduceIteratee {\n  (previousValue: number, currentValue: number, currentIndex: number, array: number[]): number;\n}\n\nconst dateFormatRx = /^(\\d{4}[-|/]*\\d{2}[-|/]*\\d{2})\\s?(\\d{2}:\\d{2}:\\d{2})?$/;\n\nconst memo: {\n  millisecondsTo: Record<string, number>;\n  millisecondsFrom: Record<string, number>;\n} = {\n  millisecondsTo: {},\n  millisecondsFrom: {},\n};\n\nconst convByTimeUnit = [24, 60, 60, 1000];\n\n/**\n * pad left zero characters\n */\nexport function leadingZero(number: number, length: number): string {\n  let zero = '';\n  let i = 0;\n\n  if (String(number).length > length) {\n    return String(number);\n  }\n\n  for (; i < length - 1; i += 1) {\n    zero += '0';\n  }\n\n  return (zero + number).slice(length * -1);\n}\n\nfunction getHourForMeridiem(date: TZDate) {\n  let hour = date.getHours();\n\n  if (hour === 0) {\n    hour = 12;\n  }\n\n  if (hour > 12) {\n    hour = hour % 12;\n  }\n\n  return hour;\n}\n\nconst tokenFunc = {\n  YYYYMMDD(date: TZDate): string {\n    return [\n      date.getFullYear(),\n      leadingZero(date.getMonth() + 1, 2),\n      leadingZero(date.getDate(), 2),\n    ].join('');\n  },\n  YYYY(date: TZDate): string {\n    return String(date.getFullYear());\n  },\n  MM(date: TZDate): string {\n    return leadingZero(date.getMonth() + 1, 2);\n  },\n  DD(date: TZDate): string {\n    return leadingZero(date.getDate(), 2);\n  },\n  'HH:mm': function (date: TZDate): string {\n    const hour = date.getHours();\n    const minutes = date.getMinutes();\n\n    return `${leadingZero(hour, 2)}:${leadingZero(minutes, 2)}`;\n  },\n  'hh:mm': function (date: TZDate): string {\n    const hour = getHourForMeridiem(date);\n    const minutes = date.getMinutes();\n\n    return `${leadingZero(hour, 2)}:${leadingZero(minutes, 2)}`;\n  },\n  hh(date: TZDate): string {\n    const hour = getHourForMeridiem(date);\n\n    return String(hour);\n  },\n  tt(date: TZDate): string {\n    const hour = date.getHours();\n\n    return hour < 12 ? 'am' : 'pm';\n  },\n};\n\nexport const MS_PER_DAY = 86400000;\nexport const MS_PER_HOUR = 3600000;\nexport const MS_PER_MINUTES = 60000;\n\n/**\n * The number of milliseconds 20 minutes for event min duration\n */\nexport const MS_EVENT_MIN_DURATION = 20 * MS_PER_MINUTES;\nexport const MS_PER_THIRTY_MINUTES = 30 * 60 * 1000;\nexport const SIXTY_SECONDS = 60;\n\n/**\n * Return formatted string as basis of supplied string.\n *\n * Supported Token Lists.\n *\n * - YYYY => 1988\n * - MM => 01 ~ 12\n * - DD => 01 ~ 31\n * - YYYYMMDD => 19880925\n */\nexport function toFormat(date: TZDate, strFormat: string): string {\n  let result = strFormat;\n\n  Object.entries(tokenFunc).forEach(([token, converter]: [string, (d: TZDate) => string]) => {\n    result = result.replace(token, converter(date));\n  });\n\n  return result;\n}\n\n/**\n * convert to milliseconds\n */\nfunction convMilliseconds(type: TimeUnit, value: number, iteratee: ReduceIteratee): number {\n  const index: Partial<Record<TimeUnit, number>> = {\n    date: 0,\n    hour: 1,\n    minute: 2,\n    second: 3,\n  };\n\n  if (!(type in index) || isNaN(value)) {\n    return 0;\n  }\n\n  return [value].concat(convByTimeUnit.slice(index[type])).reduce(iteratee);\n}\n\n/**\n * Convert value to milliseconds\n */\nexport function millisecondsFrom(type: TimeUnit, value: number): number {\n  const cache = memo.millisecondsFrom;\n  const key = type + value;\n\n  if (cache[key]) {\n    return cache[key];\n  }\n\n  const result = convMilliseconds(type, value, (m: number, v: number) => m * v);\n\n  if (!result) {\n    return 0;\n  }\n\n  cache[key] = result;\n\n  return cache[key];\n}\n\n/**\n * Return 00:00:00 supplied date\n */\nexport function toStartOfDay(date?: number | TZDate | Date): TZDate {\n  const d = date ? new TZDate(date) : new TZDate();\n  d.setHours(0, 0, 0, 0);\n\n  return d;\n}\n\n/**\n * Make date array from supplied parameters\n */\nexport function makeDateRange(startDate: TZDate, endDate: TZDate, step: number): TZDate[] {\n  const startTime = startDate.getTime();\n  const endTime = endDate.getTime();\n  const date = new TZDate(startDate);\n  const result: TZDate[] = [];\n  let cursor = startTime;\n\n  while (cursor <= endTime && endTime >= date.getTime()) {\n    result.push(new TZDate(date));\n    cursor = cursor + step;\n    date.addMilliseconds(step);\n  }\n\n  return result;\n}\n\n/**\n * Clone supplied date\n */\nexport function clone(date: TZDate): TZDate {\n  return new TZDate(date);\n}\n\n/**\n * Compare two dates.\n *\n * when first date is latest then seconds then return -1.\n *\n * return +1 reverse, and return 0 is same.\n */\nexport function compare(d1: TZDate, d2: TZDate): number {\n  const _d1 = d1.getTime();\n  const _d2 = d2.getTime();\n\n  if (_d1 < _d2) {\n    return -1;\n  }\n  if (_d1 > _d2) {\n    return 1;\n  }\n\n  return 0;\n}\n\nexport function isSameYear(d1: TZDate, d2: TZDate): boolean {\n  return d1.getFullYear() === d2.getFullYear();\n}\n\nexport function isSameMonth(d1: TZDate, d2: TZDate): boolean {\n  return isSameYear(d1, d2) && d1.getMonth() === d2.getMonth();\n}\n\nexport function isSameDate(d1: TZDate, d2: TZDate): boolean {\n  return isSameMonth(d1, d2) && d1.getDate() === d2.getDate();\n}\n\nexport function max(d1: TZDate, d2: TZDate): TZDate {\n  return compare(d1, d2) === 1 ? d1 : d2;\n}\n\nexport function min(d1: TZDate, d2: TZDate): TZDate {\n  return compare(d1, d2) === -1 ? d1 : d2;\n}\n\n/**\n * Convert date string to date object.\n * Only listed below formats available.\n *\n * - YYYYMMDD\n * - YYYY/MM/DD\n * - YYYY-MM-DD\n * - YYYY/MM/DD HH:mm:SS\n * - YYYY-MM-DD HH:mm:SS\n */\nexport function parse(str: string, fixMonth = -1): TZDate {\n  const matches = str.match(dateFormatRx);\n  let separator;\n  let ymd;\n  let hms;\n\n  if (!matches) {\n    throw new InvalidDateTimeFormatError(str);\n  }\n\n  if (str.length > 8) {\n    // YYYY/MM/DD\n    // YYYY-MM-DD\n    // YYYY/MM/DD HH:mm:SS\n    // YYYY-MM-DD HH:mm:SS\n    separator = ~str.indexOf('/') ? '/' : '-';\n    const result = matches.splice(1);\n\n    ymd = result[0].split(separator);\n    hms = result[1] ? result[1].split(':') : [0, 0, 0];\n  } else {\n    // YYYYMMDD\n    const [result] = matches;\n    ymd = [result.substr(0, 4), result.substr(4, 2), result.substr(6, 2)];\n    hms = [0, 0, 0];\n  }\n\n  return new TZDate().setWithRaw(\n    Number(ymd[0]),\n    Number(ymd[1]) + fixMonth,\n    Number(ymd[2]),\n    Number(hms[0]),\n    Number(hms[1]),\n    Number(hms[2]),\n    0\n  );\n}\n\n/**\n * Return 23:59:59 supplied date.\n * If you want to use milliseconds, use format 'YYYY-MM-DDTHH:mm:ss.sssZ' based on http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15\n */\nexport function toEndOfDay(date?: number | TZDate): TZDate {\n  const d = date ? new TZDate(date) : new TZDate();\n  d.setHours(23, 59, 59, 999);\n\n  return d;\n}\n\nexport function isWeekend(day: Day): boolean {\n  return day === Day.SUN || day === Day.SAT;\n}\n\nexport function isSunday(day: Day): boolean {\n  return day === Day.SUN;\n}\n\nexport function isSaturday(day: Day): boolean {\n  return day === Day.SAT;\n}\n\n/**\n * Whether date is between supplied dates with date value?\n */\nexport function isBetweenWithDate(d: TZDate, d1: TZDate, d2: TZDate): boolean {\n  const format = 'YYYYMMDD';\n  const n = parseInt(toFormat(d, format), 10);\n  const n1 = parseInt(toFormat(d1, format), 10);\n  const n2 = parseInt(toFormat(d2, format), 10);\n\n  return n1 <= n && n <= n2;\n}\n\nexport function toStartOfMonth(date: TZDate): TZDate {\n  const startDate = new TZDate(date);\n\n  startDate.setDate(1);\n  startDate.setHours(0, 0, 0, 0);\n\n  return startDate;\n}\n\nexport function toStartOfYear(d: TZDate): TZDate {\n  return new TZDate(d.getFullYear(), 0, 1, 0, 0, 0, 0);\n}\n\nexport function toEndOfMonth(date: TZDate): TZDate {\n  const endDate = toStartOfMonth(date);\n\n  endDate.setMonth(endDate.getMonth() + 1);\n  endDate.setDate(endDate.getDate() - 1);\n  endDate.setHours(23, 59, 59, 999);\n\n  return endDate;\n}\n\n/**\n * Calculate grid left(%), width(%) by narrowWeekend, startDayOfWeek, workweek\n */\nexport function getRowStyleInfo(\n  days: number,\n  narrowWeekend: boolean,\n  startDayOfWeek: number,\n  workweek: boolean\n): { rowStyleInfo: CellStyle[]; cellWidthMap: string[][] } {\n  const limitDaysToApplyNarrowWeekend = 5;\n  const uniformWidth = 100 / days;\n  const wideWidth = days > limitDaysToApplyNarrowWeekend ? 100 / (days - 1) : uniformWidth;\n  let accumulatedWidth = 0;\n  const dates = range(startDayOfWeek, WEEK_DAYS).concat(range(days)).slice(0, WEEK_DAYS);\n\n  narrowWeekend = workweek ? false : narrowWeekend;\n\n  const rowStyleInfo = dates.map((day: number) => {\n    let width = narrowWeekend ? wideWidth : uniformWidth;\n    if (days > limitDaysToApplyNarrowWeekend && narrowWeekend && isWeekend(day)) {\n      width = wideWidth / 2;\n    }\n\n    const model = {\n      width,\n      left: accumulatedWidth,\n    };\n\n    accumulatedWidth += width;\n\n    return model;\n  });\n\n  const { length } = rowStyleInfo;\n  const cellWidthMap = fill(length, fill(length, 0));\n\n  rowStyleInfo.forEach(({ width }, index) => {\n    for (let i = 0; i <= index; i += 1) {\n      for (let j = index; j < length; j += 1) {\n        cellWidthMap[i][j] += width;\n      }\n    }\n  });\n\n  cellWidthMap[0][length - 1] = 100;\n\n  return {\n    rowStyleInfo,\n    cellWidthMap: cellWidthMap.map((widthList) => widthList.map(toPercent)),\n  };\n}\n\nexport function addMilliseconds(d: TZDate, step: number) {\n  const date = clone(d);\n  date.setMilliseconds(d.getMilliseconds() + step);\n\n  return date;\n}\n\nexport function addMinutes(d: TZDate, step: number) {\n  const date = clone(d);\n  date.setMinutes(d.getMinutes() + step);\n\n  return date;\n}\n\nexport function addHours(d: TZDate, step: number) {\n  const date = clone(d);\n  date.setHours(d.getHours() + step);\n\n  return date;\n}\n\nexport function setTimeStrToDate(d: TZDate, timeStr: FormattedTimeString) {\n  const date = clone(d);\n  date.setHours(...(timeStr.split(':').map(Number) as [number, number]));\n\n  return date;\n}\n\nexport function addDate(d: TZDate, step: number) {\n  const date = clone(d);\n  date.setDate(d.getDate() + step);\n\n  return date;\n}\n\nexport function subtractDate(d: TZDate, steps: number) {\n  const date = clone(d);\n  date.setDate(d.getDate() - steps);\n\n  return date;\n}\n\n/**\n * Inspired by `date-fns`\n *\n * See more: https://github.com/date-fns/date-fns/blob/master/src/addMonths/index.ts\n */\nexport function addMonths(d: TZDate, step = 1) {\n  const date = clone(d);\n\n  if (step !== 0) {\n    const dayOfMonth = date.getDate();\n    const endOfDesiredMonth = new TZDate(date.getTime());\n    endOfDesiredMonth.setMonth(date.getMonth() + step + 1, 0);\n    const daysInMonth = endOfDesiredMonth.getDate();\n\n    if (dayOfMonth >= daysInMonth) {\n      return endOfDesiredMonth;\n    }\n\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n  }\n\n  return date;\n}\n\nexport function addYear(d: TZDate, step: number) {\n  const date = clone(d);\n  date.setFullYear(d.getFullYear() + step);\n\n  return date;\n}\n\nexport function getDateDifference(d1: TZDate, d2: TZDate) {\n  const _d1 = new TZDate(d1.getFullYear(), d1.getMonth(), d1.getDate()).getTime();\n  const _d2 = new TZDate(d2.getFullYear(), d2.getMonth(), d2.getDate()).getTime();\n\n  return Math.round((_d1 - _d2) / MS_PER_DAY);\n}\n","import type { TuiDateConstructor } from '@toast-ui/date';\nimport { LocalDate } from '@toast-ui/date';\n\nimport TZDate from '@src/time/date';\nimport { InvalidTimezoneNameError } from '@src/utils/error';\nimport { logger } from '@src/utils/logger';\nimport { isFunction, isPresent } from '@src/utils/type';\n\nlet Constructor: TuiDateConstructor = LocalDate;\n\nexport function setDateConstructor(constructor: TuiDateConstructor) {\n  Constructor = constructor;\n}\n\nexport function date(...args: any[]) {\n  return new Constructor(...args);\n}\n\n// Get the timezone offset from the system using the calendar.\nexport function getLocalTimezoneOffset() {\n  return -new Date().getTimezoneOffset();\n}\n\n/**\n * Calculate timezone offset from UTC.\n *\n * Target date is needed for the case when the timezone is applicable to DST.\n */\nexport function calculateTimezoneOffset(timezoneName: string, targetDate: TZDate = new TZDate()) {\n  if (!isIntlDateTimeFormatSupported()) {\n    logger.warn(\n      'Intl.DateTimeFormat is not fully supported. So It will return the local timezone offset only.\\nYou can use a polyfill to fix this issue.'\n    );\n\n    return -targetDate.toDate().getTimezoneOffset();\n  }\n\n  validateIANATimezoneName(timezoneName);\n\n  const token = tokenizeTZDate(targetDate, timezoneName);\n  const utcDate = tokenToUtcDate(token);\n\n  return Math.round((utcDate.getTime() - targetDate.getTime()) / 60 / 1000);\n}\n\n// Reference: https://stackoverflow.com/a/30280636/16702531\n// If there's no timezoneName, it handles Native OS timezone.\nexport function isUsingDST(targetDate: TZDate, timezoneName?: string) {\n  if (timezoneName) {\n    validateIANATimezoneName(timezoneName);\n  }\n\n  const jan = new TZDate(targetDate.getFullYear(), 0, 1);\n  const jul = new TZDate(targetDate.getFullYear(), 6, 1);\n\n  if (timezoneName) {\n    return (\n      Math.max(\n        -calculateTimezoneOffset(timezoneName, jan),\n        -calculateTimezoneOffset(timezoneName, jul)\n      ) !== -calculateTimezoneOffset(timezoneName, targetDate)\n    );\n  }\n\n  return (\n    Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset()) !==\n    targetDate.toDate().getTimezoneOffset()\n  );\n}\n\nconst dtfCache: Record<string, Intl.DateTimeFormat> = {};\nconst timezoneNameValidationCache: Record<string, boolean> = {};\n\nfunction isIntlDateTimeFormatSupported() {\n  /**\n   * Intl.DateTimeFormat & IANA Timezone Data should be supported.\n   * also, hourCycle options should be supported.\n   */\n  return isFunction(Intl?.DateTimeFormat?.prototype?.formatToParts);\n}\n\nfunction validateIANATimezoneName(timezoneName: string) {\n  if (timezoneNameValidationCache[timezoneName]) {\n    return true;\n  }\n\n  try {\n    // Just try to create a dtf with the timezoneName.\n    // eslint-disable-next-line new-cap\n    Intl.DateTimeFormat('en-US', { timeZone: timezoneName });\n    timezoneNameValidationCache[timezoneName] = true;\n\n    return true;\n  } catch {\n    // Usually it throws `RangeError` when the timezoneName is invalid.\n    throw new InvalidTimezoneNameError(timezoneName);\n  }\n}\n\nfunction getDateTimeFormat(timezoneName: string) {\n  if (dtfCache[timezoneName]) {\n    return dtfCache[timezoneName];\n  }\n  const dtf = new Intl.DateTimeFormat('en-US', {\n    timeZone: timezoneName,\n    hourCycle: 'h23',\n    hour12: false,\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  });\n  dtfCache[timezoneName] = dtf;\n\n  return dtf;\n}\n\ntype TokenizeTarget = Extract<\n  Intl.DateTimeFormatPartTypes,\n  'year' | 'month' | 'day' | 'hour' | 'minute' | 'second'\n>;\nconst typeToPos: Record<TokenizeTarget, number> = {\n  year: 0,\n  month: 1,\n  day: 2,\n  hour: 3,\n  minute: 4,\n  second: 5,\n};\n\ntype TokenizeResult = [number, number, number, number, number, number];\nfunction tokenizeTZDate(tzDate: TZDate, timezoneName: string): TokenizeResult {\n  const dtf = getDateTimeFormat(timezoneName);\n  const formatted = dtf.formatToParts(tzDate.toDate());\n\n  return formatted.reduce<TokenizeResult>((result, cur) => {\n    const pos = typeToPos[cur.type as TokenizeTarget];\n\n    if (isPresent(pos)) {\n      result[pos] = parseInt(cur.value, 10);\n    }\n\n    return result;\n  }, [] as unknown as TokenizeResult);\n}\n\nfunction tokenToUtcDate(token: TokenizeResult) {\n  const [year, monthPlusOne, day, hour, minute, second] = token;\n  const month = monthPlusOne - 1;\n\n  return new Date(Date.UTC(year, month, day, hour % 24, minute, second));\n}\n","import type EventModel from '@src/model/eventModel';\nimport EventUIModel from '@src/model/eventUIModel';\nimport { compare } from '@src/time/datetime';\n\nfunction compareBooleansASC(a: boolean, b: boolean) {\n  if (a !== b) {\n    return a ? -1 : 1;\n  }\n\n  return 0;\n}\n\nfunction compareNumbersASC(a: any, b: any) {\n  return Number(a) - Number(b);\n}\n\nfunction compareStringsASC(_a: any, _b: any) {\n  const a = String(_a);\n  const b = String(_b);\n\n  if (a === b) {\n    return 0;\n  }\n\n  return a > b ? 1 : -1;\n}\n\n// eslint-disable-next-line complexity\nfunction compareEventsASC(a: EventModel | EventUIModel, b: EventModel | EventUIModel) {\n  const modelA = a instanceof EventUIModel ? a.model : a;\n  const modelB = b instanceof EventUIModel ? b.model : b;\n  const alldayCompare = compareBooleansASC(\n    modelA.isAllday || modelA.hasMultiDates,\n    modelB.isAllday || modelB.hasMultiDates\n  );\n\n  if (alldayCompare) {\n    return alldayCompare;\n  }\n\n  const startsCompare = compare(a.getStarts(), b.getStarts());\n\n  if (startsCompare) {\n    return startsCompare;\n  }\n\n  const durationA = a.duration();\n  const durationB = b.duration();\n\n  if (durationA < durationB) {\n    return 1;\n  }\n  if (durationA > durationB) {\n    return -1;\n  }\n\n  return modelA.cid() - modelB.cid();\n}\n\nexport function bsearch(\n  arr: any[],\n  search: any,\n  fn?: (item: any) => any,\n  compareFn?: (item: any, searchArg: any) => number\n) {\n  let minIndex = 0;\n  let maxIndex = arr.length - 1;\n  let currentIndex;\n  let value;\n  let comp;\n\n  compareFn = compareFn || compareStringsASC;\n\n  while (minIndex <= maxIndex) {\n    currentIndex = ((minIndex + maxIndex) / 2) | 0; // Math.floor\n    value = fn ? fn(arr[currentIndex]) : arr[currentIndex];\n    comp = compareFn(value, search);\n\n    if (comp < 0) {\n      minIndex = currentIndex + 1;\n    } else if (comp > 0) {\n      maxIndex = currentIndex - 1;\n    } else {\n      return currentIndex;\n    }\n  }\n\n  return ~maxIndex;\n}\n\nexport default {\n  bsearch,\n  compare: {\n    event: {\n      asc: compareEventsASC,\n    },\n    num: {\n      asc: compareNumbersASC,\n    },\n  },\n};\n\nexport function first<T>(array: Array<T>) {\n  return array[0];\n}\n\nexport function last<T>(array: Array<T>) {\n  return array[array.length - 1];\n}\n\nexport function findLastIndex<T>(array: T[], predicate: (value: T) => boolean): number {\n  for (let i = array.length - 1; i >= 0; i -= 1) {\n    if (predicate(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport function fill<T>(length: number, value: T): T[] {\n  if (length > 0) {\n    return Array.from<T, T>({ length }, () => {\n      if (Array.isArray(value)) {\n        return value.slice() as unknown as T;\n      }\n\n      return value;\n    });\n  }\n\n  return [];\n}\n","import { isFunction, isNil, isNumber, isString } from '@src/utils/type';\n\nexport type ItemID = string | number;\nexport type Item = {\n  _id?: ItemID;\n  [k: string | number]: any;\n};\n\nexport type Filter<ItemType> = (item: ItemType) => boolean;\n\n/**\n * Generic collection base on ES6 Map.\n *\n * It needs function for get model's unique id.\n *\n * if the function is not supplied then it uses default function {@link Collection#getItemID}\n * @param {function} [getItemIDFn] function for get model's id.\n */\nexport default class Collection<ItemType extends Item> {\n  private internalMap: Map<ItemID, ItemType> = new Map();\n\n  constructor(getItemIDFn?: (item: ItemType) => ItemID) {\n    if (isFunction(getItemIDFn)) {\n      this.getItemID = getItemIDFn;\n    }\n  }\n\n  /**\n   * Combine supplied function filters and condition.\n   * @param {...Filter} filterFns - function filters\n   * @returns {function} combined filter\n   */\n  static and<ItemType>(...filterFns: Array<Filter<ItemType>>) {\n    const { length } = filterFns;\n\n    return (item: ItemType) => {\n      for (let i = 0; i < length; i += 1) {\n        if (!filterFns[i].call(null, item)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }\n\n  /**\n   * Combine multiple function filters with OR clause.\n   * @param {...function} filterFns - function filters\n   * @returns {function} combined filter\n   */\n  static or<ItemType>(...filterFns: Array<Filter<ItemType>>) {\n    const { length } = filterFns;\n\n    if (!length) {\n      return () => false;\n    }\n\n    return (item: ItemType) => {\n      let result = filterFns[0].call(null, item);\n\n      for (let i = 1; i < length; i += 1) {\n        result = result || filterFns[i].call(null, item);\n      }\n\n      return result;\n    };\n  }\n\n  /**\n   * get model's unique id.\n   * @param {object} item model instance.\n   * @returns {string | number} model unique id.\n   */\n  getItemID(item: ItemType): ItemID {\n    return item?._id ?? '';\n  }\n\n  getFirstItem(): ItemType | null {\n    const iterator = this.internalMap.values();\n\n    return iterator.next().value;\n  }\n\n  /**\n   * add models.\n   * @param {Object[]} items - models to add this collection.\n   */\n  add(...items: ItemType[]): Collection<ItemType> {\n    items.forEach((item) => {\n      const id = this.getItemID(item);\n\n      this.internalMap.set(id, item);\n    });\n\n    return this;\n  }\n\n  /**\n   * remove models.\n   * @param {Array.<(Object|string|number)>} items model instances or unique ids to delete.\n   */\n  remove(...items: Array<ItemType | ItemID>): ItemType[] | ItemType {\n    const removeResult: ItemType[] = [];\n\n    items.forEach((item) => {\n      const id: ItemID = isString(item) || isNumber(item) ? item : this.getItemID(item);\n\n      if (!this.internalMap.has(id)) {\n        return;\n      }\n\n      removeResult.push(this.internalMap.get(id) as ItemType);\n      this.internalMap['delete'](id);\n    });\n\n    return removeResult.length === 1 ? removeResult[0] : removeResult;\n  }\n\n  /**\n   * check collection has specific model.\n   * @param {(object|string|number)} id model instance or id to check\n   * @returns {boolean} is has model?\n   */\n  has(item: ItemType | ItemID): boolean {\n    const id: ItemID = isString(item) || isNumber(item) ? item : this.getItemID(item);\n\n    return this.internalMap.has(id);\n  }\n\n  get(item: ItemType | ItemID): ItemType | null {\n    const id: ItemID = isString(item) || isNumber(item) ? item : this.getItemID(item);\n\n    return this.internalMap.get(id) ?? null;\n  }\n\n  /**\n   * invoke callback when model exist in collection.\n   * @param {(string|number)} id model unique id.\n   * @param {function} callback the callback.\n   */\n  doWhenHas(id: ItemID, callback: (item: ItemType) => void) {\n    const item = this.internalMap.get(id);\n\n    if (isNil(item)) {\n      return;\n    }\n\n    callback(item);\n  }\n\n  /**\n   * Search model. and return new collection.\n   * @param {function} filterFn filter function.\n   * @returns {Collection} new collection with filtered models.\n   * @example\n   * collection.filter(function(item) {\n   *     return item.edited === true;\n   * });\n   *\n   * function filter1(item) {\n   *     return item.edited === false;\n   * }\n   *\n   * function filter2(item) {\n   *     return item.disabled === false;\n   * }\n   *\n   * collection.filter(Collection.and(filter1, filter2));\n   *\n   * collection.filter(Collection.or(filter1, filter2));\n   */\n  filter(filterFn: Filter<ItemType>): Collection<ItemType> {\n    const result = new Collection<ItemType>();\n\n    if (this.hasOwnProperty('getItemID')) {\n      result.getItemID = this.getItemID;\n    }\n\n    this.internalMap.forEach((item) => {\n      if (filterFn(item) === true) {\n        result.add(item);\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Group element by specific key values.\n   *\n   * if key parameter is function then invoke it and use returned value.\n   * @param {(string|number|function)} groupByFn key property or getter function.\n   * @returns {object.<string|number, Collection>} grouped object\n   * @example\n   * // pass `string`, `number`, `boolean` type value then group by property value.\n   * collection.groupBy('gender');    // group by 'gender' property value.\n   * collection.groupBy(50);          // group by '50' property value.\n   *\n   * // pass `function` then group by return value. each invocation `function` is called with `(item)`.\n   * collection.groupBy(function(item) {\n   *     if (item.score > 60) {\n   *         return 'pass';\n   *     }\n   *     return 'fail';\n   * });\n   */\n  groupBy(\n    groupByFn: string | number | ((item: ItemType) => string | number)\n  ): Record<string, Collection<ItemType>> {\n    const result: Record<string, Collection<ItemType>> = {};\n\n    this.internalMap.forEach((item) => {\n      let key = isFunction(groupByFn) ? groupByFn(item) : item[groupByFn];\n\n      if (isFunction(key)) {\n        key = key.call(item);\n      }\n\n      result[key] ??= new Collection<ItemType>(this.getItemID);\n      result[key].add(item);\n    });\n\n    return result;\n  }\n\n  /**\n   * Return the first item in collection that satisfies the provided function.\n   * @param {function} [findFn] - function filter\n   * @returns {object|null} item.\n   */\n  find(findFn: Filter<ItemType>): ItemType | null {\n    let result: ItemType | null = null;\n    const items = this.internalMap.values();\n    let next = items.next();\n\n    while (next.done === false) {\n      if (findFn(next.value)) {\n        result = next.value;\n        break;\n      }\n      next = items.next();\n    }\n\n    return result;\n  }\n\n  /**\n   * sort a basis of supplied compare function.\n   * @param {function} compareFn compareFunction\n   * @returns {array} sorted array.\n   */\n  sort(compareFn: (a: ItemType, b: ItemType) => number): ItemType[] {\n    return this.toArray().sort(compareFn);\n  }\n\n  /**\n   * iterate each model element.\n   *\n   * when iteratee return false then break the loop.\n   * @param {function} iteratee iteratee(item, index, items)\n   */\n  each(iteratee: (item: ItemType, key: keyof ItemType) => boolean | void) {\n    const entries = this.internalMap.entries();\n    let next = entries.next();\n\n    while (next.done === false) {\n      const [key, value] = next.value;\n      if (iteratee(value, key) === false) {\n        break;\n      }\n      next = entries.next();\n    }\n  }\n\n  /**\n   * remove all models in collection.\n   */\n  clear() {\n    this.internalMap.clear();\n  }\n\n  /**\n   * return new array with collection items.\n   * @returns {array} new array.\n   */\n  toArray(): ItemType[] {\n    return Array.from(this.internalMap.values());\n  }\n\n  get size(): number {\n    return this.internalMap.size;\n  }\n}\n","import { noop } from '@src/utils/noop';\nimport { isString } from '@src/utils/type';\n\nconst CSS_AUTO_REGEX = /^auto$|^$|%/;\n\nfunction getStyle(el: HTMLElement, style: keyof CSSStyleDeclaration) {\n  let value = el.style[style];\n\n  if ((!value || value === 'auto') && document.defaultView) {\n    const css = document.defaultView.getComputedStyle(el, null);\n    value = css ? css[style] : null;\n  }\n\n  return value === 'auto' ? null : value;\n}\n\n// eslint-disable-next-line complexity\nexport function getPosition(el: HTMLElement) {\n  if (\n    (CSS_AUTO_REGEX.test(el.style.left || '') || CSS_AUTO_REGEX.test(el.style.top || '')) &&\n    'getBoundingClientRect' in el\n  ) {\n    // When the element's left or top is 'auto'\n    const { left, top } = el.getBoundingClientRect();\n\n    return { x: left, y: top };\n  }\n\n  return {\n    x: parseFloat(el.style.left || String(0)),\n    y: parseFloat(el.style.top || String(0)),\n  };\n}\n\ntype SizeValue = 'auto' | string | null;\n\nfunction invalidateSizeValue(value: SizeValue) {\n  if (isString(value)) {\n    return CSS_AUTO_REGEX.test(value);\n  }\n\n  return value === null;\n}\n\nexport function getSize(el: HTMLElement): { width: number; height: number } {\n  const w = getStyle(el, 'width') as SizeValue;\n  const h = getStyle(el, 'height') as SizeValue;\n\n  if ((invalidateSizeValue(w) || invalidateSizeValue(h)) && el.getBoundingClientRect) {\n    const { width, height } = el.getBoundingClientRect();\n\n    return {\n      width: width || el.offsetWidth,\n      height: height || el.offsetHeight,\n    };\n  }\n\n  return {\n    width: parseFloat(w ?? '0'),\n    height: parseFloat(h ?? '0'),\n  };\n}\n\nexport function isOverlapped(el1: Element, el2: Element) {\n  const r1 = el1.getBoundingClientRect();\n  const r2 = el2.getBoundingClientRect();\n\n  return !(r1.top > r2.bottom || r1.right < r2.left || r1.bottom < r2.top || r1.left > r2.right);\n}\n\n// for ssr\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst ElementClass = typeof Element === 'undefined' ? noop : Element;\nconst elProto = ElementClass.prototype;\nconst matchSelector =\n  elProto.matches ||\n  elProto.webkitMatchesSelector ||\n  elProto.msMatchesSelector ||\n  function (this: Element, selector: string) {\n    return Array.from(document.querySelectorAll(selector)).includes(this);\n  };\n\nfunction matches(element: Node & ParentNode, selector: string) {\n  return matchSelector.call(element, selector);\n}\n\nexport function closest(element: HTMLElement, selector: string) {\n  if (matches(element, selector)) {\n    return element;\n  }\n\n  let parent = element.parentNode;\n\n  while (parent && parent !== document) {\n    if (matches(parent, selector)) {\n      return parent as HTMLElement;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return null;\n}\n\nexport function stripTags(str: string) {\n  return str.replace(/<([^>]+)>/gi, '');\n}\n","import {\n  INVALID_DATETIME_FORMAT,\n  INVALID_TIMEZONE_NAME,\n  INVALID_VIEW_TYPE,\n} from '@src/constants/error';\nimport { MESSAGE_PREFIX } from '@src/constants/message';\n\n/**\n * Define custom errors for calendar\n * These errors are exposed to the user.\n *\n * We can throw the default `Error` instance for internal errors.\n */\n\nexport class InvalidTimezoneNameError extends Error {\n  constructor(timezoneName: string) {\n    super(`${MESSAGE_PREFIX}${INVALID_TIMEZONE_NAME} - ${timezoneName}`);\n    this.name = 'InvalidTimezoneNameError';\n  }\n}\n\nexport class InvalidDateTimeFormatError extends Error {\n  constructor(dateTimeString: string) {\n    super(`${MESSAGE_PREFIX}${INVALID_DATETIME_FORMAT} - ${dateTimeString}`);\n    this.name = 'InvalidDateTimeFormatError';\n  }\n}\n\nexport class InvalidViewTypeError extends Error {\n  constructor(viewType: string) {\n    super(`${MESSAGE_PREFIX}${INVALID_VIEW_TYPE} - ${viewType}`);\n    this.name = 'InvalidViewTypeError';\n  }\n}\n","import CustomEvents from 'tui-code-snippet/customEvents/customEvents';\n\nimport type { AnyFunc } from '@t/eventBus';\n\nexport interface EventBus<\n  EventTypes extends {\n    [key: string]: AnyFunc;\n  }\n> {\n  on<EventName extends keyof EventTypes>(\n    eventName: EventName,\n    handler: EventTypes[EventName]\n  ): EventBus<EventTypes>;\n  off<EventName extends keyof EventTypes>(\n    eventName?: EventName,\n    handler?: EventTypes[EventName]\n  ): EventBus<EventTypes>;\n  once<EventName extends keyof EventTypes>(\n    eventName: EventName,\n    handler: EventTypes[EventName]\n  ): EventBus<EventTypes>;\n  fire<EventName extends keyof EventTypes>(\n    eventName: EventName,\n    ...args: Parameters<EventTypes[EventName]>\n  ): EventBus<EventTypes>;\n}\n\nexport class EventBusImpl<\n    EventTypes extends {\n      [key: string]: AnyFunc;\n    }\n  >\n  extends CustomEvents\n  implements EventBus<EventTypes>\n{\n  on<EventName extends keyof EventTypes>(eventName: EventName, handler: EventTypes[EventName]) {\n    super.on(eventName as string, handler);\n\n    return this;\n  }\n\n  off<EventName extends keyof EventTypes>(eventName?: EventName, handler?: EventTypes[EventName]) {\n    super.off(eventName as string, handler);\n\n    return this;\n  }\n\n  fire<EventName extends keyof EventTypes>(\n    eventName: EventName,\n    ...args: Parameters<EventTypes[EventName]>\n  ) {\n    super.fire(eventName as string, ...args);\n\n    return this;\n  }\n\n  once<EventName extends keyof EventTypes>(eventName: EventName, handler: EventTypes[EventName]) {\n    super.once(eventName as string, handler);\n\n    return this;\n  }\n}\n","import type { KEY } from '@src/constants/keyboard';\nimport { KEYCODE } from '@src/constants/keyboard';\n\nexport function isKeyPressed(e: KeyboardEvent, key: KEY) {\n  return e.key ? e.key === key : e.keyCode === KEYCODE[key];\n}\n","import { MESSAGE_PREFIX } from '@src/constants/message';\n\n/* eslint-disable no-console */\nexport const logger = {\n  error: (firstArg: any, ...restArgs: any[]) => {\n    console.error(`${MESSAGE_PREFIX}${firstArg}`, ...restArgs);\n  },\n  warn: (firstArg: any, ...restArgs: any[]) => {\n    console.warn(`${MESSAGE_PREFIX}${firstArg}`, ...restArgs);\n  },\n};\n","export function limit(value: number, minArr: number[], maxArr: number[]) {\n  const v = Math.max(value, ...minArr);\n\n  return Math.min(v, ...maxArr);\n}\n\n/**\n * a : b = y : x;\n * ==\n * x = (b * y) / a;\n */\nexport function ratio(a: number, b: number, y: number) {\n  return (b * y) / a;\n}\n\nexport function isBetween(value: number, min: number, max: number) {\n  return min <= value && value <= max;\n}\n","export const noop = () => {\n  // do nothing\n};\n","import type { DeepPartial } from 'ts-essentials';\n\nimport TZDate from '@src/time/date';\nimport { isObject } from '@src/utils/type';\n\nexport function pick<T extends object, K extends keyof T>(obj: T, ...propNames: K[]) {\n  return propNames.reduce((acc, key) => {\n    if (obj.hasOwnProperty(key)) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {} as Pick<T, K>);\n}\n\n/**\n * Clone an instance of a ES6 class.\n *\n * The cloned instance will have the (most of) same properties as the original.\n *\n * Reference: https://stackoverflow.com/a/44782052\n */\nexport function clone<T extends object>(source: T): T {\n  return Object.assign(Object.create(Object.getPrototypeOf(source)), source);\n}\n\n/**\n * Merge two objects together. And It has some pitfalls.\n *\n * For performance reason this function only mutates the target object.\n *\n * Also, it only merges values of nested objects. Array or TZDate instance will be totally replaced.\n *\n * Other non-basic objects are not supported.\n *\n * Since it mutates the target object, avoid using it outside immer `produce` function.\n */\nexport function mergeObject<Target, Source extends DeepPartial<Target>>(\n  target: Target,\n  source: Source = {} as Source\n) {\n  if (!isObject(source)) {\n    return target;\n  }\n\n  Object.keys(source).forEach((k) => {\n    const targetKey = k as keyof Target;\n    const sourceKey = k as keyof Source;\n\n    if (\n      !Array.isArray(source[sourceKey]) &&\n      isObject(target[targetKey]) &&\n      isObject(source[sourceKey]) &&\n      !(source[sourceKey] instanceof TZDate)\n    ) {\n      target[targetKey] = mergeObject(\n        target[targetKey],\n        source[sourceKey] as DeepPartial<Target[keyof Target]>\n      );\n    } else {\n      target[targetKey] = source[sourceKey] as unknown as Target[keyof Target];\n    }\n  });\n\n  return target;\n}\n","/**\n * Pass the prop to component conditionally.\n * just passing `undefined` violates the ESLint rule, and it's less readable.\n * So let's use this function to pass the conditional prop.\n */\nexport function passConditionalProp<P>(condition: boolean, prop: P) {\n  // eslint-disable-next-line no-undefined\n  return condition ? prop : undefined;\n}\n","import { noop } from '@src/utils/noop';\n\n// Reference: https://medium.com/trabe/preventing-click-events-on-double-click-with-react-the-performant-way-1416ab03b835\nexport function requestTimeout(fn: Function, delay: number, registerCancel: Function) {\n  let start: DOMHighResTimeStamp;\n\n  const loop = (timestamp: DOMHighResTimeStamp) => {\n    if (!start) {\n      start = timestamp;\n    }\n    const elapsed = timestamp - start;\n\n    if (elapsed >= delay) {\n      fn();\n      registerCancel(noop);\n\n      return;\n    }\n\n    const raf = requestAnimationFrame(loop);\n    registerCancel(() => cancelAnimationFrame(raf));\n  };\n\n  const raf = requestAnimationFrame(loop);\n  registerCancel(() => cancelAnimationFrame(raf));\n}\n","import DOMPurify from 'isomorphic-dompurify';\n\n// For temporarily saving original target value\nconst TEMP_TARGET_ATTRIBUTE = 'data-target-temp';\n\n/**\n * Add DOMPurify hook to handling exceptional rules for certain HTML attributes.\n * Should be set when the calendar instance is created.\n */\nexport function addAttributeHooks() {\n  DOMPurify.addHook('beforeSanitizeAttributes', (node) => {\n    // Preserve default target attribute value\n    if (node.tagName === 'A') {\n      const targetValue = node.getAttribute('target');\n\n      if (targetValue) {\n        node.setAttribute(TEMP_TARGET_ATTRIBUTE, targetValue);\n      } else {\n        node.setAttribute('target', '_self'); // set default value\n      }\n    }\n  });\n\n  DOMPurify.addHook('afterSanitizeAttributes', (node) => {\n    if (node.tagName === 'A' && node.hasAttribute(TEMP_TARGET_ATTRIBUTE)) {\n      node.setAttribute('target', node.getAttribute(TEMP_TARGET_ATTRIBUTE) as string);\n      node.removeAttribute(TEMP_TARGET_ATTRIBUTE);\n      // Additionally set `rel=\"noopener\"` to prevent another security issue.\n      if (node.getAttribute('target') === '_blank') {\n        node.setAttribute('rel', 'noopener');\n      }\n    }\n  });\n}\n\n/**\n * Remove all attribute sanitizing hooks.\n * Use it in `Calendar#destroy`.\n */\nexport function removeAttributeHooks() {\n  DOMPurify.removeAllHooks();\n}\n\n/**\n * Prevent XSS attack by sanitizing input string values via DOMPurify\n */\nexport function sanitize(str: string) {\n  return DOMPurify.sanitize(str);\n}\n","import { isNil } from '@src/utils/type';\n\ninterface StampObj extends Record<string, any> {\n  // eslint-disable-next-line camelcase\n  __fe_id?: number;\n}\n\nfunction idGenerator() {\n  let id = 0;\n\n  return {\n    next() {\n      id += 1;\n\n      return id;\n    },\n  };\n}\n\nconst getId = (function () {\n  const generator = idGenerator();\n\n  return () => generator.next();\n})();\n\nexport function stamp(obj: StampObj): number {\n  if (!obj.__fe_id) {\n    // eslint-disable-next-line camelcase\n    obj.__fe_id = getId();\n  }\n\n  return obj.__fe_id;\n}\n\nexport function hasStamp(obj: StampObj): boolean {\n  return !isNil(obj.__fe_id);\n}\n","export function capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import isUndefined from 'tui-code-snippet/type/isUndefined';\n\nexport function isNil(value: unknown): value is null | undefined {\n  return isUndefined(value) || value === null;\n}\n\nexport function isPresent<T>(value: T | null | undefined): value is T {\n  return !isNil(value);\n}\n\nexport function isFunction(value: unknown): value is Function {\n  return typeof value === 'function';\n}\n\nexport { default as isBoolean } from 'tui-code-snippet/type/isBoolean';\nexport { default as isNumber } from 'tui-code-snippet/type/isNumber';\nexport { default as isObject } from 'tui-code-snippet/type/isObject';\nexport { default as isString } from 'tui-code-snippet/type/isString';\nexport { default as isUndefined } from 'tui-code-snippet/type/isUndefined';\n","// @FIXME\n\nimport type { ComponentProps } from 'preact';\nimport { h } from 'preact';\n\nimport type { StoryFn } from '@storybook/preact';\n\nimport { Column } from '@src/components/timeGrid/column';\nimport { cls } from '@src/helpers/css';\nimport { createTimeGridData, getWeekDates } from '@src/helpers/grid';\nimport TZDate from '@src/time/date';\n\nimport type { PropsWithChildren } from '@t/components/common';\n\nexport default { title: 'Components/Column', component: Column };\n\nfunction Wrapper({ children }: PropsWithChildren) {\n  return (\n    <div className={cls('layout')} style={{ position: 'relative' }}>\n      {children}\n    </div>\n  );\n}\n\nfunction getTimeGridData() {\n  const now = new TZDate();\n  const weekDates = getWeekDates(now, { startDayOfWeek: 0, workweek: false });\n  return createTimeGridData(weekDates, { hourStart: 0, hourEnd: 24 });\n}\n\nconst Template: StoryFn<ComponentProps<typeof Column>> = (args) => (\n  <Wrapper>\n    <Column {...args} />\n  </Wrapper>\n);\n\nexport const Default = Template.bind({});\nDefault.args = {\n  columnDate: new TZDate(),\n  timeGridData: getTimeGridData(),\n  totalUIModels: [],\n  columnWidth: '20%',\n};\n\n// const getBackgroundEvents = () => {\n//   const start = toStartOfDay(new TZDate());\n//   start.setHours(8);\n//\n//   const data: EventObject[] = [\n//     {\n//       category: 'background',\n//       start,\n//       end: addHours(start, 1),\n//       backgroundColor: 'rgba(100, 100, 100, .3)',\n//     },\n//     {\n//       category: 'background',\n//       start: addMinutes(start, 150),\n//       end: addHours(start, 3),\n//       backgroundColor: 'rgba(200, 100, 100, .3)',\n//     },\n//     {\n//       category: 'background',\n//       start: addHours(start, 4),\n//       end: addHours(start, 6),\n//       backgroundColor: 'rgba(100, 200, 100, .3)',\n//     },\n//   ];\n//   return createEventModels(data);\n// };\n// export const WithBackgroundEvents = Template.bind({});\n// WithBackgroundEvents.args = {\n//   columnDate: new TZDate(),\n//   timeGridData: getTimeGridData(),\n//   totalUIModels: [getBackgroundEvents()],\n//   columnWidth: '20%',\n// };\n","import { h } from 'preact';\n\nimport { DayGridMonth } from '@src/components/dayGridMonth/dayGridMonth';\nimport { GridCell } from '@src/components/dayGridMonth/gridCell';\nimport { GridRow } from '@src/components/dayGridMonth/gridRow';\nimport { Layout } from '@src/components/layout';\nimport { createDateMatrixOfMonth } from '@src/helpers/grid';\nimport TZDate from '@src/time/date';\nimport { getRowStyleInfo } from '@src/time/datetime';\n\nimport { getWeekDates } from '@stories/util/mockCalendarDates';\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\n\nimport type { CalendarMonthOptions } from '@t/store';\n\nexport default { title: 'Components/DayGridMonth', component: DayGridMonth };\n\nexport const Cell = () => {\n  const date = new TZDate();\n\n  return (\n    <ProviderWrapper>\n      <Layout>\n        <GridCell date={date} style={{ width: 100, height: 100 }} contentAreaHeight={100} />\n      </Layout>\n    </ProviderWrapper>\n  );\n};\n\nexport const Week = () => {\n  const weekDates = getWeekDates();\n\n  const { rowStyleInfo } = getRowStyleInfo(weekDates.length, false, 0, false);\n\n  return (\n    <ProviderWrapper>\n      <Layout>\n        <GridRow rowInfo={rowStyleInfo} contentAreaHeight={100} week={weekDates} />\n      </Layout>\n    </ProviderWrapper>\n  );\n};\n\nexport const Month = () => {\n  const monthOptions: CalendarMonthOptions = {\n    visibleWeeksCount: 3,\n    workweek: false,\n    narrowWeekend: false,\n    startDayOfWeek: 0,\n    isAlways6Weeks: true,\n    dayNames: [],\n    visibleEventCount: 6,\n  };\n\n  const dateMatrix = createDateMatrixOfMonth(new Date(), monthOptions);\n\n  const { rowStyleInfo, cellWidthMap } = getRowStyleInfo(\n    dateMatrix[0].length,\n    monthOptions.narrowWeekend,\n    monthOptions.startDayOfWeek,\n    monthOptions.workweek\n  );\n\n  const rowInfo = rowStyleInfo.map((cellStyleInfo, index) => ({\n    ...cellStyleInfo,\n    date: dateMatrix[0][index],\n  }));\n\n  return (\n    <ProviderWrapper>\n      <Layout>\n        <DayGridMonth dateMatrix={dateMatrix} rowInfo={rowInfo} cellWidthMap={cellWidthMap} />\n      </Layout>\n    </ProviderWrapper>\n  );\n};\n","import { h } from 'preact';\n\nimport type { Story } from '@storybook/preact';\n\nimport { Day } from '@src/components/view/day';\nimport EventModel from '@src/model/eventModel';\nimport TZDate from '@src/time/date';\nimport { addDate } from '@src/time/datetime';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\nimport { createRandomEventModelsForMonth, createRandomEvents } from '@stories/util/randomEvents';\n\nexport default { title: 'Views/DayView', component: Day };\n\nfunction createTimeGridEvents() {\n  const today = new TZDate();\n  const start = addDate(new TZDate(), -today.getDay());\n  const end = addDate(start, 6);\n\n  return createRandomEvents('week', start, end).map((event) => new EventModel(event));\n}\n\nconst Template: Story = (args) => (\n  <ProviderWrapper options={args.options} events={args.events}>\n    <Day />\n  </ProviderWrapper>\n);\n\nexport const basic = Template.bind({});\n\nexport const randomEvents = Template.bind({});\nrandomEvents.args = {\n  events: [...createRandomEventModelsForMonth(40), ...createTimeGridEvents()],\n  options: { useFormPopup: true, useDetailPopup: true },\n};\n","import { h } from 'preact';\n\nimport { mockDayViewEvents } from '@stories/mocks/mockDayViewEvents';\nimport type { CalendarExampleStory } from '@stories/util/calendarExample';\nimport { CalendarExample } from '@stories/util/calendarExample';\n\nexport default { title: 'E2E/Day View' };\n\nconst Template: CalendarExampleStory = (args) => <CalendarExample {...args} />;\nTemplate.args = {\n  options: {\n    defaultView: 'day',\n    useFormPopup: true,\n    useDetailPopup: true,\n    week: {\n      showNowIndicator: false,\n    },\n  },\n  containerHeight: '100vh',\n};\n\nexport const FixedEvents = Template.bind({});\nFixedEvents.args = {\n  ...Template.args,\n  onInit: (cal) => {\n    cal.createEvents(mockDayViewEvents);\n    cal.on('beforeUpdateEvent', ({ event, changes }) => {\n      cal.updateEvent(event.id, event.calendarId, changes);\n    });\n  },\n};\n\nexport const ReadOnly = Template.bind({});\nReadOnly.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    isReadOnly: true,\n  },\n  onInit: FixedEvents.args.onInit,\n};\n\nexport const MultipleTimezones = Template.bind({});\nMultipleTimezones.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    week: {\n      showTimezoneCollapseButton: true,\n    },\n    theme: {\n      week: {\n        dayGridLeft: {\n          width: '120px',\n        },\n        timeGridLeft: {\n          width: '120px',\n        },\n      },\n    },\n    timezone: {\n      zones: [\n        {\n          timezoneName: 'Asia/Karachi',\n          displayLabel: '+05:00',\n        },\n        {\n          timezoneName: 'US/Samoa',\n          displayLabel: '-11:00',\n        },\n      ],\n    },\n  },\n};\n","import { h } from 'preact';\n\nimport {\n  MOCK_MONTH_VIEW_BASE_DATE,\n  mockMonthViewEventsFixed,\n} from '@stories/mocks/mockMonthViewEvents';\nimport type { CalendarExampleStory } from '@stories/util/calendarExample';\nimport { CalendarExample } from '@stories/util/calendarExample';\n\nexport default { title: 'E2E/Month View' };\n\nconst Template: CalendarExampleStory = (args) => <CalendarExample {...args} />;\nTemplate.args = {\n  containerHeight: '100vh',\n};\n\nexport const Empty = Template.bind({});\nEmpty.args = {\n  ...Template.args,\n  options: {\n    defaultView: 'month',\n  },\n};\n\nexport const FixedEvents = Template.bind({});\nFixedEvents.args = {\n  ...Template.args,\n  options: {\n    defaultView: 'month',\n    useFormPopup: true,\n    useDetailPopup: true,\n    onRenderEventDetailPopup: ()=> {\n      return <div>abc</div>\n    }\n  },\n  onInit: (cal) => {\n    cal.setDate(MOCK_MONTH_VIEW_BASE_DATE);\n    cal.createEvents(mockMonthViewEventsFixed);\n    cal.on('beforeUpdateEvent', ({ event, changes }) => {\n      cal.updateEvent(event.id, event.calendarId, changes);\n    });\n  },\n};\n\nexport const ReadOnly = Template.bind({});\nReadOnly.args = {\n  ...Template.args,\n  options: {\n    defaultView: 'month',\n    useFormPopup: true,\n    useDetailPopup: true,\n    isReadOnly: true,\n  },\n  onInit: FixedEvents.args.onInit,\n};\n","import { h } from 'preact';\n\nimport moment from 'moment-timezone';\n\nimport { last } from '@src/utils/array';\n\nimport { mockCalendars } from '@stories/mocks/mockCalendars';\nimport { mockWeekViewEvents } from '@stories/mocks/mockWeekViewEvents';\nimport type { CalendarExampleStory } from '@stories/util/calendarExample';\nimport { CalendarExample } from '@stories/util/calendarExample';\n\nimport type { EventObject } from '@t/events';\n\nexport default { title: 'E2E/Week View' };\n\nconst Template: CalendarExampleStory = (args) => <CalendarExample {...args} />;\nTemplate.args = {\n  options: {\n    defaultView: 'week',\n    useFormPopup: true,\n    useDetailPopup: true,\n    week: {\n      showNowIndicator: false,\n    },\n    calendars: mockCalendars,\n  },\n  containerHeight: '100vh',\n  onInit: (cal) => {\n    cal.createEvents(mockWeekViewEvents);\n    cal.on('beforeUpdateEvent', ({ event, changes }) => {\n      cal.updateEvent(event.id, event.calendarId, changes);\n    });\n  },\n};\n\nexport const FixedEvents = Template.bind({});\nFixedEvents.args = {\n  ...Template.args,\n};\n\nexport const ReadOnly = Template.bind({});\nReadOnly.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    isReadOnly: true,\n  },\n};\n\nexport const HourStartOption = Template.bind({});\nHourStartOption.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    week: {\n      hourStart: 4,\n      showNowIndicator: false,\n    },\n  },\n};\n\nexport const DifferentPrimaryTimezone = Template.bind({});\nDifferentPrimaryTimezone.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    timezone: {\n      zones: [\n        {\n          timezoneName: 'Asia/Karachi',\n        },\n      ],\n    },\n  },\n};\n\nexport const MultipleTimezones = Template.bind({});\nMultipleTimezones.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    week: {\n      showTimezoneCollapseButton: true,\n    },\n    theme: {\n      week: {\n        dayGridLeft: {\n          width: '120px',\n        },\n        timeGridLeft: {\n          width: '120px',\n        },\n      },\n    },\n    timezone: {\n      zones: [\n        {\n          timezoneName: 'Asia/Karachi',\n          displayLabel: '+05:00',\n        },\n        {\n          timezoneName: 'US/Samoa',\n          displayLabel: '-11:00',\n        },\n      ],\n    },\n  },\n  onInit: (cal) => {\n    cal.createEvents(mockWeekViewEvents);\n    cal.on('beforeUpdateEvent', ({ event, changes }) => {\n      cal.updateEvent(event.id, event.calendarId, changes);\n    });\n    cal.on('clickTimezonesCollapseBtn', (prevState) => {\n      cal.setOptions({\n        week: {\n          timezonesCollapsed: !prevState,\n        },\n      });\n    });\n  },\n};\n\nexport const DaylightSavingTimeTransition = Template.bind({});\nDaylightSavingTimeTransition.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    timezone: {\n      zones: [\n        {\n          timezoneName: 'America/Los_Angeles',\n        },\n      ],\n    },\n  },\n  onInit: (cal) => {\n    cal.setDate('2022-11-07T00:00:00Z');\n    cal.createEvents([\n      {\n        id: 'forward',\n        title: 'Forward Transition',\n        category: 'time',\n        start: '2022-03-13T09:00:00Z',\n        end: '2022-03-13T10:00:00Z',\n      },\n      {\n        id: 'fallback',\n        title: 'Fallback Transition',\n        category: 'time',\n        start: '2022-11-06T08:00:00Z',\n        end: '2022-11-06T09:00:00Z',\n      },\n    ]);\n  },\n};\n\nexport const DaylightSavingTimeTransitionSouthern = Template.bind({});\nDaylightSavingTimeTransitionSouthern.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    timezone: {\n      zones: [\n        {\n          timezoneName: 'Pacific/Auckland',\n        },\n      ],\n    },\n  },\n  onInit: (cal) => {\n    cal.setDate('2022-04-03T00:00:00Z');\n    cal.createEvents([\n      {\n        id: 'forward',\n        title: 'Forward Transition',\n        category: 'time',\n        start: '2022-09-25T01:00:00+12:00',\n        end: '2022-09-25T03:00:00+13:00',\n      },\n      {\n        id: 'fallback',\n        title: 'Fallback Transition',\n        category: 'time',\n        start: '2022-04-02T12:00:00Z',\n        end: '2022-04-02T14:00:00Z',\n      },\n    ]);\n  },\n};\n\n// NOTE: For manual testing purposes\nconst timezoneNameForSystemTimezoneTest = 'US/Pacific';\n// const timezoneNameForSystemTimezoneTest = 'Asia/Seoul';\nexport const SystemTimezoneTest = Template.bind({});\nSystemTimezoneTest.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    useFormPopup: false,\n    timezone: {\n      zones: [\n        {\n          timezoneName: timezoneNameForSystemTimezoneTest,\n        },\n      ],\n    },\n  },\n  onInit: (cal) => {\n    const convert = (d: Date) =>\n      moment\n        .tz(\n          moment([\n            d.getFullYear(),\n            d.getMonth(),\n            d.getDate(),\n            d.getHours(),\n            d.getMinutes(),\n            d.getSeconds(),\n          ]).format('YYYY-MM-DD HH:mm:ss'),\n          timezoneNameForSystemTimezoneTest\n        )\n        .toISOString();\n\n    cal.setDate('2022-03-09T00:00:00Z');\n\n    cal.createEvents([\n      {\n        id: 'pst',\n        title: 'PST',\n        start: '2022-03-09T09:00:00Z', // 01:00 UTC-08, 18:00 UTC+09\n        end: '2022-03-09T10:00:00Z', // 02:00 UTC-08, 19:00 UTC+09\n      },\n      {\n        id: 'pdt',\n        title: 'PDT',\n        start: '2022-03-16T08:00:00Z', // 01:00 UTC-07, 17:00 UTC+09\n        end: '2022-03-16T09:00:00Z', // 02:00 UTC-07, 18:00 UTC+09\n      },\n    ]);\n\n    cal.on('selectDateTime', (info) => {\n      const startDate = info.start;\n      const endDate = info.end;\n\n      cal.createEvents([\n        {\n          id: Date.now().toString(32).slice(0, 8),\n          title: 'New Event',\n          start: convert(startDate),\n          end: convert(endDate),\n          category: 'time',\n        },\n      ]);\n\n      cal.clearGridSelections();\n    });\n\n    cal.on('beforeUpdateEvent', ({ event, changes }) => {\n      const zonedChanges = Object.keys(changes).reduce<EventObject>((acc, _k) => {\n        const key = _k as keyof EventObject;\n        acc[key] = convert(changes[key]);\n\n        return acc;\n      }, {});\n\n      cal.updateEvent(event.id, event.calendarId, zonedChanges);\n    });\n  },\n};\n\nexport const CustomTemplate = Template.bind({});\nCustomTemplate.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    template: {\n      alldayTitle() {\n        // Insert <script> for DOM Purify Test\n        return '<span><script></script>CUSTOM All Day</span>';\n      },\n      taskTitle() {\n        return '<span>CUSTOM TASK</span>';\n      },\n    },\n  },\n};\n\nexport const DuplicateEvents = Template.bind({});\nDuplicateEvents.args = {\n  ...Template.args,\n  options: {\n    ...Template.args.options,\n    week: {\n      ...Template.args.options?.week,\n      collapseDuplicateEvents: {\n        getDuplicateEvents: (targetEvent, events) =>\n          events\n            .filter((event) => event.id === targetEvent.id)\n            .sort((a, b) => (b.calendarId > a.calendarId ? 1 : -1)), // descending order\n        getMainEvent: (events) =>\n          events.find(({ title }) => title.includes('- main')) || last(events),\n      },\n    },\n    useDetailPopup: false,\n  },\n};\n","import { Fragment, h } from 'preact';\n\nimport type { Story } from '@storybook/preact';\n\nimport { EventDetailPopup } from '@src/components/popup/eventDetailPopup';\nimport { EventFormPopup } from '@src/components/popup/eventFormPopup';\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport EventModel from '@src/model/eventModel';\nimport TZDate from '@src/time/date';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\n\nimport type { PropsWithChildren } from '@t/components/common';\nimport type { EventDetailPopupParam } from '@t/store';\n\nexport default {\n  component: EventDetailPopup,\n  title: 'Popups/EventDetailPopup',\n};\n\nfunction Wrapper({ children, event, eventRect }: PropsWithChildren<EventDetailPopupParam>) {\n  const { showDetailPopup } = useDispatch('popup');\n  showDetailPopup(\n    {\n      event,\n      eventRect,\n    },\n    false\n  );\n\n  return <Fragment>{children}</Fragment>;\n}\n\nconst Template: Story<EventDetailPopupParam> = ({ event }) => (\n  <ProviderWrapper>\n    <Wrapper\n      event={event}\n      eventRect={{\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100,\n      }}\n    >\n      <EventDetailPopup />\n      <EventFormPopup />\n    </Wrapper>\n  </ProviderWrapper>\n);\n\nexport const EventDetailPopupWithCalendars = Template.bind({});\nEventDetailPopupWithCalendars.args = {\n  event: new EventModel({\n    id: 'id',\n    calendarId: 'calendar id',\n    title: 'title',\n    body: 'body',\n    start: new TZDate(),\n    end: new TZDate(),\n    isAllday: false,\n    location: 'location',\n    attendees: ['attendee1', 'attendee2'],\n    recurrenceRule: 'recurrence rule',\n    isReadOnly: false,\n    backgroundColor: '#03bd9e',\n    state: 'Busy',\n  }),\n};\n","import { Fragment, h } from 'preact';\n\nimport type { Story } from '@storybook/preact';\n\nimport { EventFormPopup } from '@src/components/popup/eventFormPopup';\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport TZDate from '@src/time/date';\n\nimport { calendars as mockCalendars } from '@stories/util/mockCalendars';\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\n\nimport type { PropsWithChildren } from '@t/components/common';\nimport type { CalendarInfo } from '@t/options';\nimport type { EventFormPopupParam } from '@t/store';\n\nexport default {\n  component: EventFormPopup,\n  title: 'Popups/EventFormPopup',\n};\n\ninterface EventFormPopupStoryProps extends EventFormPopupParam {\n  calendars?: CalendarInfo[];\n}\n\nfunction Wrapper({\n  children,\n  title,\n  location,\n  start,\n  end,\n  isAllday,\n  isPrivate,\n  isCreationPopup,\n}: PropsWithChildren<EventFormPopupParam>) {\n  const { showFormPopup } = useDispatch('popup');\n  showFormPopup({\n    isCreationPopup,\n    title,\n    location,\n    start,\n    end,\n    isAllday,\n    isPrivate,\n  });\n\n  return <Fragment>{children}</Fragment>;\n}\n\nconst Template: Story<EventFormPopupStoryProps> = ({\n  calendars,\n  title,\n  location,\n  start,\n  end,\n  isAllday = false,\n  isPrivate = false,\n}) => (\n  <ProviderWrapper options={{ calendars }}>\n    <Wrapper\n      title={title}\n      location={location}\n      start={start}\n      end={end}\n      isAllday={isAllday}\n      isPrivate={isPrivate}\n      isCreationPopup={true}\n    >\n      <EventFormPopup />\n    </Wrapper>\n  </ProviderWrapper>\n);\n\nexport const EventFormPopupWithCalendars = Template.bind({});\nEventFormPopupWithCalendars.args = {\n  start: new TZDate(),\n  end: new TZDate(),\n  calendars: mockCalendars,\n};\n\nexport const EventFormPopupWithoutCalendars = Template.bind({});\nEventFormPopupWithoutCalendars.args = {\n  start: new TZDate(),\n  end: new TZDate(),\n};\n","import { h } from 'preact';\n\nimport { BackgroundEvent } from '@src/components/events/backgroundEvent';\nimport { TimeEvent } from '@src/components/events/timeEvent';\nimport EventModel from '@src/model/eventModel';\nimport EventUIModel from '@src/model/eventUIModel';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\n\nexport default { title: 'Components/EventBlocks' };\n\nexport const timeEvent = () => {\n  const event = new EventModel({\n    title: 'Time Event 2',\n    backgroundColor: 'green',\n  });\n  const uiModel = new EventUIModel(event);\n\n  return (\n    <ProviderWrapper>\n      <TimeEvent uiModel={uiModel} />\n    </ProviderWrapper>\n  );\n};\n\nexport const backgroundEvent = () => {\n  const uiModel = new EventUIModel(\n    new EventModel({\n      backgroundColor: 'rgba(100, 100, 100, .3)',\n    })\n  );\n\n  return <BackgroundEvent uiModel={uiModel} />;\n};\n","import { h } from 'preact';\n\nimport type { Story } from '@storybook/preact';\n\nimport { GridHeader } from '@src/components/dayGridCommon/gridHeader';\nimport { getRowStyleInfo } from '@src/time/datetime';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\n\nimport type { TemplateMonthDayName } from '@t/template';\n\nexport default { title: 'Components/GridHeader', component: GridHeader };\n\ninterface DayNamesStory {\n  dayNames: TemplateMonthDayName[];\n  marginLeft?: string;\n}\n\nconst Template: Story<DayNamesStory> = ({ dayNames, marginLeft }) => {\n  const { rowStyleInfo } = getRowStyleInfo(dayNames.length, true, 0, true);\n\n  return (\n    <ProviderWrapper>\n      <GridHeader\n        type=\"month\"\n        dayNames={dayNames}\n        marginLeft={marginLeft}\n        rowStyleInfo={rowStyleInfo}\n      />\n    </ProviderWrapper>\n  );\n};\n\nconst oneDayName = [\n  {\n    label: 'Mon',\n    day: 1,\n  },\n];\n\nconst threeDayNames = [\n  {\n    label: 'Mon',\n    day: 1,\n  },\n  {\n    label: 'Wed',\n    day: 3,\n  },\n  {\n    label: 'Fri',\n    day: 5,\n  },\n];\n\nexport const oneDay = Template.bind({});\noneDay.args = {\n  dayNames: oneDayName,\n};\n\nexport const threeDays = Template.bind({});\nthreeDays.args = {\n  dayNames: threeDayNames,\n};\n\nexport const oneDayWithMargin = Template.bind({});\noneDayWithMargin.args = {\n  dayNames: oneDayName,\n  marginLeft: '60px',\n};\n\nexport const threeDaysWithMargin = Template.bind({});\nthreeDaysWithMargin.args = {\n  dayNames: threeDayNames,\n  marginLeft: '60px',\n};\n","import { h } from 'preact';\n\nimport type { Story } from '@storybook/preact';\n\nimport { OtherGridRow } from '@src/components/dayGridWeek/otherGridRow';\nimport { Layout } from '@src/components/layout';\nimport { Panel } from '@src/components/panel';\nimport { createEventCollection } from '@src/controller/base';\nimport { getWeekDates, getWeekViewEvents } from '@src/helpers/grid';\nimport TZDate from '@src/time/date';\nimport { Day, getRowStyleInfo } from '@src/time/datetime';\nimport { first, last } from '@src/utils/array';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\nimport { createRandomEventModelsForMonth } from '@stories/util/randomEvents';\n\nimport type { CalendarData } from '@t/events';\n\nexport default {\n  title: 'Components/WeekGridRow',\n  component: OtherGridRow,\n  args: { primary: true },\n};\n\nconst events = createRandomEventModelsForMonth(40);\n\nconst weekDates = getWeekDates(new TZDate(), { startDayOfWeek: Day.SUN, workweek: false });\nconst calendarData: CalendarData = {\n  calendars: [],\n  events: createEventCollection(...events),\n  idsOfDay: {},\n};\nconst dayGridEvents = getWeekViewEvents(weekDates, calendarData, {\n  narrowWeekend: false,\n  weekStartDate: first(weekDates),\n  weekEndDate: last(weekDates),\n});\n\nconst Template: Story = (args) => {\n  const { cellWidthMap } = getRowStyleInfo(weekDates.length, true, 0, true);\n\n  return (\n    <ProviderWrapper options={args.options} events={events}>\n      <Layout height={500}>\n        <Panel name=\"milestone\" resizable minHeight={20} maxHeight={args.maxHeight}>\n          <OtherGridRow\n            weekDates={weekDates}\n            events={dayGridEvents.milestone}\n            category=\"milestone\"\n            options={{ narrowWeekend: false }}\n            gridColWidthMap={cellWidthMap}\n          />\n        </Panel>\n      </Layout>\n    </ProviderWrapper>\n  );\n};\n\nexport const milestone = Template.bind({});\n\nmilestone.storyName = 'random events milestone';\n","import EventModel from '@src/model/eventModel';\nimport EventUIModel from '@src/model/eventUIModel';\n\nimport type { EventObject } from '@t/events';\n\nexport function createEventModels(data: EventObject[]): EventUIModel[] {\n  return data.map((datum) => new EventUIModel(new EventModel(datum)));\n}\n","import { h } from 'preact';\n\nimport { Layout } from '@src/components/layout';\nimport { Panel } from '@src/components/panel';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\n\nexport default { title: 'Components/Layout', component: Layout };\n\nexport const vertical = () => (\n  <ProviderWrapper>\n    <Layout>\n      <Panel name=\"dayName\" initialHeight={50}>\n        <div style=\"border-bottom: 1px solid #bbb; height: 100%;\">DayName Panel</div>\n      </Panel>\n      <Panel name=\"milestone\" resizable initialHeight={50}>\n        <div>Milestone Panel</div>\n      </Panel>\n      <Panel name=\"task\" resizable>\n        <div>Task Panel</div>\n      </Panel>\n      <Panel name=\"allday\" resizable minHeight={30}>\n        <div>All Day Panel</div>\n      </Panel>\n      <Panel name=\"time\" autoSize={1}>\n        <div style=\"height: 100%; border-bottom: 1px solid #bbb\">Time Panel</div>\n      </Panel>\n    </Layout>\n  </ProviderWrapper>\n);\n\nexport const verticalWithOverflow = () => (\n  <ProviderWrapper>\n    <Layout>\n      <Panel name=\"dayName\" initialHeight={50} overflowY>\n        <div style=\"border-bottom: 1px solid #bbb; height: 300px;\">Overflow-Y Panel</div>\n      </Panel>\n    </Layout>\n  </ProviderWrapper>\n);\n\nexport const horizontalWithOverflow = () => (\n  <ProviderWrapper>\n    <Layout>\n      <Panel name=\"dayName\" initialWidth={200} initialHeight={200} overflowX>\n        <div style=\"border-right: 1px solid #bbb; width: 300px;\">Overflow-X Panel</div>\n      </Panel>\n    </Layout>\n  </ProviderWrapper>\n);\n","import { h } from 'preact';\n\nimport type { Story } from '@storybook/preact';\n\nimport { Main } from '@src/components/view/main';\nimport { useDispatch } from '@src/contexts/calendarStore';\nimport { cls } from '@src/helpers/css';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\nimport { createRandomEventModelsForMonth } from '@stories/util/randomEvents';\n\nimport type { PropsWithChildren } from '@t/components/common';\n\nexport default { title: 'Views/Main', component: Main };\n\nconst style = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  bottom: 5,\n  top: 5,\n};\n\nconst Wrapper = ({ children }: PropsWithChildren) => (\n  <div className={cls('layout')} style={style}>\n    {children}\n  </div>\n);\n\nconst events = createRandomEventModelsForMonth();\n\nconst Toolbar = () => {\n  const { changeView } = useDispatch('view');\n\n  return (\n    <div>\n      <button onClick={() => changeView('month')}>Month</button>\n      <button onClick={() => changeView('week')}>Week</button>\n      <button onClick={() => changeView('day')}>Day</button>\n    </div>\n  );\n};\n\nconst Template: Story = (args) => (\n  <ProviderWrapper options={args.options} events={args.events}>\n    <Wrapper>\n      <Toolbar />\n      <Main />\n    </Wrapper>\n  </ProviderWrapper>\n);\n\nexport const Default = Template.bind({});\nDefault.args = {\n  events,\n  options: { useFormPopup: true, useDetailPopup: true },\n};\n","import type { CalendarInfo } from '@src/types/options';\n\nexport const mockCalendars: CalendarInfo[] = [\n  {\n    id: 'cal1',\n    name: 'First',\n  },\n  {\n    id: 'cal2',\n    name: 'Second',\n    borderColor: '#00a9ff',\n    backgroundColor: '#00a9ff',\n    dragBackgroundColor: '#00a9ff',\n  },\n  {\n    id: 'cal3',\n    name: 'Third',\n    borderColor: '#03bd9e',\n    backgroundColor: '#03bd9e',\n    dragBackgroundColor: '#03bd9e',\n  },\n];\n","import TZDate from '@src/time/date';\nimport { addDate, setTimeStrToDate } from '@src/time/datetime';\n\nimport type { MockedWeekViewEvents } from '@stories/mocks/types';\n\nconst today = new TZDate();\nconst yesterday = addDate(today, -1);\nconst tomorrow = addDate(today, 1);\n\nexport const mockDayViewEvents: MockedWeekViewEvents[] = [\n  {\n    id: '1',\n    calendarId: 'cal1',\n    title: 'yesterday ~ today',\n    category: 'allday',\n    isAllday: true,\n    start: yesterday,\n    end: today,\n  },\n  {\n    id: '2',\n    calendarId: 'cal1',\n    title: 'today ~ today',\n    category: 'allday',\n    isAllday: true,\n    start: today,\n    end: today,\n  },\n  {\n    id: '3',\n    calendarId: 'cal1',\n    title: 'today ~ tomorrow',\n    category: 'allday',\n    isAllday: true,\n    start: today,\n    end: tomorrow,\n  },\n  {\n    id: '4',\n    calendarId: 'cal1',\n    title: 'long time',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(yesterday, '10:00'),\n    end: setTimeStrToDate(today, '06:00'),\n  },\n  {\n    id: '5',\n    calendarId: 'cal1',\n    title: 'short time',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(today, '04:00'),\n    end: setTimeStrToDate(today, '06:00'),\n  },\n  {\n    id: '6',\n    calendarId: 'cal1',\n    title: 'short + duration',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(today, '04:00'),\n    end: setTimeStrToDate(today, '06:00'),\n    goingDuration: 60,\n    comingDuration: 120,\n  },\n];\n","import TZDate from '@src/time/date';\nimport { addDate } from '@src/time/datetime';\n\nimport type { MockedMonthViewEvents } from '@stories/mocks/types';\n\nconst DAYS_OF_WEEK = 7;\n\nexport function createMockMonthViewEvents(baseDate?: string): MockedMonthViewEvents[] {\n  const today = baseDate ? new TZDate(baseDate) : new TZDate();\n  const thisSunday = addDate(today, -today.getDay());\n  const sundayDate = thisSunday.getDate();\n  const sundayMonth = thisSunday.getMonth();\n  const todayMonth = today.getMonth();\n  const weekCount =\n    sundayMonth !== todayMonth\n      ? -1\n      : Math.floor(\n          sundayDate % DAYS_OF_WEEK ? sundayDate / DAYS_OF_WEEK : (sundayDate - 1) / DAYS_OF_WEEK\n        );\n  const firstSunday = addDate(thisSunday, -weekCount * DAYS_OF_WEEK);\n  const firstTuesday = addDate(firstSunday, 2);\n  const secondTuesday = addDate(firstTuesday, DAYS_OF_WEEK);\n  const secondThursday = addDate(secondTuesday, 2);\n  const thirdThursday = addDate(secondThursday, DAYS_OF_WEEK);\n  const thirdSaturday = addDate(thirdThursday, 2);\n\n  const mockMonthViewEvents = [\n    {\n      id: '0',\n      calendarId: 'cal1',\n      title: 'event1',\n      start: firstSunday,\n      end: secondTuesday,\n    },\n    {\n      id: '1',\n      calendarId: 'cal1',\n      title: 'event2',\n      start: secondTuesday,\n      end: secondThursday,\n    },\n    {\n      id: '2',\n      calendarId: 'cal1',\n      title: 'event3',\n      start: thirdThursday,\n      end: thirdSaturday,\n    },\n  ];\n\n  for (let i = 0; i < 10; i += 1) {\n    mockMonthViewEvents.push({\n      id: `${i}${i}`,\n      calendarId: 'cal2',\n      title: `event2-${i}`,\n      start: secondTuesday,\n      end: secondThursday,\n    });\n  }\n\n  return mockMonthViewEvents;\n}\n\nexport const mockMonthViewEvents = createMockMonthViewEvents();\n\n// For E2E tests, set the base date in order to guarantee the same events are returned\nexport const MOCK_MONTH_VIEW_BASE_DATE = '2022-04-01';\nexport const mockMonthViewEventsFixed = createMockMonthViewEvents(MOCK_MONTH_VIEW_BASE_DATE);\n","import TZDate from '@src/time/date';\nimport { addDate, setTimeStrToDate } from '@src/time/datetime';\n\nimport type { MockedWeekViewEvents } from '@stories/mocks/types';\n\nconst today = new TZDate();\nconst sunday = addDate(today, -today.getDay());\nconst monday = addDate(sunday, 1);\nconst tuesday = addDate(sunday, 2);\nconst wednesday = addDate(sunday, 3);\nconst thursday = addDate(sunday, 4);\nconst friday = addDate(sunday, 5);\nconst saturday = addDate(sunday, 6);\n\nexport const mockWeekViewEvents: MockedWeekViewEvents[] = [\n  {\n    id: '1',\n    calendarId: 'cal1',\n    title: 'event1',\n    category: 'allday',\n    isAllday: true,\n    start: sunday,\n    end: tuesday,\n  },\n  {\n    id: '2',\n    calendarId: 'cal1',\n    title: 'event2',\n    category: 'allday',\n    isAllday: true,\n    start: tuesday,\n    end: thursday,\n  },\n  {\n    id: '3',\n    calendarId: 'cal1',\n    title: 'event3',\n    category: 'allday',\n    isAllday: true,\n    start: thursday,\n    end: saturday,\n  },\n  {\n    id: '4',\n    calendarId: 'cal1',\n    title: 'two-view event',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(addDate(sunday, -1), '10:00'),\n    end: setTimeStrToDate(sunday, '06:00'),\n  },\n  {\n    id: '5',\n    calendarId: 'cal1',\n    title: 'short time event',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(wednesday, '04:00'),\n    end: setTimeStrToDate(wednesday, '06:00'),\n  },\n  {\n    id: '6',\n    calendarId: 'cal1',\n    title: 'long time event',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(friday, '10:00'),\n    end: setTimeStrToDate(saturday, '06:00'),\n  },\n  {\n    id: '7',\n    calendarId: 'cal1',\n    title: 'short + duration',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(tuesday, '05:00'),\n    end: setTimeStrToDate(tuesday, '06:00'),\n    goingDuration: 60,\n    comingDuration: 120,\n  },\n  {\n    id: '8',\n    calendarId: 'cal1',\n    title: 'same start and end',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(monday, '05:00'),\n    end: setTimeStrToDate(monday, '05:00'),\n  },\n  {\n    id: '9',\n    calendarId: 'cal3',\n    title: 'duplicate event',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(monday, '06:00'),\n    end: setTimeStrToDate(monday, '07:00'),\n  },\n  {\n    id: '9',\n    calendarId: 'cal2',\n    title: 'duplicate event with attendee',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(monday, '06:00'),\n    end: setTimeStrToDate(monday, '07:00'),\n    comingDuration: 30,\n    attendees: ['a', 'b', 'c'],\n  },\n  {\n    id: '9',\n    calendarId: 'cal1',\n    title: 'duplicate event - main',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(monday, '06:00'),\n    end: setTimeStrToDate(monday, '07:00'),\n    goingDuration: 30,\n    comingDuration: 60,\n  },\n  {\n    id: '9-1',\n    calendarId: 'cal1',\n    title: 'normal event',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(monday, '08:00'),\n    end: setTimeStrToDate(monday, '09:00'),\n  },\n  {\n    id: '9-2',\n    calendarId: 'cal2',\n    title: 'other event',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(monday, '08:00'),\n    end: setTimeStrToDate(monday, '09:00'),\n  },\n  {\n    id: '10',\n    calendarId: 'cal1',\n    title: 'duplicate event 2',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(monday, '09:00'),\n    end: setTimeStrToDate(monday, '10:00'),\n  },\n  {\n    id: '10',\n    calendarId: 'cal2',\n    title: 'duplicate event 2 with attendee',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(monday, '09:00'),\n    end: setTimeStrToDate(monday, '10:00'),\n    attendees: ['a', 'b', 'c'],\n    goingDuration: 30,\n  },\n  {\n    id: '10',\n    calendarId: 'cal3',\n    title: 'duplicate event 2 - main',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(monday, '09:00'),\n    end: setTimeStrToDate(monday, '10:00'),\n    goingDuration: 30,\n    comingDuration: 60,\n  },\n  {\n    id: '11',\n    calendarId: 'cal1',\n    title: 'duplicate long event',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(wednesday, '07:00'),\n    end: setTimeStrToDate(thursday, '04:00'),\n  },\n  {\n    id: '11',\n    calendarId: 'cal2',\n    title: 'duplicate long event - main',\n    category: 'time',\n    isAllday: false,\n    start: setTimeStrToDate(wednesday, '07:00'),\n    end: setTimeStrToDate(thursday, '04:00'),\n    attendees: ['a', 'b', 'c'],\n  },\n];\n","import { h } from 'preact';\n\nimport type { Story } from '@storybook/preact';\n\nimport { Month } from '@src/components/view/month';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\nimport { createRandomEventModelsForMonth } from '@stories/util/randomEvents';\n\nexport default { title: 'Views/MonthView', component: Month };\n\nconst Template: Story = (args) => (\n  <ProviderWrapper options={args.options} events={args.events}>\n    <Month />\n  </ProviderWrapper>\n);\n\nexport const basic = Template.bind({});\n\nexport const narrowWeekend = Template.bind({});\nnarrowWeekend.args = {\n  options: { month: { narrowWeekend: true } },\n};\n\nexport const startDayOfWeek = Template.bind({});\nstartDayOfWeek.args = {\n  options: { month: { startDayOfWeek: 3 } },\n};\n\nexport const dayNames = Template.bind({});\ndayNames.args = {\n  options: {\n    month: {\n      dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    },\n  },\n};\n\nexport const workweek = Template.bind({});\nworkweek.args = {\n  options: { month: { workweek: true } },\n};\n\nexport const twoWeeks = Template.bind({});\ntwoWeeks.args = {\n  options: { month: { visibleWeeksCount: 2 } },\n};\n\nexport const randomEvents = Template.bind({});\nrandomEvents.args = {\n  options: { month: { narrowWeekend: true } },\n  events: createRandomEventModelsForMonth(40),\n};\n","import type { ComponentProps } from 'preact';\nimport { h } from 'preact';\n\nimport type { StoryFn } from '@storybook/preact';\n\nimport { TimeGrid } from '@src/components/timeGrid/timeGrid';\nimport { cls, toPercent } from '@src/helpers/css';\nimport { createTimeGridData, getWeekDates } from '@src/helpers/grid';\nimport TZDate from '@src/time/date';\nimport { addDate, toStartOfDay } from '@src/time/datetime';\n\nimport normalEvents from '@stories/data/events.json';\nimport { createEventModels } from '@stories/helper/event';\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\nimport { createRandomEvents } from '@stories/util/randomEvents';\n\nimport type { EventObject } from '@t/events';\n\nexport default { title: 'Components/TimeGrid', component: TimeGrid };\n\nfunction toThisWeek(date: TZDate) {\n  const today = toStartOfDay(new TZDate());\n  const adjustForWeekStart = today.getDay();\n  const day = date.getDay();\n\n  date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate() - adjustForWeekStart);\n\n  return addDate(date, day);\n}\n\nfunction getNormalEvents() {\n  return normalEvents.map((event) => {\n    const start = toThisWeek(new TZDate(event.start));\n    const end = toThisWeek(new TZDate(event.end));\n\n    return {\n      ...event,\n      start,\n      end,\n    };\n  });\n}\n\nfunction getEvents() {\n  // const start = toStartOfDay(new TZDate());\n  // const adjustForWeekStart = start.getDay();\n  // const disabledAMEvents: EventObject[] = range(0, 7).map((date) => {\n  //   const eventStart = addDate(start, date - adjustForWeekStart);\n  //\n  //   return {\n  //     category: 'background',\n  //     start: eventStart,\n  //     end: addHours(eventStart, 9),\n  //     backgroundColor: 'rgba(100, 100, 100, .3)',\n  //   };\n  // });\n  // const disabledPMEvents: EventObject[] = range(0, 7).map((date) => {\n  //   const eventStart = addDate(start, date - adjustForWeekStart);\n  //\n  //   return {\n  //     category: 'background',\n  //     start: addHours(eventStart, 18),\n  //     end: addHours(eventStart, 24),\n  //     backgroundColor: 'rgba(100, 100, 100, .3)',\n  //   };\n  // });\n  // const disabledLunchEvents: EventObject[] = range(0, 7).map((date) => {\n  //   const eventStart = addDate(start, date - adjustForWeekStart);\n  //\n  //   return {\n  //     category: 'background',\n  //     start: addHours(eventStart, 12),\n  //     end: addHours(eventStart, 13),\n  //     backgroundColor: 'rgba(23, 255, 100, .3)',\n  //   };\n  // });\n  // const data: EventObject[] = disabledAMEvents.concat(\n  //   disabledPMEvents,\n  //   disabledLunchEvents,\n  //   getNormalEvents()\n  // );\n\n  return createEventModels(getNormalEvents());\n}\n\nfunction getTimeGridData() {\n  const now = new TZDate();\n  const weekDates = getWeekDates(now, { startDayOfWeek: 0, workweek: false });\n  return createTimeGridData(weekDates, { hourStart: 0, hourEnd: 24 });\n}\n\ntype TimeGridProps = ComponentProps<typeof TimeGrid>;\nconst Template: StoryFn<TimeGridProps> = (args) => (\n  <ProviderWrapper>\n    <div className={cls('layout')} style={{ height: toPercent(100) }}>\n      <TimeGrid {...args} />\n    </div>\n  </ProviderWrapper>\n);\n\nexport const Basic = Template.bind({});\nBasic.args = {\n  events: getEvents(),\n  timeGridData: getTimeGridData(),\n};\n\nexport const RandomEvents = Template.bind({});\nconst getRandomEvents = () => {\n  const today = new TZDate();\n  const start = addDate(new TZDate(), -today.getDay());\n  const end = addDate(start, 6);\n  const data: EventObject[] = createRandomEvents('week', start, end);\n  return createEventModels(data);\n};\nRandomEvents.args = {\n  events: getRandomEvents(),\n  timeGridData: getTimeGridData(),\n};\n","import { h } from 'preact';\nimport { useLayoutEffect, useRef } from 'preact/hooks';\n\nimport type { Story } from '@storybook/preact';\n\nimport Calendar from '@src/factory/calendar';\n\nimport type { Options } from '@t/options';\n\ninterface Props {\n  options?: Options;\n  containerHeight?: number | string;\n  onInit?: (instance: Calendar) => void;\n}\n\nexport type CalendarExampleStory = Story<Props>;\n\nexport function CalendarExample({ options, containerHeight = 600, onInit }: Props) {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const calendarRef = useRef<Calendar | null>(null);\n\n  useLayoutEffect(() => {\n    if (containerRef.current) {\n      \n      calendarRef.current = new Calendar(containerRef.current, options);\n\n      // For handling instance after initialization.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      window.$cal = calendarRef.current;\n\n      onInit?.(calendarRef.current);\n    }\n  }, [onInit, options]);\n\n  return <div className=\"container\" ref={containerRef} style={{ height: containerHeight }} />;\n}\n","import range from 'tui-code-snippet/array/range';\n\nimport TZDate from '@src/time/date';\n\nfunction getMockCurrentDate() {\n  const current = new Date();\n  const year = current.getFullYear();\n  const month = current.getMonth();\n  const date = current.getDate();\n  const dayOfWeek = current.getDay();\n\n  return { year, month, date, dayOfWeek };\n}\n\nexport function getWeekDates() {\n  const { year, month, date, dayOfWeek } = getMockCurrentDate();\n\n  return range(7).map((index) => new TZDate(year, month, date + (index - dayOfWeek)));\n}\n\nexport function getWeekendDates() {\n  const { year, month } = getMockCurrentDate();\n  const [, , , , , , saturday] = getWeekDates();\n\n  return [saturday, new TZDate(year, month, saturday.getDate() + 1)];\n}\n","import type { CalendarInfo } from '@t/options';\n\nexport const calendars: CalendarInfo[] = [];\n\nfunction addCalendar(calendar: CalendarInfo) {\n  calendars.push(calendar);\n}\n\nconst generateCalendarId = (function () {\n  let id = 0;\n\n  return function () {\n    id = id + 1;\n\n    return id;\n  };\n})();\n\nfunction initialize() {\n  const calendarNames = [\n    'My Calendar',\n    'Company',\n    'Family',\n    'Friend',\n    'Travel',\n    'etc',\n    'Birthdays',\n    'National Holidays',\n  ];\n  const calendarColors = [\n    '#9e5fff',\n    '#00a9ff',\n    '#ff5583',\n    '#03bd9e',\n    '#bbdc00',\n    '#9d9d9d',\n    '#ffbb3b',\n    '#ff4040',\n  ];\n\n  calendarNames.forEach((name, idx) => {\n    const color = calendarColors[idx];\n    addCalendar({\n      id: String(generateCalendarId()),\n      name,\n      color: '#000',\n      backgroundColor: color,\n      borderColor: color,\n      dragBackgroundColor: color,\n    });\n  });\n}\n\ninitialize();\n","import type { RenderableProps } from 'preact';\nimport { h } from 'preact';\n\nimport { CalendarContainer } from '@src/calendarContainer';\nimport { initCalendarStore } from '@src/contexts/calendarStore';\nimport { initThemeStore } from '@src/contexts/themeStore';\nimport type EventModel from '@src/model/eventModel';\nimport { EventBusImpl } from '@src/utils/eventBus';\n\nimport type { Options } from '@t/options';\n\nconst rootContainerStyle = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  bottom: 0,\n  top: 0,\n};\n\ntype Props = {\n  options?: Options;\n  events?: EventModel[];\n};\n\nexport function ProviderWrapper({\n  children,\n  options: optionsUserInput = {},\n  events = [],\n}: RenderableProps<Props>) {\n  const theme = initThemeStore();\n  const store = initCalendarStore(optionsUserInput);\n  const eventBus = new EventBusImpl();\n  const { dispatch } = store.getState();\n\n  dispatch.options.setOptions(optionsUserInput);\n  dispatch.calendar.clearEvents();\n\n  if (events.length) {\n    dispatch.calendar.createEvents(events);\n  }\n\n  return (\n    <CalendarContainer theme={theme} store={store} eventBus={eventBus}>\n      <div style={rootContainerStyle}>{children}</div>\n    </CalendarContainer>\n  );\n}\n","import Chance from 'chance';\nimport moment from 'moment-timezone';\n\nimport { createDateMatrixOfMonth } from '@src/helpers/grid';\nimport EventModel from '@src/model/eventModel';\nimport type TZDate from '@src/time/date';\n\nimport { calendars } from '@stories/util/mockCalendars';\n\nimport type { EventCategory, EventObject } from '@t/events';\nimport type { CalendarInfo, ViewType } from '@t/options';\n\nconst chance = new Chance();\nconst EVENT_CATEGORY: EventCategory[] = ['milestone', 'task'];\n\n// eslint-disable-next-line complexity\nfunction createTime(event: EventObject, renderStart: TZDate, renderEnd: TZDate) {\n  const startDate = moment(renderStart.getTime());\n  let endDate = moment(renderEnd.getTime());\n  const diffDate = endDate.diff(startDate, 'days');\n\n  event.isAllday = chance.bool({ likelihood: 30 });\n  if (event.isAllday) {\n    event.category = 'allday';\n  } else if (chance.bool({ likelihood: 30 })) {\n    event.category = EVENT_CATEGORY[chance.integer({ min: 0, max: 1 })];\n    if (event.category === EVENT_CATEGORY[1]) {\n      event.dueDateClass = 'morning';\n    }\n  } else {\n    event.category = 'time';\n  }\n\n  startDate.add(chance.integer({ min: 0, max: diffDate }), 'days');\n  startDate.hours(chance.integer({ min: 0, max: 23 }));\n  startDate.minutes(chance.bool() ? 0 : 30);\n  event.start = startDate.toDate();\n\n  endDate = moment(startDate);\n  if (event.isAllday) {\n    endDate.add(chance.integer({ min: 0, max: 3 }), 'days');\n  }\n\n  event.end = endDate.add(chance.integer({ min: 1, max: 4 }), 'hour').toDate();\n\n  if (!event.isAllday && chance.bool({ likelihood: 20 })) {\n    event.goingDuration = chance.integer({ min: 30, max: 120 });\n    event.comingDuration = chance.integer({ min: 30, max: 120 });\n\n    if (chance.bool({ likelihood: 50 })) {\n      event.end = event.start;\n    }\n  }\n}\n\nfunction createNames() {\n  const names = [];\n  const length = chance.integer({ min: 1, max: 10 });\n\n  for (let i = 0; i < length; i += 1) {\n    names.push(chance.name());\n  }\n\n  return names;\n}\n\nfunction createRandomEvent(calendar: CalendarInfo, renderStart: TZDate, renderEnd: TZDate) {\n  const event: EventObject = {\n    raw: {\n      creator: {},\n    },\n  };\n\n  event.id = chance.guid();\n  event.calendarId = calendar.id;\n\n  event.title = chance.sentence({ words: 3 });\n  event.body = chance.bool({ likelihood: 20 }) ? chance.sentence({ words: 10 }) : '';\n  event.isReadOnly = chance.bool({ likelihood: 20 });\n  createTime(event, renderStart, renderEnd);\n\n  event.isPrivate = chance.bool({ likelihood: 10 });\n  event.location = chance.address();\n  event.attendees = chance.bool({ likelihood: 70 }) ? createNames() : [];\n  event.recurrenceRule = chance.bool({ likelihood: 20 }) ? 'repeated events' : '';\n\n  event.color = calendar.color;\n  event.backgroundColor = calendar.backgroundColor;\n  event.dragBackgroundColor = calendar.dragBackgroundColor;\n  event.borderColor = calendar.borderColor;\n\n  if (event.category === 'milestone') {\n    event.color = event.backgroundColor;\n    event.backgroundColor = 'transparent';\n    event.dragBackgroundColor = 'transparent';\n    event.borderColor = 'transparent';\n  }\n\n  event.raw.memo = chance.sentence();\n  event.raw.creator.name = chance.name();\n  event.raw.creator.avatar = chance.avatar();\n  event.raw.creator.company = chance.company();\n  event.raw.creator.email = chance.email();\n  event.raw.creator.phone = chance.phone();\n\n  if (chance.bool({ likelihood: 20 })) {\n    const travelTime = chance.minute();\n    event.goingDuration = travelTime;\n    event.comingDuration = travelTime;\n  }\n\n  return event;\n}\n\nconst defaultEventCount = { month: 3, week: 10, day: 4 };\n\nexport function createRandomEvents(\n  viewName: ViewType,\n  renderStart: TZDate,\n  renderEnd: TZDate,\n  eventCount?: number\n) {\n  const view = viewName ?? 'week';\n  const events: EventObject[] = [];\n  const count = eventCount ?? defaultEventCount[view];\n\n  calendars.forEach((calendar) => {\n    for (let i = 0; i < count; i += 1) {\n      const event = createRandomEvent(calendar, renderStart, renderEnd);\n      events.push(event);\n    }\n  });\n\n  return events;\n}\n\nexport function createRandomEventModelsForMonth(length = defaultEventCount.month) {\n  const calendar = createDateMatrixOfMonth(new Date(), {});\n  const data = createRandomEvents(\n    'month',\n    calendar[0][0],\n    calendar[calendar.length - 1][6],\n    length\n  );\n\n  return data.map((event: EventObject) => new EventModel(event));\n}\n","import { h } from 'preact';\n\nimport type { Story } from '@storybook/preact';\n\nimport { Week } from '@src/components/view/week';\nimport EventModel from '@src/model/eventModel';\nimport TZDate from '@src/time/date';\nimport { addDate, Day } from '@src/time/datetime';\n\nimport { ProviderWrapper } from '@stories/util/providerWrapper';\nimport { createRandomEventModelsForMonth, createRandomEvents } from '@stories/util/randomEvents';\n\nexport default { title: 'Views/WeekView', component: Week };\n\nfunction createTimeGridEvents() {\n  const today = new TZDate();\n  const start = addDate(new TZDate(), -today.getDay());\n  const end = addDate(start, 6);\n\n  return createRandomEvents('week', start, end).map((event) => new EventModel(event));\n}\n\nconst Template: Story = (args) => (\n  <ProviderWrapper options={args.options} events={args.events}>\n    <Week />\n  </ProviderWrapper>\n);\n\nexport const basic = Template.bind({});\n\nexport const MondayStart = Template.bind({});\nMondayStart.args = {\n  options: {\n    week: {\n      startDayOfWeek: Day.MON,\n    },\n  },\n};\n\nexport const WorkWeek = Template.bind({});\nWorkWeek.args = {\n  options: {\n    week: {\n      workweek: true,\n    },\n  },\n};\n\nexport const RandomEvents = Template.bind({});\nRandomEvents.args = {\n  events: [...createRandomEventModelsForMonth(40), ...createTimeGridEvents()],\n};\n","import '@storybook/preact';","import LocalDate from './localDate';\nimport UTCDate from './utcDate';\nimport MomentDate from './momentDate';\n\nexport default { LocalDate, UTCDate, MomentDate };\nexport { LocalDate, UTCDate, MomentDate };\n","import isString from 'tui-code-snippet/type/isString';\n/**\n * datetime regex from https://www.regexpal.com/94925\n * timezone regex from moment\n */\nconst rISO8601 =\n  /^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.)?([0-9]+)?([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?$/;\n\nfunction throwNotSupported() {\n  throw new Error('This operation is not supported.');\n}\n\nfunction getDateTime(dateString) {\n  const match = rISO8601.exec(dateString);\n  if (match) {\n    const [, y, M, d, h, m, s, , ms, zoneInfo] = match;\n\n    return {\n      y: Number(y),\n      M: Number(M) - 1,\n      d: Number(d),\n      h: Number(h),\n      m: Number(m),\n      s: Number(s),\n      ms: Number(ms) || 0,\n      zoneInfo,\n    };\n  }\n\n  return null;\n}\n\nfunction createFromDateString(dateString) {\n  const info = getDateTime(dateString);\n  if (info && !info.zoneInfo) {\n    const { y, M, d, h, m, s, ms } = info;\n\n    return new Date(y, M, d, h, m, s, ms);\n  }\n\n  return null;\n}\n\nexport default class LocalDate {\n  constructor(...args) {\n    const [firstArg] = args;\n\n    if (firstArg instanceof Date) {\n      this.d = new Date(firstArg.getTime());\n    } else if (isString(firstArg) && args.length === 1) {\n      this.d = createFromDateString(firstArg);\n    }\n\n    if (!this.d) {\n      this.d = new Date(...args);\n    }\n  }\n\n  setTimezoneOffset() {\n    throwNotSupported();\n  }\n\n  setTimezoneName() {\n    throwNotSupported();\n  }\n\n  clone() {\n    return new LocalDate(this.d);\n  }\n\n  toDate() {\n    return new Date(this.d.getTime());\n  }\n\n  toString() {\n    return this.d.toString();\n  }\n}\n\nconst getterMethods = [\n  'getTime',\n  'getTimezoneOffset',\n  'getFullYear',\n  'getMonth',\n  'getDate',\n  'getHours',\n  'getMinutes',\n  'getSeconds',\n  'getMilliseconds',\n  'getDay',\n];\n\nconst setterMethods = [\n  'setTime',\n  'setFullYear',\n  'setMonth',\n  'setDate',\n  'setHours',\n  'setMinutes',\n  'setSeconds',\n  'setMilliseconds',\n];\n\ngetterMethods.forEach((methodName) => {\n  LocalDate.prototype[methodName] = function (...args) {\n    return this.d[methodName](...args);\n  };\n});\n\nsetterMethods.forEach((methodName) => {\n  LocalDate.prototype[methodName] = function (...args) {\n    return this.d[methodName](...args);\n  };\n});\n","let moment;\n\nexport default class MomentDate {\n  static setMoment(m) {\n    moment = m;\n\n    return MomentDate;\n  }\n\n  constructor(...args) {\n    if (!moment) {\n      throw new Error(\n        'MomentDate requires Moment constructor. Use \"MomentDate.setMoment(moment);\".'\n      );\n    }\n\n    this.m = moment(...args);\n  }\n\n  setTimezoneOffset(offset) {\n    this.m.utcOffset(-offset);\n\n    return this;\n  }\n\n  setTimezoneName(zoneName) {\n    if (this.m.tz) {\n      this.m.tz(zoneName);\n    } else {\n      throw new Error(\n        'It requires moment-timezone. Use \"MomentDate.setMoment()\" with moment-timezone'\n      );\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new MomentDate(this.m);\n  }\n\n  toDate() {\n    return this.m.toDate();\n  }\n\n  toString() {\n    return this.m.format();\n  }\n\n  getTime() {\n    return this.m.valueOf();\n  }\n\n  getTimezoneOffset() {\n    const offset = -this.m.utcOffset();\n\n    return Math.abs(offset) ? offset : 0;\n  }\n\n  getFullYear() {\n    return this.m.year();\n  }\n\n  getMonth() {\n    return this.m.month();\n  }\n\n  getDate() {\n    return this.m.date();\n  }\n\n  getHours() {\n    return this.m.hours();\n  }\n\n  getMinutes() {\n    return this.m.minutes();\n  }\n\n  getSeconds() {\n    return this.m.seconds();\n  }\n\n  getMilliseconds() {\n    return this.m.milliseconds();\n  }\n\n  getDay() {\n    return this.m.day();\n  }\n\n  setTime(t) {\n    this.m = moment(t);\n\n    return this.getTime();\n  }\n\n  setFullYear(y, m = this.getMonth(), d = this.getDate()) {\n    this.m.year(y).month(m).date(d);\n\n    return this.getTime();\n  }\n\n  setMonth(m, d = this.m.date()) {\n    this.m.month(m).date(d);\n\n    return this.getTime();\n  }\n\n  setDate(d) {\n    this.m.date(d);\n\n    return this.getTime();\n  }\n\n  setHours(h, m = this.getMinutes(), s = this.getSeconds(), ms = this.getMilliseconds()) {\n    this.m.hours(h).minutes(m).seconds(s).milliseconds(ms);\n\n    return this.getTime();\n  }\n\n  setMinutes(m, s = this.getSeconds(), ms = this.getMilliseconds()) {\n    this.m.minutes(m).seconds(s).milliseconds(ms);\n\n    return this.getTime();\n  }\n\n  setSeconds(s, ms = this.getMilliseconds()) {\n    this.m.seconds(s).milliseconds(ms);\n\n    return this.getTime();\n  }\n\n  setMilliseconds(ms) {\n    this.m.milliseconds(ms);\n\n    return this.getTime();\n  }\n}\n","import LocalDate from './localDate';\n\nexport default class UTCDate extends LocalDate {\n  clone() {\n    return new UTCDate(this.d);\n  }\n\n  getTimezoneOffset() {\n    return 0;\n  }\n}\n\nconst getterProperties = [\n  'FullYear',\n  'Month',\n  'Date',\n  'Hours',\n  'Minutes',\n  'Seconds',\n  'Milliseconds',\n  'Day',\n];\n\nconst setterProperties = [\n  'FullYear',\n  'Month',\n  'Date',\n  'Hours',\n  'Minutes',\n  'Seconds',\n  'Milliseconds',\n];\n\ngetterProperties.forEach((prop) => {\n  const methodName = `get${prop}`;\n\n  UTCDate.prototype[methodName] = function (...args) {\n    return this.d[`getUTC${prop}`](...args);\n  };\n});\n\nsetterProperties.forEach((prop) => {\n  const methodName = `set${prop}`;\n\n  UTCDate.prototype[methodName] = function (...args) {\n    return this.d[`setUTC${prop}`](...args);\n  };\n});\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-holiday {\\n  color: red;\\n  font-size: 15px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/common.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,UAAU;EACV,eAAe;AACjB\",\"sourcesContent\":[\".holiday {\\n  color: red;\\n  font-size: 15px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-layout.toastui-calendar-month {\\n  height: 100%;\\n}\\n\\n.toastui-calendar-month .toastui-calendar-day-names {\\n  /* from constant MONTH_DAY_NAME_HEIGHT */\\n  height: 31px;\\n}\\n\\n.toastui-calendar-month .toastui-calendar-month-daygrid {\\n  position: relative;\\n  /* modify this if you want to change height of day names */\\n  height: calc(100% - 31px);\\n}\\n\\n.toastui-calendar-month-week-item {\\n  position: relative;\\n}\\n\\n.toastui-calendar-weekday-grid {\\n  position: absolute;\\n  min-height: inherit;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.toastui-calendar-daygrid-cell {\\n  position: absolute;\\n  height: 100%;\\n  min-height: inherit;\\n  padding: 3px 0;\\n}\\n\\n.toastui-calendar-daygrid-cell + .toastui-calendar-daygrid-cell {\\n  border-left: 1px solid #e5e5e5;\\n}\\n\\n.toastui-calendar-grid-cell-date {\\n  display: inline-block;\\n  width: 27px;\\n  height: 27px;\\n  line-height: 1.7;\\n  text-align: center;\\n}\\n\\n.toastui-calendar-grid-cell-footer {\\n  position: absolute;\\n  width: 100%;\\n  bottom: 0;\\n}\\n\\n.toastui-calendar-grid-cell-more-events {\\n  float: right;\\n  height: 27px;\\n  line-height: 27px;\\n  padding: 0 5px;\\n  text-align: center;\\n  font-size: 11px;\\n  font-weight: bold;\\n  color: #aaa;\\n  border: none;\\n  background-color: transparent;\\n  cursor: pointer;\\n}\\n\\n.toastui-calendar-weekday-events {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  font-size: 12px;\\n}\\n\\n/* TODO: define this class in more common place */\\n.toastui-calendar-weekday-event {\\n  cursor: pointer;\\n}\\n\\n.toastui-calendar-weekday {\\n  height: 100%;\\n}\\n\\n.toastui-calendar-weekday .toastui-calendar-grid-selection {\\n  position: absolute;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/daygrid/dayGrid.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;AACd;;AAEA;EACE,wCAAwC;EACxC,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,0DAA0D;EAC1D,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,SAAS;AACX;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,iBAAiB;EACjB,cAAc;EACd,kBAAkB;EAClB,eAAe;EACf,iBAAiB;EACjB,WAAW;EACX,YAAY;EACZ,6BAA6B;EAC7B,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,WAAW;EACX,eAAe;AACjB;;AAEA,iDAAiD;AACjD;EACE,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB\",\"sourcesContent\":[\".layout.month {\\n  height: 100%;\\n}\\n\\n.month .day-names {\\n  /* from constant MONTH_DAY_NAME_HEIGHT */\\n  height: 31px;\\n}\\n\\n.month .month-daygrid {\\n  position: relative;\\n  /* modify this if you want to change height of day names */\\n  height: calc(100% - 31px);\\n}\\n\\n.month-week-item {\\n  position: relative;\\n}\\n\\n.weekday-grid {\\n  position: absolute;\\n  min-height: inherit;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.daygrid-cell {\\n  position: absolute;\\n  height: 100%;\\n  min-height: inherit;\\n  padding: 3px 0;\\n}\\n\\n.daygrid-cell + .daygrid-cell {\\n  border-left: 1px solid #e5e5e5;\\n}\\n\\n.grid-cell-date {\\n  display: inline-block;\\n  width: 27px;\\n  height: 27px;\\n  line-height: 1.7;\\n  text-align: center;\\n}\\n\\n.grid-cell-footer {\\n  position: absolute;\\n  width: 100%;\\n  bottom: 0;\\n}\\n\\n.grid-cell-more-events {\\n  float: right;\\n  height: 27px;\\n  line-height: 27px;\\n  padding: 0 5px;\\n  text-align: center;\\n  font-size: 11px;\\n  font-weight: bold;\\n  color: #aaa;\\n  border: none;\\n  background-color: transparent;\\n  cursor: pointer;\\n}\\n\\n.weekday-events {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  font-size: 12px;\\n}\\n\\n/* TODO: define this class in more common place */\\n.weekday-event {\\n  cursor: pointer;\\n}\\n\\n.weekday {\\n  height: 100%;\\n}\\n\\n.weekday .grid-selection {\\n  position: absolute;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-day-names {\\n  position: relative;\\n}\\n\\n.toastui-calendar-day-name-container {\\n  position: relative;\\n}\\n\\n.toastui-calendar-day-name-item {\\n  position: absolute;\\n  font-size: 12px;\\n  font-weight: normal;\\n  text-align: left;\\n  padding: 0 10px;\\n}\\n\\n.toastui-calendar-day-name-item.toastui-calendar-week {\\n  line-height: 38px;\\n  height: 42px;\\n}\\n\\n.toastui-calendar-day-name-item.toastui-calendar-month {\\n  line-height: 31px;\\n  height: 31px;\\n}\\n\\n.toastui-calendar-day-view-day-names,\\n.toastui-calendar-week-view-day-names {\\n  border-bottom: 1px solid #e5e5e5;\\n}\\n\\n.toastui-calendar-day-names.toastui-calendar-week {\\n  height: 42px;\\n  padding-left: 0;\\n  text-align: left;\\n}\\n\\n.toastui-calendar-day-names.toastui-calendar-month {\\n  height: 31px;\\n  padding: 0 10px;\\n  font-size: 12px;\\n  font-weight: normal;\\n  text-align: left;\\n}\\n\\n.toastui-calendar-day-name__date {\\n  font-size: 26px;\\n}\\n\\n.toastui-calendar-day-name__name {\\n  font-size: 12px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/daygrid/dayNames.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,YAAY;AACd;;AAEA;;EAEE,gCAAgC;AAClC;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,eAAe;EACf,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB\",\"sourcesContent\":[\".day-names {\\n  position: relative;\\n}\\n\\n.day-name-container {\\n  position: relative;\\n}\\n\\n.day-name-item {\\n  position: absolute;\\n  font-size: 12px;\\n  font-weight: normal;\\n  text-align: left;\\n  padding: 0 10px;\\n}\\n\\n.day-name-item.week {\\n  line-height: 38px;\\n  height: 42px;\\n}\\n\\n.day-name-item.month {\\n  line-height: 31px;\\n  height: 31px;\\n}\\n\\n.day-view-day-names,\\n.week-view-day-names {\\n  border-bottom: 1px solid #e5e5e5;\\n}\\n\\n.day-names.week {\\n  height: 42px;\\n  padding-left: 0;\\n  text-align: left;\\n}\\n\\n.day-names.month {\\n  height: 31px;\\n  padding: 0 10px;\\n  font-size: 12px;\\n  font-weight: normal;\\n  text-align: left;\\n}\\n\\n.day-name__date {\\n  font-size: 26px;\\n}\\n\\n.day-name__name {\\n  font-size: 12px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./dayNames.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./dayGrid.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-event-background { position: absolute; }\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/events/background.css\"],\"names\":[],\"mappings\":\"AAAA,qCAAoB,kBAAkB,EAAE\",\"sourcesContent\":[\".event-background { position: absolute; }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-weekday-event-title {\\n  display: block;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  padding-left: 3px;\\n  font-weight: bold;\\n  font-size: 12px;\\n}\\n\\n.toastui-calendar-weekday-event-dot {\\n  position: relative;\\n  top: 8px;\\n  float: left;\\n  display: inline-block;\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n}\\n\\n.toastui-calendar-weekday-event-dot + .toastui-calendar-weekday-event-title {\\n  color: #333;\\n}\\n\\n.toastui-calendar-weekday-resize-handle {\\n  position: absolute;\\n  top: 0;\\n  right: 5px;\\n}\\n\\n.toastui-calendar-weekday-resize-handle.toastui-calendar-handle-y {\\n  cursor: col-resize;\\n}\\n\\n.toastui-calendar-grid-cell-date .toastui-calendar-weekday-grid-date.toastui-calendar-weekday-grid-date-decorator {\\n  display: inline-block;\\n  width: 26px;\\n  height: 26px;\\n  line-height: 26px;\\n  text-align: center;\\n  background-color: #135de6;\\n  border-radius: 50%;\\n  font-weight: bold;\\n  margin-left: 2px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/events/grid.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,cAAc;EACd,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;EACvB,iBAAiB;EACjB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,qBAAqB;EACrB,UAAU;EACV,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB;EACzB,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;AAClB\",\"sourcesContent\":[\".weekday-event-title {\\n  display: block;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  padding-left: 3px;\\n  font-weight: bold;\\n  font-size: 12px;\\n}\\n\\n.weekday-event-dot {\\n  position: relative;\\n  top: 8px;\\n  float: left;\\n  display: inline-block;\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n}\\n\\n.weekday-event-dot + .weekday-event-title {\\n  color: #333;\\n}\\n\\n.weekday-resize-handle {\\n  position: absolute;\\n  top: 0;\\n  right: 5px;\\n}\\n\\n.weekday-resize-handle.handle-y {\\n  cursor: col-resize;\\n}\\n\\n.grid-cell-date .weekday-grid-date.weekday-grid-date-decorator {\\n  display: inline-block;\\n  width: 26px;\\n  height: 26px;\\n  line-height: 26px;\\n  text-align: center;\\n  background-color: #135de6;\\n  border-radius: 50%;\\n  font-weight: bold;\\n  margin-left: 2px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./background.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./time.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./grid.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../image/handler-x.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-event-time {\\n  position: absolute;\\n  overflow: hidden;\\n  cursor: pointer;\\n}\\n\\n.toastui-calendar-event-time .toastui-calendar-travel-time,\\n.toastui-calendar-event-time .toastui-calendar-event-time-content {\\n  overflow: hidden;\\n  padding: 1px 0 0 3px;\\n  font-size: 12px;\\n}\\n\\n.toastui-calendar-resize-handler-x {\\n  position: absolute;\\n  right: 0;\\n  bottom: 1px;\\n  left: 0;\\n  height: 8px;\\n  text-align: center;\\n  color: #fff;\\n  cursor: row-resize;\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") no-repeat center bottom;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/events/time.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;;EAEE,gBAAgB;EAChB,oBAAoB;EACpB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,OAAO;EACP,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,kBAAkB;EAClB,2EAAiE;AACnE\",\"sourcesContent\":[\".event-time {\\n  position: absolute;\\n  overflow: hidden;\\n  cursor: pointer;\\n}\\n\\n.event-time .travel-time,\\n.event-time .event-time-content {\\n  overflow: hidden;\\n  padding: 1px 0 0 3px;\\n  font-size: 12px;\\n}\\n\\n.resize-handler-x {\\n  position: absolute;\\n  right: 0;\\n  bottom: 1px;\\n  left: 0;\\n  height: 8px;\\n  text-align: center;\\n  color: #fff;\\n  cursor: row-resize;\\n  background: url('../image/handler-x.png') no-repeat center bottom;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./image/ic-subject.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"./image/ic-location.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"./image/ic-date.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"./image/ic-state.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(\"./image/ic-lock.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_5___ = new URL(\"./image/ic-unlock.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_6___ = new URL(\"./image/ic-close.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_7___ = new URL(\"./image/ic-user-b.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_8___ = new URL(\"./image/ic-edit.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_9___ = new URL(\"./image/ic-delete.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_10___ = new URL(\"./image/ic-arrow-solid-top.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_11___ = new URL(\"./image/ic-milestone.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_12___ = new URL(\"./image/ic-arrow-left.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_13___ = new URL(\"./image/ic-arrow-right.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_14___ = new URL(\"./image/handler-y.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_15___ = new URL(\"./image/ic-checkbox-normal.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_16___ = new URL(\"./image/ic-checkbox-checked.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_17___ = new URL(\"./image/ic-arrow-solid-bottom.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_18___ = new URL(\"./image/ic-location-b.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_19___ = new URL(\"./image/ic-state-b.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_20___ = new URL(\"./image/ic-repeat-b.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_7___);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_8___);\nvar ___CSS_LOADER_URL_REPLACEMENT_9___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_9___);\nvar ___CSS_LOADER_URL_REPLACEMENT_10___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_10___);\nvar ___CSS_LOADER_URL_REPLACEMENT_11___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_11___);\nvar ___CSS_LOADER_URL_REPLACEMENT_12___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_12___);\nvar ___CSS_LOADER_URL_REPLACEMENT_13___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_13___);\nvar ___CSS_LOADER_URL_REPLACEMENT_14___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_14___);\nvar ___CSS_LOADER_URL_REPLACEMENT_15___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_15___);\nvar ___CSS_LOADER_URL_REPLACEMENT_16___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_16___);\nvar ___CSS_LOADER_URL_REPLACEMENT_17___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_17___);\nvar ___CSS_LOADER_URL_REPLACEMENT_18___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_18___);\nvar ___CSS_LOADER_URL_REPLACEMENT_19___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_19___);\nvar ___CSS_LOADER_URL_REPLACEMENT_20___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_20___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-icon {\\n  width: 14px;\\n  height: 14px;\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n.toastui-calendar-icon.toastui-calendar-ic-title {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-location {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-date {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-state {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-private {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-public {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_5___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-close {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_6___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-user-b {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_7___ + \") no-repeat;\\n  top: -4px;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-edit {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_8___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-delete {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_9___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-arrow-solid-top {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_10___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-milestone {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_11___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-arrow-left {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_12___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-arrow-right {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_13___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-handle-y {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_14___ + \") center no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-checkbox-normal {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_15___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-checkbox-checked {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_16___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-ic-dropdown-arrow {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_17___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-icon.toastui-calendar-open.toastui-calendar-ic-dropdown-arrow {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_10___ + \") no-repeat;\\n}\\n\\n.toastui-calendar-ic-location-b {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_18___ + \") no-repeat;\\n  top: -4px;\\n}\\n\\n.toastui-calendar-ic-state-b {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_19___ + \") no-repeat;\\n  top: -4px;\\n}\\n\\n.toastui-calendar-ic-repeat-b {\\n  background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_20___ + \") no-repeat;\\n  top: -4px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/icons.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,sBAAsB;AACxB;AACA;EACE,6DAAmD;AACrD;;AAEA;EACE,6DAAoD;AACtD;;AAEA;EACE,6DAAgD;AAClD;;AAEA;EACE,6DAAiD;AACnD;;AAEA;EACE,6DAAgD;AAClD;;AAEA;EACE,6DAAkD;AACpD;;AAEA;EACE,6DAAiD;AACnD;;AAEA;EACE,6DAAkD;EAClD,SAAS;AACX;;AAEA;EACE,6DAAgD;AAClD;;AAEA;EACE,6DAAkD;AACpD;;AAEA;EACE,8DAA2D;AAC7D;;AAEA;EACE,8DAAqD;AACvD;;AAEA;EACE,8DAAsD;AACxD;;AAEA;EACE,8DAAuD;AACzD;;AAEA;EACE,qEAAyD;AAC3D;;AAEA;EACE,8DAA2D;AAC7D;;AAEA;EACE,8DAA4D;AAC9D;;AAEA;EACE,8DAA8D;AAChE;;AAEA;EACE,8DAA2D;AAC7D;;AAEA;EACE,8DAAsD;EACtD,SAAS;AACX;;AAEA;EACE,8DAAmD;EACnD,SAAS;AACX;;AAEA;EACE,8DAAoD;EACpD,SAAS;AACX\",\"sourcesContent\":[\".icon {\\n  width: 14px;\\n  height: 14px;\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n.icon.ic-title {\\n  background: url('./image/ic-subject.png') no-repeat;\\n}\\n\\n.icon.ic-location {\\n  background: url('./image/ic-location.png') no-repeat;\\n}\\n\\n.icon.ic-date {\\n  background: url('./image/ic-date.png') no-repeat;\\n}\\n\\n.icon.ic-state {\\n  background: url('./image/ic-state.png') no-repeat;\\n}\\n\\n.icon.ic-private {\\n  background: url('./image/ic-lock.png') no-repeat;\\n}\\n\\n.icon.ic-public {\\n  background: url('./image/ic-unlock.png') no-repeat;\\n}\\n\\n.icon.ic-close {\\n  background: url('./image/ic-close.png') no-repeat;\\n}\\n\\n.icon.ic-user-b {\\n  background: url('./image/ic-user-b.png') no-repeat;\\n  top: -4px;\\n}\\n\\n.icon.ic-edit {\\n  background: url('./image/ic-edit.png') no-repeat;\\n}\\n\\n.icon.ic-delete {\\n  background: url('./image/ic-delete.png') no-repeat;\\n}\\n\\n.icon.ic-arrow-solid-top {\\n  background: url('./image/ic-arrow-solid-top.png') no-repeat;\\n}\\n\\n.icon.ic-milestone {\\n  background: url('./image/ic-milestone.png') no-repeat;\\n}\\n\\n.icon.ic-arrow-left {\\n  background: url('./image/ic-arrow-left.png') no-repeat;\\n}\\n\\n.icon.ic-arrow-right {\\n  background: url('./image/ic-arrow-right.png') no-repeat;\\n}\\n\\n.icon.ic-handle-y {\\n  background: url('./image/handler-y.png') center no-repeat;\\n}\\n\\n.icon.ic-checkbox-normal {\\n  background: url('./image/ic-checkbox-normal.png') no-repeat;\\n}\\n\\n.icon.ic-checkbox-checked {\\n  background: url('./image/ic-checkbox-checked.png') no-repeat;\\n}\\n\\n.icon.ic-dropdown-arrow {\\n  background: url('./image/ic-arrow-solid-bottom.png') no-repeat;\\n}\\n\\n.icon.open.ic-dropdown-arrow {\\n  background: url('./image/ic-arrow-solid-top.png') no-repeat;\\n}\\n\\n.ic-location-b {\\n  background: url('./image/ic-location-b.png') no-repeat;\\n  top: -4px;\\n}\\n\\n.ic-state-b {\\n  background: url('./image/ic-state-b.png') no-repeat;\\n  top: -4px;\\n}\\n\\n.ic-repeat-b {\\n  background: url('./image/ic-repeat-b.png') no-repeat;\\n  top: -4px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./common.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./layout.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./icons.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_3___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./timegrid/index.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_4___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./events/index.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_5___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./panel/index.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_6___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./popup/index.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_7___ from \"-!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./daygrid/index.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_3___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_4___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_5___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_6___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_7___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-layout {\\n  box-sizing: border-box;\\n  position: relative;\\n  white-space: nowrap;\\n}\\n\\n.toastui-calendar-layout * {\\n  box-sizing: border-box;\\n}\\n\\n.toastui-calendar-layout.toastui-calendar-dragging--move-event * {\\n  cursor: move;\\n}\\n\\n.toastui-calendar-layout.toastui-calendar-dragging--resize-horizontal-event * {\\n  cursor: col-resize;\\n}\\n\\n.toastui-calendar-layout.toastui-calendar-dragging--resize-vertical-event * {\\n  cursor: row-resize;\\n}\\n\\n.toastui-calendar-layout .toastui-calendar-panel-resizer {\\n  user-select: none;\\n}\\n\\n.toastui-calendar-layout .toastui-calendar-panel-resizer:hover {\\n  border-color: #999;\\n}\\n\\n.toastui-calendar-layout .toastui-calendar-panel-resizer-guide {\\n  position: absolute;\\n}\\n\\n.toastui-calendar-layout.toastui-calendar-horizontal .toastui-calendar-panel,\\n.toastui-calendar-layout.toastui-calendar-horizontal .toastui-calendar-panel-resizer {\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/layout.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,qBAAqB;EACrB,sBAAsB;AACxB\",\"sourcesContent\":[\".layout {\\n  box-sizing: border-box;\\n  position: relative;\\n  white-space: nowrap;\\n}\\n\\n.layout * {\\n  box-sizing: border-box;\\n}\\n\\n.layout.dragging--move-event * {\\n  cursor: move;\\n}\\n\\n.layout.dragging--resize-horizontal-event * {\\n  cursor: col-resize;\\n}\\n\\n.layout.dragging--resize-vertical-event * {\\n  cursor: row-resize;\\n}\\n\\n.layout .panel-resizer {\\n  user-select: none;\\n}\\n\\n.layout .panel-resizer:hover {\\n  border-color: #999;\\n}\\n\\n.layout .panel-resizer-guide {\\n  position: absolute;\\n}\\n\\n.layout.horizontal .panel,\\n.layout.horizontal .panel-resizer {\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-panel-title {\\n  display: table;\\n  float: left;\\n  height: 100%;\\n  padding-right: 5px;\\n}\\n\\n.toastui-calendar-panel-title .toastui-calendar-left-content {\\n  display: table-cell;\\n  vertical-align: middle;\\n  text-align: right;\\n  font-size: 11px;\\n}\\n\\n.toastui-calendar-panel-grid-wrapper {\\n  position: relative;\\n  overflow-y: hidden;\\n}\\n\\n.toastui-calendar-panel .toastui-calendar-panel-title,\\n.toastui-calendar-panel .toastui-calendar-panel-grid-wrapper {\\n  height: 100%;\\n}\\n\\n.toastui-calendar-allday-panel {\\n  position: relative;\\n  height: 100%;\\n  overflow-y: hidden;\\n}\\n\\n.toastui-calendar-allday-panel .toastui-calendar-grid-selection {\\n  position: absolute;\\n  right: 10px;\\n  z-index: 1;\\n  top: 0;\\n}\\n\\n.toastui-calendar-panel-grid {\\n  height: 100%;\\n  position: absolute;\\n}\\n\\n.toastui-calendar-panel-event-wrapper {\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  overflow-y: scroll;\\n}\\n\\n.toastui-calendar-panel-event-wrapper .toastui-calendar-weekday-event-block {\\n  position: absolute;\\n}\\n\\n.toastui-calendar-panel-event-wrapper .toastui-calendar-weekday-event {\\n  position: relative;\\n  margin: 0 10px 0 1px;\\n  cursor: pointer;\\n  border-left-style: solid;\\n  border-left-width: 3px;\\n\\n  height: 18px;\\n  border-radius: 0;\\n  color: #9a1313;\\n  background-color: rgba(218, 27, 27, 0.2);\\n  border-color: #da1b1b;\\n}\\n\\n.toastui-calendar-panel-event-wrapper .toastui-calendar-weekday-exceed-right .toastui-calendar-weekday-event {\\n  margin-right: 0;\\n}\\n\\n.toastui-calendar-panel-event {\\n  position: absolute;\\n  border: 1px solid #333;\\n}\\n\\n.toastui-calendar-weekday-exceed-in-week {\\n  position: absolute;\\n  right: 5px;\\n  bottom: 5px;\\n  z-index: 1;\\n  margin-right: 5px;\\n  font-size: 12px;\\n  line-height: 14px;\\n  cursor: pointer;\\n  padding: 1px 5px;\\n  background-color: #fff;\\n  border: 1px solid #ddd;\\n  color: #000;\\n}\\n\\n.toastui-calendar-collapse-btn-icon {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: -1px -14px 0 -4px;\\n  width: 0;\\n  height: 0;\\n  border-left: 4px solid transparent;\\n  border-right: 4px solid transparent;\\n  border-bottom: 5px solid #4f5959;\\n}\\n\\n.toastui-calendar-day-view .toastui-calendar-panel:not(.toastui-calendar-time),\\n.toastui-calendar-week-view .toastui-calendar-panel:not(.toastui-calendar-time) {\\n  overflow-y: scroll;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/panel/allday.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,sBAAsB;EACtB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,UAAU;EACV,MAAM;AACR;;AAEA;EACE,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;EACpB,eAAe;EACf,wBAAwB;EACxB,sBAAsB;;EAEtB,YAAY;EACZ,gBAAgB;EAChB,cAAc;EACd,wCAAwC;EACxC,qBAAqB;AACvB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,UAAU;EACV,iBAAiB;EACjB,eAAe;EACf,iBAAiB;EACjB,eAAe;EACf,gBAAgB;EAChB,sBAAsB;EACtB,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,sBAAsB;EACtB,yBAAyB;EACzB,QAAQ;EACR,SAAS;EACT,kCAAkC;EAClC,mCAAmC;EACnC,gCAAgC;AAClC;;AAEA;;EAEE,kBAAkB;AACpB\",\"sourcesContent\":[\".panel-title {\\n  display: table;\\n  float: left;\\n  height: 100%;\\n  padding-right: 5px;\\n}\\n\\n.panel-title .left-content {\\n  display: table-cell;\\n  vertical-align: middle;\\n  text-align: right;\\n  font-size: 11px;\\n}\\n\\n.panel-grid-wrapper {\\n  position: relative;\\n  overflow-y: hidden;\\n}\\n\\n.panel .panel-title,\\n.panel .panel-grid-wrapper {\\n  height: 100%;\\n}\\n\\n.allday-panel {\\n  position: relative;\\n  height: 100%;\\n  overflow-y: hidden;\\n}\\n\\n.allday-panel .grid-selection {\\n  position: absolute;\\n  right: 10px;\\n  z-index: 1;\\n  top: 0;\\n}\\n\\n.panel-grid {\\n  height: 100%;\\n  position: absolute;\\n}\\n\\n.panel-event-wrapper {\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  overflow-y: scroll;\\n}\\n\\n.panel-event-wrapper .weekday-event-block {\\n  position: absolute;\\n}\\n\\n.panel-event-wrapper .weekday-event {\\n  position: relative;\\n  margin: 0 10px 0 1px;\\n  cursor: pointer;\\n  border-left-style: solid;\\n  border-left-width: 3px;\\n\\n  height: 18px;\\n  border-radius: 0;\\n  color: #9a1313;\\n  background-color: rgba(218, 27, 27, 0.2);\\n  border-color: #da1b1b;\\n}\\n\\n.panel-event-wrapper .weekday-exceed-right .weekday-event {\\n  margin-right: 0;\\n}\\n\\n.panel-event {\\n  position: absolute;\\n  border: 1px solid #333;\\n}\\n\\n.weekday-exceed-in-week {\\n  position: absolute;\\n  right: 5px;\\n  bottom: 5px;\\n  z-index: 1;\\n  margin-right: 5px;\\n  font-size: 12px;\\n  line-height: 14px;\\n  cursor: pointer;\\n  padding: 1px 5px;\\n  background-color: #fff;\\n  border: 1px solid #ddd;\\n  color: #000;\\n}\\n\\n.collapse-btn-icon {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: -1px -14px 0 -4px;\\n  width: 0;\\n  height: 0;\\n  border-left: 4px solid transparent;\\n  border-right: 4px solid transparent;\\n  border-bottom: 5px solid #4f5959;\\n}\\n\\n.day-view .panel:not(.time),\\n.week-view .panel:not(.time) {\\n  overflow-y: scroll;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./allday.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-floating-layer {\\n  z-index: 1;\\n}\\n\\n.toastui-calendar-floating-layer * {\\n  box-sizing: border-box;\\n}\\n\\n.toastui-calendar-popup-overlay {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.toastui-calendar-popup-container {\\n  position: absolute;\\n  font-weight: 2.5;\\n  box-shadow: 0 2px 6px 0 rgb(0 0 0 / 10%);\\n  clear: both;\\n  z-index: 2;\\n}\\n\\n.toastui-calendar-popup-section {\\n  font-size: 0;\\n  min-height: 40px;\\n}\\n\\n.toastui-calendar-popup-button.toastui-calendar-popup-close {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  background-color: #fff;\\n  padding: 0;\\n  border: none;\\n}\\n\\n.toastui-calendar-popup-button.toastui-calendar-popup-confirm {\\n  float: right;\\n  width: 96px;\\n  height: 36px;\\n  border-radius: 40px;\\n  background-color: #ff6618;\\n  font-size: 12px;\\n  font-weight: bold;\\n  color: #fff;\\n  border: none;\\n}\\n\\n.toastui-calendar-dropdown-menu {\\n  position: absolute;\\n  width: 100%;\\n  top: 31px;\\n  z-index: 1;\\n  padding: 4px 0;\\n  background-color: #fff;\\n  border: 1px solid #d5d5d5;\\n  border-top: none;\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n.toastui-calendar-dropdown-menu.toastui-calendar-open {\\n  display: block;\\n}\\n\\n.toastui-calendar-dropdown-menu-item {\\n  width: 100%;\\n  height: 30px;\\n  border: none;\\n  padding: 0 9px 0 12px;\\n  font-size: 0;\\n  border-radius: 2px;\\n  cursor: pointer;\\n}\\n\\n.toastui-calendar-popup-arrow-border,\\n.toastui-calendar-popup-arrow-fill {\\n  position: absolute;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/popup/common.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,UAAU;AACZ;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,OAAO;AACT;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,wCAAwC;EACxC,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,sBAAsB;EACtB,UAAU;EACV,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,yBAAyB;EACzB,eAAe;EACf,iBAAiB;EACjB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,UAAU;EACV,cAAc;EACd,sBAAsB;EACtB,yBAAyB;EACzB,gBAAgB;EAChB,0BAA0B;AAC5B;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,qBAAqB;EACrB,YAAY;EACZ,kBAAkB;EAClB,eAAe;AACjB;;AAEA;;EAEE,kBAAkB;AACpB\",\"sourcesContent\":[\".floating-layer {\\n  z-index: 1;\\n}\\n\\n.floating-layer * {\\n  box-sizing: border-box;\\n}\\n\\n.popup-overlay {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.popup-container {\\n  position: absolute;\\n  font-weight: 2.5;\\n  box-shadow: 0 2px 6px 0 rgb(0 0 0 / 10%);\\n  clear: both;\\n  z-index: 2;\\n}\\n\\n.popup-section {\\n  font-size: 0;\\n  min-height: 40px;\\n}\\n\\n.popup-button.popup-close {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  background-color: #fff;\\n  padding: 0;\\n  border: none;\\n}\\n\\n.popup-button.popup-confirm {\\n  float: right;\\n  width: 96px;\\n  height: 36px;\\n  border-radius: 40px;\\n  background-color: #ff6618;\\n  font-size: 12px;\\n  font-weight: bold;\\n  color: #fff;\\n  border: none;\\n}\\n\\n.dropdown-menu {\\n  position: absolute;\\n  width: 100%;\\n  top: 31px;\\n  z-index: 1;\\n  padding: 4px 0;\\n  background-color: #fff;\\n  border: 1px solid #d5d5d5;\\n  border-top: none;\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n.dropdown-menu.open {\\n  display: block;\\n}\\n\\n.dropdown-menu-item {\\n  width: 100%;\\n  height: 30px;\\n  border: none;\\n  padding: 0 9px 0 12px;\\n  font-size: 0;\\n  border-radius: 2px;\\n  cursor: pointer;\\n}\\n\\n.popup-arrow-border,\\n.popup-arrow-fill {\\n  position: absolute;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-detail-container {\\n  width: 301px;\\n  min-width: 301px;\\n  box-shadow: 0 2px 6px 0 rgb(0 0 0 / 10%);\\n  background-color: #fff;\\n  border: solid 1px #d5d5d5;\\n  padding: 17px 17px 0;\\n  border-radius: 2px;\\n}\\n\\n.toastui-calendar-detail-container .toastui-calendar-section-header {\\n  margin-bottom: 6px;\\n}\\n\\n.toastui-calendar-detail-container .toastui-calendar-section-detail {\\n  margin-bottom: 16px;\\n}\\n\\n.toastui-calendar-detail-container .toastui-calendar-section-button {\\n  border-top: 1px solid #e5e5e5;\\n  font-size: 0;\\n}\\n\\n.toastui-calendar-detail-container .toastui-calendar-content {\\n  height: 24px;\\n  font-size: 12px;\\n  line-height: 2;\\n}\\n\\n.toastui-calendar-detail-container .toastui-calendar-icon {\\n  width: 12px;\\n  height: 12px;\\n  background-size: 12px;\\n  position: relative;\\n  margin-right: 8px;\\n}\\n\\n.toastui-calendar-detail-container .toastui-calendar-calendar-dot {\\n  border-radius: 50%;\\n  width: 10px;\\n  height: 10px;\\n  top: -4px;\\n  margin-right: 10px;\\n}\\n\\n.toastui-calendar-event-title {\\n  font-size: 15px;\\n  font-weight: bold;\\n  line-height: 1.6;\\n  word-break: break-all;\\n}\\n\\n.toastui-calendar-detail-item-indent {\\n  text-indent: -20px;\\n  padding-left: 20px;\\n}\\n\\n.toastui-calendar-edit-button,\\n.toastui-calendar-delete-button {\\n  display: inline-block;\\n  padding: 7px 9px 11px 9px;\\n  width: calc(50% - 1px);\\n  outline: none;\\n  background: none;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.toastui-calendar-vertical-line {\\n  background: #e5e5e5;\\n  width: 1px;\\n  height: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-top: -7px;\\n}\\n\\n.toastui-calendar-section-button .toastui-calendar-icon {\\n  margin-right: 4px;\\n  top: -3px;\\n}\\n\\n.toastui-calendar-section-button .toastui-calendar-content {\\n  position: relative;\\n  top: 2px;\\n}\\n\\n.toastui-calendar-popup-top-line {\\n  position: absolute;\\n  border-radius: 2px 2px 0 0;\\n  width: 100%;\\n  height: 4px;\\n  border: none;\\n  top: 0;\\n}\\n\\n.toastui-calendar-popup-arrow.toastui-calendar-left .toastui-calendar-popup-arrow-border {\\n  border-top: 8px solid transparent;\\n  border-right: 8px solid #d5d5d5;\\n  border-bottom: 8px solid transparent;\\n  border-left: none;\\n  left: -7px;\\n}\\n\\n.toastui-calendar-popup-arrow.toastui-calendar-left .toastui-calendar-popup-arrow-fill {\\n  border-top: 7px solid transparent;\\n  border-right: 7px solid #fff;\\n  border-bottom: 7px solid transparent;\\n  border-left: none;\\n  top: -7px;\\n  left: 1px;\\n}\\n\\n.toastui-calendar-popup-arrow.toastui-calendar-right .toastui-calendar-popup-arrow-border {\\n  border-top: 8px solid transparent;\\n  border-right: none;\\n  border-bottom: 8px solid transparent;\\n  border-left: 8px solid #d5d5d5;\\n  right: -7px;\\n}\\n\\n.toastui-calendar-popup-arrow.toastui-calendar-right .toastui-calendar-popup-arrow-fill {\\n  border-top: 7px solid transparent;\\n  border-right: none;\\n  border-bottom: 7px solid transparent;\\n  border-left: 7px solid #fff;\\n  top: -7px;\\n  right: 1px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/popup/detail.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;EACZ,gBAAgB;EAChB,wCAAwC;EACxC,sBAAsB;EACtB,yBAAyB;EACzB,oBAAoB;EACpB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,6BAA6B;EAC7B,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;EAChB,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;;EAEE,qBAAqB;EACrB,yBAAyB;EACzB,sBAAsB;EACtB,aAAa;EACb,gBAAgB;EAChB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,UAAU;EACV,YAAY;EACZ,sBAAsB;EACtB,qBAAqB;EACrB,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,0BAA0B;EAC1B,WAAW;EACX,WAAW;EACX,YAAY;EACZ,MAAM;AACR;;AAEA;EACE,iCAAiC;EACjC,+BAA+B;EAC/B,oCAAoC;EACpC,iBAAiB;EACjB,UAAU;AACZ;;AAEA;EACE,iCAAiC;EACjC,4BAA4B;EAC5B,oCAAoC;EACpC,iBAAiB;EACjB,SAAS;EACT,SAAS;AACX;;AAEA;EACE,iCAAiC;EACjC,kBAAkB;EAClB,oCAAoC;EACpC,8BAA8B;EAC9B,WAAW;AACb;;AAEA;EACE,iCAAiC;EACjC,kBAAkB;EAClB,oCAAoC;EACpC,2BAA2B;EAC3B,SAAS;EACT,UAAU;AACZ\",\"sourcesContent\":[\".detail-container {\\n  width: 301px;\\n  min-width: 301px;\\n  box-shadow: 0 2px 6px 0 rgb(0 0 0 / 10%);\\n  background-color: #fff;\\n  border: solid 1px #d5d5d5;\\n  padding: 17px 17px 0;\\n  border-radius: 2px;\\n}\\n\\n.detail-container .section-header {\\n  margin-bottom: 6px;\\n}\\n\\n.detail-container .section-detail {\\n  margin-bottom: 16px;\\n}\\n\\n.detail-container .section-button {\\n  border-top: 1px solid #e5e5e5;\\n  font-size: 0;\\n}\\n\\n.detail-container .content {\\n  height: 24px;\\n  font-size: 12px;\\n  line-height: 2;\\n}\\n\\n.detail-container .icon {\\n  width: 12px;\\n  height: 12px;\\n  background-size: 12px;\\n  position: relative;\\n  margin-right: 8px;\\n}\\n\\n.detail-container .calendar-dot {\\n  border-radius: 50%;\\n  width: 10px;\\n  height: 10px;\\n  top: -4px;\\n  margin-right: 10px;\\n}\\n\\n.event-title {\\n  font-size: 15px;\\n  font-weight: bold;\\n  line-height: 1.6;\\n  word-break: break-all;\\n}\\n\\n.detail-item-indent {\\n  text-indent: -20px;\\n  padding-left: 20px;\\n}\\n\\n.edit-button,\\n.delete-button {\\n  display: inline-block;\\n  padding: 7px 9px 11px 9px;\\n  width: calc(50% - 1px);\\n  outline: none;\\n  background: none;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.vertical-line {\\n  background: #e5e5e5;\\n  width: 1px;\\n  height: 14px;\\n  vertical-align: middle;\\n  display: inline-block;\\n  margin-top: -7px;\\n}\\n\\n.section-button .icon {\\n  margin-right: 4px;\\n  top: -3px;\\n}\\n\\n.section-button .content {\\n  position: relative;\\n  top: 2px;\\n}\\n\\n.popup-top-line {\\n  position: absolute;\\n  border-radius: 2px 2px 0 0;\\n  width: 100%;\\n  height: 4px;\\n  border: none;\\n  top: 0;\\n}\\n\\n.popup-arrow.left .popup-arrow-border {\\n  border-top: 8px solid transparent;\\n  border-right: 8px solid #d5d5d5;\\n  border-bottom: 8px solid transparent;\\n  border-left: none;\\n  left: -7px;\\n}\\n\\n.popup-arrow.left .popup-arrow-fill {\\n  border-top: 7px solid transparent;\\n  border-right: 7px solid #fff;\\n  border-bottom: 7px solid transparent;\\n  border-left: none;\\n  top: -7px;\\n  left: 1px;\\n}\\n\\n.popup-arrow.right .popup-arrow-border {\\n  border-top: 8px solid transparent;\\n  border-right: none;\\n  border-bottom: 8px solid transparent;\\n  border-left: 8px solid #d5d5d5;\\n  right: -7px;\\n}\\n\\n.popup-arrow.right .popup-arrow-fill {\\n  border-top: 7px solid transparent;\\n  border-right: none;\\n  border-bottom: 7px solid transparent;\\n  border-left: 7px solid #fff;\\n  top: -7px;\\n  right: 1px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-form-container {\\n  min-width: 474px;\\n  box-shadow: 0 2px 6px 0 rgb(0 0 0 / 10%);\\n  background-color: #fff;\\n  border: 1px solid #d5d5d5;\\n  padding: 17px;\\n  border-radius: 2px;\\n}\\n\\n.toastui-calendar-form-container .toastui-calendar-hidden-input {\\n  display: none;\\n}\\n\\n.toastui-calendar-form-container .toastui-calendar-grid-selection {\\n  font-size: 11px;\\n  font-weight: bold;\\n}\\n\\n.toastui-calendar-popup-section-item {\\n  height: 32px;\\n  padding: 0 9px 0 12px;\\n  border: 1px solid #d5d5d5;\\n  display: inline-block;\\n  font-size: 0;\\n  border-radius: 2px;\\n}\\n\\n.toastui-calendar-popup-section-item input {\\n  border: none;\\n  height: 30px;\\n  outline: none;\\n  display: inline-block;\\n}\\n\\n.toastui-calendar-popup-section-item .toastui-calendar-content {\\n  text-align: left;\\n  display: inline-block;\\n  font-size: 12px;\\n  vertical-align: middle;\\n  position: relative;\\n  padding-left: 8px;\\n}\\n\\n.toastui-calendar-popup-date-picker .toastui-calendar-content {\\n  max-width: 125px;\\n}\\n\\n.toastui-calendar-dropdown-section {\\n  position: relative;\\n}\\n\\n.toastui-calendar-dropdown-section.toastui-calendar-calendar-section {\\n  width: 176px;\\n}\\n\\n.toastui-calendar-dropdown-section .toastui-calendar-content {\\n  line-height: 30px;\\n}\\n\\n.toastui-calendar-popup-section-title input {\\n  width: 365px;\\n}\\n\\n.toastui-calendar-dot {\\n  border-radius: 8px;\\n  width: 12px;\\n  height: 12px;\\n  margin: 1px;\\n}\\n\\n.toastui-calendar-content.toastui-calendar-event-calendar {\\n  width: 125px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  top: -1px;\\n}\\n\\n.toastui-calendar-popup-section-location .toastui-calendar-content {\\n  width: 400px;\\n}\\n\\n.toastui-calendar-popup-section-allday {\\n  border: none;\\n  padding: 0 0 0 8px;\\n  cursor: pointer;\\n}\\n\\n.toastui-calendar-popup-section-allday .toastui-calendar-ic-checkbox-normal {\\n  display: inline-block;\\n  cursor: pointer;\\n  line-height: 14px;\\n  margin: 0;\\n  width: 14px;\\n  height: 14px;\\n  vertical-align: middle;\\n}\\n\\n.toastui-calendar-popup-section-allday .toastui-calendar-content {\\n  padding-left: 4px;\\n}\\n\\n.toastui-calendar-popup-date-picker {\\n  width: 176px;\\n}\\n\\n.toastui-calendar-datepicker-container > div {\\n  z-index: 1;\\n}\\n\\n.toastui-calendar-popup-date-dash {\\n  font-size: 12px;\\n  color: #d5d5d5;\\n  height: 32px;\\n  padding: 0 4px;\\n  vertical-align: middle;\\n}\\n\\n.toastui-calendar-popup-button {\\n  background: #fff;\\n  border: 1px solid #d5d5d5;\\n  border-radius: 2px;\\n  text-align: center;\\n  outline: none;\\n  font-size: 12px;\\n  cursor: pointer;\\n  color: #333;\\n}\\n\\n.toastui-calendar-popup-button.toastui-calendar-popup-section-private {\\n  height: 32px;\\n  padding: 8px;\\n  font-size: 0;\\n  margin-left: 4px;\\n}\\n\\n.toastui-calendar-popup-button .toastui-calendar-event-state {\\n  width: 58px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n}\\n\\n.toastui-calendar-dropdown-section.toastui-calendar-state-section {\\n  width: 109px;\\n}\\n\\n.toastui-calendar-dropdown-section.toastui-calendar-state-section .toastui-calendar-popup-button {\\n  width: 100%;\\n}\\n\\n.toastui-calendar-state-section .toastui-calendar-content {\\n  width: 58px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n}\\n\\n.toastui-calendar-popup-section-item.toastui-calendar-dropdown-menu-item {\\n  display: block;\\n  height: 30px;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.toastui-calendar-dropdown-menu-item .toastui-calendar-content {\\n  display: inline-block;\\n  position: relative;\\n  padding-left: 8px;\\n  text-align: left;\\n  font-size: 12px;\\n  vertical-align: middle;\\n}\\n\\n.toastui-calendar-popup-section-item.toastui-calendar-popup-button {\\n  height: 32px;\\n  font-size: 0;\\n  top: -1px;\\n}\\n\\n.toastui-calendar-popup-arrow.toastui-calendar-top .toastui-calendar-popup-arrow-border {\\n  border-top: none;\\n  border-right: 8px solid transparent;\\n  border-bottom: 8px solid #d5d5d5;\\n  border-left: 8px solid transparent;\\n  left: calc(50% - 8px);\\n  top: -7px;\\n}\\n\\n.toastui-calendar-popup-arrow.toastui-calendar-top .toastui-calendar-popup-arrow-fill {\\n  border-top: none;\\n  border-right: 7px solid transparent;\\n  border-bottom: 7px solid #fff;\\n  border-left: 7px solid transparent;\\n  left: -7px;\\n  top: 1px;\\n}\\n\\n.toastui-calendar-popup-arrow.toastui-calendar-bottom .toastui-calendar-popup-arrow-border {\\n  border-top: 8px solid #d5d5d5;\\n  border-right: 8px solid transparent;\\n  border-bottom: none;\\n  border-left: 8px solid transparent;\\n  bottom: -7px;\\n}\\n\\n.toastui-calendar-popup-arrow.toastui-calendar-bottom .toastui-calendar-popup-arrow-fill {\\n  border-top: 7px solid #fff;\\n  border-right: 7px solid transparent;\\n  border-bottom: none;\\n  border-left: 7px solid transparent;\\n  left: -7px;\\n  bottom: 1px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/popup/form.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;EAChB,wCAAwC;EACxC,sBAAsB;EACtB,yBAAyB;EACzB,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,qBAAqB;EACrB,yBAAyB;EACzB,qBAAqB;EACrB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;EAChB,qBAAqB;EACrB,eAAe;EACf,sBAAsB;EACtB,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,SAAS;AACX;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,eAAe;EACf,iBAAiB;EACjB,SAAS;EACT,WAAW;EACX,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,cAAc;EACd,YAAY;EACZ,cAAc;EACd,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,kBAAkB;EAClB,kBAAkB;EAClB,aAAa;EACb,eAAe;EACf,eAAe;EACf,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,mCAAmC;EACnC,gCAAgC;EAChC,kCAAkC;EAClC,qBAAqB;EACrB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,mCAAmC;EACnC,6BAA6B;EAC7B,kCAAkC;EAClC,UAAU;EACV,QAAQ;AACV;;AAEA;EACE,6BAA6B;EAC7B,mCAAmC;EACnC,mBAAmB;EACnB,kCAAkC;EAClC,YAAY;AACd;;AAEA;EACE,0BAA0B;EAC1B,mCAAmC;EACnC,mBAAmB;EACnB,kCAAkC;EAClC,UAAU;EACV,WAAW;AACb\",\"sourcesContent\":[\".form-container {\\n  min-width: 474px;\\n  box-shadow: 0 2px 6px 0 rgb(0 0 0 / 10%);\\n  background-color: #fff;\\n  border: 1px solid #d5d5d5;\\n  padding: 17px;\\n  border-radius: 2px;\\n}\\n\\n.form-container .hidden-input {\\n  display: none;\\n}\\n\\n.form-container .grid-selection {\\n  font-size: 11px;\\n  font-weight: bold;\\n}\\n\\n.popup-section-item {\\n  height: 32px;\\n  padding: 0 9px 0 12px;\\n  border: 1px solid #d5d5d5;\\n  display: inline-block;\\n  font-size: 0;\\n  border-radius: 2px;\\n}\\n\\n.popup-section-item input {\\n  border: none;\\n  height: 30px;\\n  outline: none;\\n  display: inline-block;\\n}\\n\\n.popup-section-item .content {\\n  text-align: left;\\n  display: inline-block;\\n  font-size: 12px;\\n  vertical-align: middle;\\n  position: relative;\\n  padding-left: 8px;\\n}\\n\\n.popup-date-picker .content {\\n  max-width: 125px;\\n}\\n\\n.dropdown-section {\\n  position: relative;\\n}\\n\\n.dropdown-section.calendar-section {\\n  width: 176px;\\n}\\n\\n.dropdown-section .content {\\n  line-height: 30px;\\n}\\n\\n.popup-section-title input {\\n  width: 365px;\\n}\\n\\n.dot {\\n  border-radius: 8px;\\n  width: 12px;\\n  height: 12px;\\n  margin: 1px;\\n}\\n\\n.content.event-calendar {\\n  width: 125px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  top: -1px;\\n}\\n\\n.popup-section-location .content {\\n  width: 400px;\\n}\\n\\n.popup-section-allday {\\n  border: none;\\n  padding: 0 0 0 8px;\\n  cursor: pointer;\\n}\\n\\n.popup-section-allday .ic-checkbox-normal {\\n  display: inline-block;\\n  cursor: pointer;\\n  line-height: 14px;\\n  margin: 0;\\n  width: 14px;\\n  height: 14px;\\n  vertical-align: middle;\\n}\\n\\n.popup-section-allday .content {\\n  padding-left: 4px;\\n}\\n\\n.popup-date-picker {\\n  width: 176px;\\n}\\n\\n.datepicker-container > div {\\n  z-index: 1;\\n}\\n\\n.popup-date-dash {\\n  font-size: 12px;\\n  color: #d5d5d5;\\n  height: 32px;\\n  padding: 0 4px;\\n  vertical-align: middle;\\n}\\n\\n.popup-button {\\n  background: #fff;\\n  border: 1px solid #d5d5d5;\\n  border-radius: 2px;\\n  text-align: center;\\n  outline: none;\\n  font-size: 12px;\\n  cursor: pointer;\\n  color: #333;\\n}\\n\\n.popup-button.popup-section-private {\\n  height: 32px;\\n  padding: 8px;\\n  font-size: 0;\\n  margin-left: 4px;\\n}\\n\\n.popup-button .event-state {\\n  width: 58px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n}\\n\\n.dropdown-section.state-section {\\n  width: 109px;\\n}\\n\\n.dropdown-section.state-section .popup-button {\\n  width: 100%;\\n}\\n\\n.state-section .content {\\n  width: 58px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n}\\n\\n.popup-section-item.dropdown-menu-item {\\n  display: block;\\n  height: 30px;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.dropdown-menu-item .content {\\n  display: inline-block;\\n  position: relative;\\n  padding-left: 8px;\\n  text-align: left;\\n  font-size: 12px;\\n  vertical-align: middle;\\n}\\n\\n.popup-section-item.popup-button {\\n  height: 32px;\\n  font-size: 0;\\n  top: -1px;\\n}\\n\\n.popup-arrow.top .popup-arrow-border {\\n  border-top: none;\\n  border-right: 8px solid transparent;\\n  border-bottom: 8px solid #d5d5d5;\\n  border-left: 8px solid transparent;\\n  left: calc(50% - 8px);\\n  top: -7px;\\n}\\n\\n.popup-arrow.top .popup-arrow-fill {\\n  border-top: none;\\n  border-right: 7px solid transparent;\\n  border-bottom: 7px solid #fff;\\n  border-left: 7px solid transparent;\\n  left: -7px;\\n  top: 1px;\\n}\\n\\n.popup-arrow.bottom .popup-arrow-border {\\n  border-top: 8px solid #d5d5d5;\\n  border-right: 8px solid transparent;\\n  border-bottom: none;\\n  border-left: 8px solid transparent;\\n  bottom: -7px;\\n}\\n\\n.popup-arrow.bottom .popup-arrow-fill {\\n  border-top: 7px solid #fff;\\n  border-right: 7px solid transparent;\\n  border-bottom: none;\\n  border-left: 7px solid transparent;\\n  left: -7px;\\n  bottom: 1px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./common.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./seeMore.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./form.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_3___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./detail.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_3___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-see-more-container {\\n  display: block;\\n  position: absolute;\\n  z-index: 1;\\n}\\n\\n.toastui-calendar-see-more {\\n  height: inherit;\\n  padding: 5px;\\n}\\n\\n.toastui-calendar-more-title-date {\\n  font-size: 23px;\\n  color: #333;\\n}\\n\\n.toastui-calendar-more-title-day {\\n  font-size: 12px;\\n  color: #333;\\n}\\n\\n.toastui-calendar-month-more-list {\\n  overflow: auto;\\n  padding: 0 17px;\\n}\\n\\n.toastui-calendar-see-more-header {\\n  position: relative;\\n  border-bottom: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/popup/seeMore.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,cAAc;EACd,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;AACrB\",\"sourcesContent\":[\".see-more-container {\\n  display: block;\\n  position: absolute;\\n  z-index: 1;\\n}\\n\\n.see-more {\\n  height: inherit;\\n  padding: 5px;\\n}\\n\\n.more-title-date {\\n  font-size: 23px;\\n  color: #333;\\n}\\n\\n.more-title-day {\\n  font-size: 12px;\\n  color: #333;\\n}\\n\\n.month-more-list {\\n  overflow: auto;\\n  padding: 0 17px;\\n}\\n\\n.see-more-header {\\n  position: relative;\\n  border-bottom: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-column {\\n  position: relative;\\n}\\n\\n.toastui-calendar-column .toastui-calendar-gridline-half {\\n  position: absolute;\\n  width: 100%;\\n}\\n\\n.toastui-calendar-column .toastui-calendar-grid-selection {\\n  position: absolute;\\n  right: 10px;\\n  left: 1px;\\n  padding: 3px;\\n}\\n\\n.toastui-calendar-column .toastui-calendar-grid-selection .toastui-calendar-grid-selection-label {\\n  font-size: 11px;\\n  font-weight: bold;\\n}\\n\\n.toastui-calendar-column .toastui-calendar-events {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/timegrid/column.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,YAAY;AACd;;AAEA;EACE,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,QAAQ;EACR,SAAS;AACX\",\"sourcesContent\":[\".column {\\n  position: relative;\\n}\\n\\n.column .gridline-half {\\n  position: absolute;\\n  width: 100%;\\n}\\n\\n.column .grid-selection {\\n  position: absolute;\\n  right: 10px;\\n  left: 1px;\\n  padding: 3px;\\n}\\n\\n.column .grid-selection .grid-selection-label {\\n  font-size: 11px;\\n  font-weight: bold;\\n}\\n\\n.column .events {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./timeColumn.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./column.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js!./timegrid.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-timegrid-time-column {\\n  font-size: 11px;\\n  height: 100%;\\n}\\n\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-hour-rows {\\n  display: inline-block;\\n  position: relative;\\n  height: 100%;\\n}\\n\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-time {\\n  text-align: right;\\n  position: absolute;\\n  right: 5px;\\n  color: #333;\\n}\\n\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-time.toastui-calendar-timegrid-time-past {\\n  font-weight: normal;\\n}\\n\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-time.toastui-calendar-timegrid-time-first {\\n  line-height: normal;\\n  visibility: hidden;\\n}\\n\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-time.toastui-calendar-timegrid-time-last {\\n  height: 0;\\n  visibility: hidden;\\n}\\n\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-time .toastui-calendar-timegrid-time-label,\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-time span {\\n  transform: translateY(-50%);\\n  position: absolute;\\n  right: 0;\\n}\\n\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-current-time .toastui-calendar-timegrid-day-difference {\\n  position: absolute;\\n  right: 0;\\n  bottom: 100%;\\n}\\n\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-time-hidden {\\n  visibility: hidden;\\n}\\n\\n.toastui-calendar-timegrid-time-column .toastui-calendar-timegrid-current-time {\\n  position: absolute;\\n  text-align: right;\\n  right: 5px;\\n  font-size: 11px;\\n  font-weight: normal;\\n  transform: translateY(-50%);\\n}\\n\\n.toastui-calendar-timezone-labels-slot {\\n  display: table;\\n  table-layout: fixed;\\n  position: absolute;\\n  height: 40px;\\n  border-bottom: 1px solid #e9e9e9;\\n  background-color: #fff;\\n}\\n\\n.toastui-calendar-timezone-labels-slot .toastui-calendar-timegrid-timezone-label {\\n  display: table-cell;\\n  background-color: #fff;\\n  font-size: 11px;\\n  border-right: 1px solid #e5e5e5;\\n  vertical-align: middle;\\n  padding-right: 5px;\\n  text-align: right;\\n}\\n\\n.toastui-calendar-timezone-labels-slot .toastui-calendar-timegrid-timezone-collapse-button {\\n  position: absolute;\\n  top: 2px;\\n  bottom: 2px;\\n  width: 10px;\\n  border: 1px solid #dddddd;\\n  border-left: none;\\n  background: transparent;\\n  cursor: pointer;\\n}\\n\\n.toastui-calendar-timezone-labels-slot .toastui-calendar-timegrid-timezone-collapse-button .toastui-calendar-icon {\\n  width: 4px;\\n  height: 7px;\\n  transform: translateX(-50%);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/timegrid/timeColumn.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,UAAU;EACV,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,SAAS;EACT,kBAAkB;AACpB;;AAEA;;EAEE,2BAA2B;EAC3B,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,UAAU;EACV,eAAe;EACf,mBAAmB;EACnB,2BAA2B;AAC7B;;AAEA;EACE,cAAc;EACd,mBAAmB;EACnB,kBAAkB;EAClB,YAAY;EACZ,gCAAgC;EAChC,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;EACnB,sBAAsB;EACtB,eAAe;EACf,+BAA+B;EAC/B,sBAAsB;EACtB,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,WAAW;EACX,yBAAyB;EACzB,iBAAiB;EACjB,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,UAAU;EACV,WAAW;EACX,2BAA2B;AAC7B\",\"sourcesContent\":[\".timegrid-time-column {\\n  font-size: 11px;\\n  height: 100%;\\n}\\n\\n.timegrid-time-column .timegrid-hour-rows {\\n  display: inline-block;\\n  position: relative;\\n  height: 100%;\\n}\\n\\n.timegrid-time-column .timegrid-time {\\n  text-align: right;\\n  position: absolute;\\n  right: 5px;\\n  color: #333;\\n}\\n\\n.timegrid-time-column .timegrid-time.timegrid-time-past {\\n  font-weight: normal;\\n}\\n\\n.timegrid-time-column .timegrid-time.timegrid-time-first {\\n  line-height: normal;\\n  visibility: hidden;\\n}\\n\\n.timegrid-time-column .timegrid-time.timegrid-time-last {\\n  height: 0;\\n  visibility: hidden;\\n}\\n\\n.timegrid-time-column .timegrid-time .timegrid-time-label,\\n.timegrid-time-column .timegrid-time span {\\n  transform: translateY(-50%);\\n  position: absolute;\\n  right: 0;\\n}\\n\\n.timegrid-time-column .timegrid-current-time .timegrid-day-difference {\\n  position: absolute;\\n  right: 0;\\n  bottom: 100%;\\n}\\n\\n.timegrid-time-column .timegrid-time-hidden {\\n  visibility: hidden;\\n}\\n\\n.timegrid-time-column .timegrid-current-time {\\n  position: absolute;\\n  text-align: right;\\n  right: 5px;\\n  font-size: 11px;\\n  font-weight: normal;\\n  transform: translateY(-50%);\\n}\\n\\n.timezone-labels-slot {\\n  display: table;\\n  table-layout: fixed;\\n  position: absolute;\\n  height: 40px;\\n  border-bottom: 1px solid #e9e9e9;\\n  background-color: #fff;\\n}\\n\\n.timezone-labels-slot .timegrid-timezone-label {\\n  display: table-cell;\\n  background-color: #fff;\\n  font-size: 11px;\\n  border-right: 1px solid #e5e5e5;\\n  vertical-align: middle;\\n  padding-right: 5px;\\n  text-align: right;\\n}\\n\\n.timezone-labels-slot .timegrid-timezone-collapse-button {\\n  position: absolute;\\n  top: 2px;\\n  bottom: 2px;\\n  width: 10px;\\n  border: 1px solid #dddddd;\\n  border-left: none;\\n  background: transparent;\\n  cursor: pointer;\\n}\\n\\n.timezone-labels-slot .timegrid-timezone-collapse-button .icon {\\n  width: 4px;\\n  height: 7px;\\n  transform: translateX(-50%);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toastui-calendar-panel.toastui-calendar-time {\\n  overflow-y: auto;\\n}\\n\\n.toastui-calendar-timegrid {\\n  user-select: none;\\n  position: relative;\\n  height: 200%;\\n  min-height: 900px;\\n}\\n\\n.toastui-calendar-timegrid .toastui-calendar-timegrid-scroll-area {\\n  position: relative;\\n  height: 100%;\\n}\\n\\n.toastui-calendar-timegrid .toastui-calendar-columns {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: hidden;\\n}\\n\\n.toastui-calendar-timegrid .toastui-calendar-columns .toastui-calendar-gridline-half {\\n  position: absolute;\\n  width: 100%;\\n}\\n\\n.toastui-calendar-timegrid .toastui-calendar-columns .toastui-calendar-column {\\n  display: inline-block;\\n  height: 100%;\\n}\\n\\n.toastui-calendar-timegrid .toastui-calendar-timegrid-now-indicator {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.toastui-calendar-timegrid .toastui-calendar-timegrid-now-indicator .toastui-calendar-timegrid-now-indicator-left {\\n  position: absolute;\\n}\\n\\n.toastui-calendar-timegrid .toastui-calendar-timegrid-now-indicator .toastui-calendar-timegrid-now-indicator-marker {\\n  position: absolute;\\n  width: 9px;\\n  height: 9px;\\n  border-radius: 50%;\\n  margin: -4px 0 0 -5px;\\n}\\n\\n.toastui-calendar-timegrid .toastui-calendar-timegrid-now-indicator .toastui-calendar-timegrid-now-indicator-today {\\n  position: absolute;\\n}\\n\\n.toastui-calendar-timegrid .toastui-calendar-timegrid-now-indicator .toastui-calendar-timegrid-now-indicator-right {\\n  position: absolute;\\n  right: 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/timegrid/timegrid.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,QAAQ;AACV;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,kBAAkB;EAClB,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;AACV\",\"sourcesContent\":[\".panel.time {\\n  overflow-y: auto;\\n}\\n\\n.timegrid {\\n  user-select: none;\\n  position: relative;\\n  height: 200%;\\n  min-height: 900px;\\n}\\n\\n.timegrid .timegrid-scroll-area {\\n  position: relative;\\n  height: 100%;\\n}\\n\\n.timegrid .columns {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: hidden;\\n}\\n\\n.timegrid .columns .gridline-half {\\n  position: absolute;\\n  width: 100%;\\n}\\n\\n.timegrid .columns .column {\\n  display: inline-block;\\n  height: 100%;\\n}\\n\\n.timegrid .timegrid-now-indicator {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.timegrid .timegrid-now-indicator .timegrid-now-indicator-left {\\n  position: absolute;\\n}\\n\\n.timegrid .timegrid-now-indicator .timegrid-now-indicator-marker {\\n  position: absolute;\\n  width: 9px;\\n  height: 9px;\\n  border-radius: 50%;\\n  margin: -4px 0 0 -5px;\\n}\\n\\n.timegrid .timegrid-now-indicator .timegrid-now-indicator-today {\\n  position: absolute;\\n}\\n\\n.timegrid .timegrid-now-indicator .timegrid-now-indicator-right {\\n  position: absolute;\\n  right: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var map = {\n\t\"./af\": \"../../node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"../../node_modules/moment/locale/af.js\",\n\t\"./ar\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./az\": \"../../node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"../../node_modules/moment/locale/az.js\",\n\t\"./be\": \"../../node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"../../node_modules/moment/locale/be.js\",\n\t\"./bg\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"../../node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"../../node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./br\": \"../../node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"../../node_modules/moment/locale/br.js\",\n\t\"./bs\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./da\": \"../../node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"../../node_modules/moment/locale/da.js\",\n\t\"./de\": \"../../node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../node_modules/moment/locale/de.js\",\n\t\"./dv\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./el\": \"../../node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"../../node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"../../node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"../../node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"../../node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"../../node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./es\": \"../../node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"../../node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"../../node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"../../node_modules/moment/locale/es.js\",\n\t\"./et\": \"../../node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"../../node_modules/moment/locale/et.js\",\n\t\"./eu\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"../../node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"../../node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"../../node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"../../node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./he\": \"../../node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"../../node_modules/moment/locale/he.js\",\n\t\"./hi\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"../../node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"../../node_modules/moment/locale/id.js\",\n\t\"./is\": \"../../node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"../../node_modules/moment/locale/is.js\",\n\t\"./it\": \"../../node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"../../node_modules/moment/locale/it.js\",\n\t\"./ja\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./km\": \"../../node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"../../node_modules/moment/locale/km.js\",\n\t\"./kn\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./me\": \"../../node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"../../node_modules/moment/locale/me.js\",\n\t\"./mi\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./my\": \"../../node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"../../node_modules/moment/locale/my.js\",\n\t\"./nb\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"../../node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"../../node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./se\": \"../../node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"../../node_modules/moment/locale/se.js\",\n\t\"./si\": \"../../node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"../../node_modules/moment/locale/si.js\",\n\t\"./sk\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./te\": \"../../node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"../../node_modules/moment/locale/te.js\",\n\t\"./tet\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./th\": \"../../node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"../../node_modules/moment/locale/th.js\",\n\t\"./tk\": \"../../node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"../../node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"../../node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"../../node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"../../node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./index.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/* (ignored) */","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/preact\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('.', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(ts|tsx))$/)], module, false);"],"names":[],"sourceRoot":""}